[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Design](#design)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * [UI component](#ui-component)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * [Logic component](#logic-component)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * [Model component](#model-component)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * [Storage component](#storage-component)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * [Common classes](#common-classes)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * [Relationship Feature: Linking Contacts](#relationship-feature-linking-contacts)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * [Event Feature: Managing Events](#event-feature-managing-events)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * [Find Commands with Substring Matching](#find-commands-with-substring-matching)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * [Sort Command](#sort-command)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * [Redo Command](#redo-command)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * [Product scope](#product-scope)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * [User stories](#user-stories)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * [Use cases](#use-cases)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * [Glossary](#glossary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"* **[Hawking Date/Time Parser](https://github.com/zoho/hawking):** Used for natural language date parsing for Event commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Setting up, getting started","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Design","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"281\"  alt\u003d\"Architecture Diagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"544\"  alt\u003d\"Architecture Sequence Diagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"314\"  alt\u003d\"Logic Component\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"* displays `Person` objects, including their associated `Relationship`s and `Tag`s, using the `PersonCard` within the `PersonListPanel`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"* displays `Event` objects using the `EventCard` within the `EventListPanel` (if implemented).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays objects residing in the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"534\" alt\u003d\"Logic Class Diagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`, `AddRelationshipCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`, `AddRelationshipCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person, add a relationship, add an event).\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\" alt\u003d\"Parser Classes\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`, `AddRelationshipCommandParser`, `AddEventCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`, `AddRelationshipCommand`, `AddEventCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"#### Parser utilities","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `ParserUtil`: Provides utility methods for parsing common fields like `Name`, `Phone`, `Email`, `Tag`, `Index`, and now also `EventName` and `Contact` (as a `Person`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `DateParserUtil`: Uses the Hawking library to provide natural language date parsing capabilities (e.g., \"tomorrow\", \"next Monday\", \"2025-03-15\"). This is used by event-related command parsers.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `CliSyntax`: Defines the prefixes (e.g., `n/`, `p/`, `u/`, `fn/`, `en/`, `d/`) used in the command line interface.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (in `UniquePersonList`), `Relationship` objects (in `UniqueRelationshipList`), and `Event` objects (in an `ObservableList`). All these are encapsulated within the `AddressBook` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 objects (e.g., results of a search query) as separate _filtered_ lists (`FilteredList\u003cPerson\u003e`, `FilteredList\u003cRelationship\u003e`, `FilteredList\u003cEvent\u003e`) which are exposed to outsiders as unmodifiable `ObservableList`s that can be \u0027observed\u0027.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"**Key Data Structures:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"*   **`Person`**: Represents a contact with fields like `Name`, `Phone`, `Email`, `Address`, `Social`, `Tag`s, and a unique `id`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"*   **`Relationship`**: Represents a directed connection between two `Person`s identified by their unique IDs. It has a `forwardName` (e.g., \"Boss of\"), a `reverseName` (e.g., \"Reports to\"), and can have `Tag`s (e.g., \"Work\"). See the [Relationship Feature](#relationship-feature-linking-contacts) section for details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"*   **`Event`**: Represents an event with a `name`, `date` (LocalDateTime), `location`, `description`, `Tag`s, and a list of associated `Person` contacts (`UniquePersonList`). See the [Event Feature](#event-feature-managing-events) section for details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"*   **`UniquePersonList`**: Enforces uniqueness among `Person` objects based on `isSamePerson`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"*   **`UniqueRelationshipList`**: Enforces uniqueness among `Relationship` objects based on `isSameRelationship`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-T09-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"* can save `AddressBook` data (including `Person`s, `Relationship`s, and `Event`s) and `UserPref` data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"* uses Jackson-friendly intermediate classes like `JsonAdaptedPerson`, `JsonAdaptedRelationship`, and `JsonAdaptedEvent` to handle the serialization and deserialization process.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `JsonAdaptedEvent` uses `DateParserUtil` from the Logic component\u0027s parser utilities to ensure consistent date handling between user input and stored data. While this increases coupling slightly, it maintains backward compatibility and ensures data integrity.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package. Examples include logging (`LogsCenter`), core utilities (`Config`, `GuiSettings`, `Version`), exceptions (`DataLoadingException`), and utility classes (`AppUtil`, `StringUtil`, `CollectionUtil`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Relationship Feature: Linking Contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"The Relationship feature allows users to define connections between contacts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Core Components:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"*   **`Relationship` Class:** Stores the core data:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    *   `firstUserId`, `secondUserId`: The unique IDs (`Person::getId`) of the two contacts involved. Using IDs makes the relationship robust against changes in contact details like name or phone.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    *   `forwardName`: The description of the relationship from the perspective of `firstUserId` (e.g., \"Parent of\").","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    *   `reverseName`: The description from the perspective of `secondUserId` (e.g., \"Child of\"). This allows for asymmetric relationships.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    *   `tags`: A `Set\u003cTag\u003e` for categorizing the relationship (e.g., \"Work\", \"Family\").","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"*   **`UniqueRelationshipList`:** Manages the collection of `Relationship` objects within the `AddressBook`. It ensures that duplicate relationships (based on the pair of users and the specific forward/reverse names) are not added.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"*   **Relationship Commands:** (`addRelationship`, `deleteRelationship`, `addRelationshipTag`, `deleteRelationshipTag`, `findRelationship`) Provide the user interface for interacting with relationships.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"*   **Relationship Parsers:** Parse the user input for relationship commands, handling prefixes like `u/` (userId), `fn/` (forward name), `rn/` (reverse name), and `t/` (tag).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"*   **UI Display (`PersonCard`)**: Each `PersonCard` in the list displays the relationships relevant to that person. It fetches the relationships involving the person\u0027s ID from the `Model` and displays the appropriate relationship name (`forwardName` or `reverseName`) along with the *name* of the other person involved. To get the other person\u0027s name, it looks up the other person in the `AddressBook` using their ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Implementation Details:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"*   **Identification:** Relationships are primarily identified by the unique IDs of the two persons involved. When deleting or modifying tags, the user provides both IDs and *one* of the relationship names (either forward or reverse). The system checks against both possibilities (`forwardName` and `reverseName`) to find the correct relationship. See `Relationship::isSameRelationship(String, String, String)`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"*   **Uniqueness:** `UniqueRelationshipList` prevents adding a relationship if another relationship with the exact same pair of IDs and same forward/reverse names already exists (considering both directions).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"*   **Display Logic:** The `PersonListPanel` listens for changes in the `ObservableList\u003cRelationship\u003e` from the `Model`. When relationships are added, deleted, or updated (e.g., tags changed), it identifies the `Person` objects involved and triggers a refresh of the `ListView` or specific `PersonCard`s to reflect the changes.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Sequence Diagrams:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"*   **Adding a Relationship:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/AddRelationshipSequenceDiagram.png\" alt\u003d\"AddRelationshipSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"*   **Deleting a Relationship:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/DeleteRelationshipSequenceDiagram.png\" alt\u003d\"DeleteRelationshipSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"*   **Adding a Tag to a Relationship:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/AddTagToRelationshipSequenceDiagram.png\" alt\u003d\"AddTagToRelationshipSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"*   **Deleting a Tag from a Relationship:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/DeleteTagFromRelationshipSequenceDiagram.png\" alt\u003d\"DeleteTagFromRelationshipSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Class Diagrams for Detail:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"*   \u003cimg src\u003d\"images/RelationshipClassDiagram.png\" alt\u003d\"RelationshipClassDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"*   \u003cimg src\u003d\"images/UniqueRelationshipListClassDiagram.png\" alt\u003d\"UniqueRelationshipListClassDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"*   \u003cimg src\u003d\"images/JsonAdaptedRelationshipClassDiagram.png\" alt\u003d\"JsonAdaptedRelationshipClassDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Design Considerations:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"*   **Alternative 1: Using Person objects directly:** Storing direct references to `Person` objects in `Relationship` would create strong coupling and potential issues if a `Person` object is deleted or modified in ways that affect equality.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    *   *Pros:* Simpler lookup of person details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    *   *Cons:* Less robust, harder to manage lifecycle, potential memory leaks if references aren\u0027t cleared properly.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"*   **Alternative 2 (Current Choice): Using Person IDs:** Storing unique, immutable `Person` IDs.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    *   *Pros:* Decouples `Relationship` from `Person` object instances, robust against `Person` updates, easier serialization.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    *   *Cons:* Requires looking up `Person` details (like name) from the `AddressBook` or `Model` when displaying relationships.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"*   **Relationship Name Storage:** Using separate `forwardName` and `reverseName` allows representing asymmetric relationships clearly. An alternative could be a single name and a direction flag, but the current approach is arguably more descriptive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Event Feature: Managing Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"The Event feature allows users to schedule and manage events, associating contacts with them.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"**Core Components:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"*   **`Event` Class:** Stores the event details:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    *   `id`: A unique identifier automatically generated for each event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    *   `name`: The name of the event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    *   `date`: The date and time of the event (`LocalDateTime`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    *   `location`: The physical location of the event (optional).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    *   `description`: A description of the event (optional).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    *   `tags`: A `Set\u003cTag\u003e` for categorizing the event (e.g., \"Meeting\", \"Conference\").","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    *   `contacts`: A `UniquePersonList` containing the `Person` objects associated with this event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"*   **`AddressBook`:** Stores the list of all `Event` objects (currently as a simple `ObservableList`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"*   **Event Commands:** (`addEvent`, `deleteEvent`, `addEventContact`, `deleteEventContact`, `addEventTag`, `deleteEventTag`, `updateEventDate`, `updateEventDesc`, `updateEventLoc`) Provide the user interface for managing events.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"*   **Event Parsers:** Parse user input for event commands, utilizing `DateParserUtil` for flexible date input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"*   **UI Display (`EventCard`, `EventListPanel`):** (If implemented) Display event information. `EventCard` shows details of a single event. `EventListPanel` shows the list of events.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Implementation Details:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"*   **Date Handling:** `DateParserUtil` uses the Hawking library to parse natural language dates provided by the user (e.g., \"next Friday at 2pm\", \"2025-04-10 10:00\"). The parsed date is stored as a standard `LocalDateTime`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"*   **Contact Association:** Events store references to actual `Person` objects within their internal `UniquePersonList`. When an event is added using `addEvent`, the command parser creates *temporary* `Person` objects based on the names provided (`c/Contact Name`). The `AddEventCommand` then adds the event to the model and iterates through these temporary contacts. For each contact, it adds them to the *event\u0027s* contact list and also ensures the contact exists in the main `AddressBook` person list (adding them if necessary with default details). This ensures consistency.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"*   **Modification:** Event properties (date, description, location) and associated data (tags, contacts) are modified using specific commands. Adding/removing tags or contacts, or updating properties, typically involves creating a *new* `Event` object with the changes and replacing the old one in the `Model` using `Model::updateEvent`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Sequence Diagrams:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"*   **Adding an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/AddEventCommandDiagram.png\" alt\u003d\"AddEventCommandDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"*   **Updating Event Description:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/UpdateEventDescriptionCommandDiagram.png\" alt\u003d\"UpdateEventDescriptionCommandDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"*   **Updating Event Location:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/UpdateEventLocation.png\" alt\u003d\"UpdateEventLocation\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"*   **Updating Event Date:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/UpdateEventDate.png\" alt\u003d\"UpdateEventDate\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"*   **Adding a Tag to an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/AddTagToEventDiagram.png\" alt\u003d\"AddTagToEventDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"*   **Deleting a Tag from an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/DeleteTagFromEvent.png\" alt\u003d\"DeleteTagFromEvent\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"*   **Adding a Contact to an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/AddContactToEvent.png\" alt\u003d\"AddContactToEvent\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"*   **Deleting a Contact from an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/DeleteContactFromEvent.png\" alt\u003d\"DeleteContactFromEvent\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"*   **Deleting an Event:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"images/DeleteEventCommandDiagram.png\" alt\u003d\"DeleteEventCommandDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Design Considerations:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"*   **Event Storage:** Currently uses a standard `ObservableList` in `AddressBook`. A `UniqueEventList` could be implemented if strict uniqueness based on certain criteria (e.g., name and date) is required, though generating a unique ID simplifies this.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"*   **Contact Management:** Storing `Person` references directly in the event\u0027s list simplifies access to contact details but requires careful handling, especially during deletion (ensuring contacts are not deleted from the main list just because they are removed from an event, and handling cases where a contact associated with an event is deleted from the main list). The current implementation adds contacts to the main list if they don\u0027t exist, which is one approach to manage this.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"### Find Commands with Substring Matching","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"The `findName`, `findEmail`, `findPhone`, `findAddress`, `findSocial`, `findTag`, and `findRelationship` commands have been implemented to use case-insensitive *substring* matching instead of full word matching.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"*   **Mechanism:** Each `findXYZ` command uses a corresponding `XYZContainsKeywordsAsSubstringPredicate` (e.g., `NameContainsKeywordsAsSubstringPredicate`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"*   **Predicate Logic:** Inside the `test` method of each predicate, it streams through the user-provided keywords. For each keyword, it checks if the relevant field in the `Person` object (e.g., `person.getName().fullName`) contains the keyword as a substring, ignoring case (`toLowerCase().contains(keyword.toLowerCase())`). The predicate returns `true` if *any* keyword matches as a substring within the field.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"*   **Example (`findName`):** If a person\u0027s name is \"Alex Yeoh\", `findName Alex` will match, `findName Yeoh` will match, and `findName lex` will also match.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* **Rationale:** Substring matching provides more flexibility for users who may not remember the exact full name, email, etc., allowing for partial matches.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"TrKNguyen"},"content":"*   **Special Note for `findRelationship`:** The current implementation of `RelationshipContainsKeywordsAsSubstringPredicate` checks whether the role name in the relationship matches the specified keyword. It should filter persons based on their specific role name in the relationship matching the keyword","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TrKNguyen"},"content":"*   **Example (`findRelationship`):** In a relationship where Person A has role \"Boss\" and Person B has role \"Employee\", `findRelationship Boss` should return only Person A and `findRelationship Employee` should return only Person B","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"**Sequence Diagram Example (`findName`):**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/FindNameSequenceDiagram.png\" alt\u003d\"FindNameSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"*(Similar diagrams exist for other find commands like `findEmail`, `findPhone`, etc.)*","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Sort Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"TrKNguyen"},"content":"The `sort` command allows sorting the displayed person list based on one or more fields (`name`, `phone`, `email`, `address`, `tags`, `socials`). Field names are case-insensitive, so both `sort name` and `sort Name` will work the same way.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"*   **Mechanism:** The `SortCommandParser` parses the field names and an optional `-r` flag for reverse order. The `SortCommand` then creates a `Comparator\u003cPerson\u003e` based on the specified fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"TrKNguyen"},"content":"*   **Comparator Creation:** It starts with a comparator for the first field. For subsequent fields, it uses `thenComparing` to chain the sorting criteria. String fields (`name`, `phone`, `email`, `address`) use case-insensitive comparison. Collection fields (`tags`, `socials`) are compared using their string representation (HashSet\u0027s `toString()` method), which means sorting is based on the lexicographical comparison of their string values rather than individual elements or properties of the sets.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"*   **Execution:** The `SortCommand` calls `Model.updateSortedPersonList(comparator)`, which in turn calls `AddressBook.sortPersons(comparator)`. This sorts the underlying `UniquePersonList` within the `AddressBook`. Since the `FilteredList` in `ModelManager` wraps the `ObservableList` from `AddressBook`, changes in the source list\u0027s order are reflected in the filtered/sorted list displayed in the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Sequence Diagram:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/SortSequenceDiagram.png\" alt\u003d\"SortSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"TrKNguyen"},"content":"### Important Note on Character Encoding","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"TrKNguyen"},"content":"**Limitation:** The case-insensitive substring matching in all find commands (`findName`, `findEmail`, etc.) and sorting operations work properly only with standard English alphabet characters. When using non-ASCII characters, especially those with special case mappings (like Turkish İ/ı and I/i), the behavior is undefined.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"TrKNguyen"},"content":"**Technical Explanation:** The implementation uses Java\u0027s `toLowerCase()` method without specifying a locale, which applies default case mapping rules. This doesn\u0027t correctly handle locale-specific case mappings such as Turkish dotted/dotless i characters (where lowercase \u0027ı\u0027 corresponds to uppercase \u0027I\u0027, and lowercase \u0027i\u0027 corresponds to uppercase \u0027İ\u0027). Similarly, sorting operations may not produce expected results when comparing strings with non-ASCII characters.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"TrKNguyen"},"content":"**Example of Issue:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"TrKNguyen"},"content":"- When searching with Turkish characters, queries like `add n/A s/İ add n/B s/I findSocial s/I` may return unexpected results (returns both persons when only B should match).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"TrKNguyen"},"content":"- When sorting lists containing non-ASCII characters, the order may not follow expected collation rules for certain languages and alphabets.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"TrKNguyen"},"content":"**Workaround:** For reliable results, users should avoid non-ASCII characters in search queries and sortable fields, or be aware that case-insensitive matching and sorting might not work as expected with certain alphabets.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"TrKNguyen"},"content":"### Redo Command and Redo List Command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"The `redo` and `redoList` commands allow users to re-execute or view recently executed commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"TrKNguyen"},"content":"*   **`CommandHistory` Class:** A static class (`seedu.address.model.commandhistory.CommandHistory`) maintains a `Deque\u003cString\u003e` (double-ended queue) called `lastCommands`. This history is session-based and does not persist between program executions; it is initialized as empty when the application starts and cleared when the application is terminated.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"*   **Adding Commands:** After a command is successfully parsed and *before* it\u0027s executed by `LogicManager`, the original command string is added to the front of the `lastCommands` deque using `CommandHistory.addCommandToHistory(userInput)`. If the deque size exceeds 10, the oldest command (at the end) is removed. Commands like `redo` itself are not added to the history to prevent recursive loops.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"TrKNguyen"},"content":"*   **`redoList` Command:** This command retrieves all commands from the `CommandHistory` deque and formats them into a numbered list for display to the user (currently thrown as a `CommandException` for display). The list only shows successfully executed commands from the current session, up to a maximum of 10 commands.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"*   **`redo N` Command:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    1.  Parses the integer `N`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    2.  Validates `N` (must be between 1 and 10).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"    3.  Retrieves the Nth command string from the `CommandHistory` using `CommandHistory.getCommandFromHistory(N)`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"    4.  Creates a *new* `AddressBookParser` instance.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    5.  Calls `parseCommand` on the retrieved command string.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    6.  Executes the resulting `Command` object. The result of *this* execution is returned to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"TrKNguyen"},"content":"Sequence Diagram for Redo Command:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"TrKNguyen"},"content":"\u003cimg src\u003d\"images/RedoSequenceDiagram.png\" alt\u003d\"RedoSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"TrKNguyen"},"content":"Sequence Diagram for Redo List Command:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"TrKNguyen"},"content":"\u003cimg src\u003d\"images/RedoListSequenceDiagram.png\" alt\u003d\"RedoListSequenceDiagram\"/\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Design Considerations:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"*   **Storage:** History is stored in-memory and is lost when the application closes. Persisting history could be a future enhancement.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"*   **Re-parsing vs. Storing Command Objects:** The current approach stores command *strings* and re-parses them.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    *   *Pros:* Simpler to store, avoids potential issues with storing complex command object states.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    *   *Cons:* Relies on the parser being deterministic and available. Minor overhead of re-parsing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    *   *Alternative:* Store executed `Command` objects directly. Requires commands to be potentially serializable or easily reconstructible, might be more complex.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Appendix: Requirements","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"* early-stage startup founders","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts, their relationships, and related events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Value proposition**: Comprehensive knowledge store on potential business partners and events, optimized for speed and relationship mapping.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"| Priority | As a ...        | I want to ...                       | So that I can ...                                                                               |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"|----------|-----------------|-------------------------------------|-------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | add contacts                        | view contact information later                                                                  |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | list contacts                       | view contact information and their relationships                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | delete contacts                     | remove contacts I no longer need                                                                |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | add relationships between contacts  | map out and visualize connections within my network                                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | delete relationships                | remove outdated or incorrect connections                                                        |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"| `* * *`  | startup founder | search contacts by name             | find contacts by name without looking through all contacts                                      |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | edit contacts                       | change contact information                                                                      |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | add tags to contacts                | view contact categories later                                                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | delete tags from contacts           | remove tags I no longer need                                                                    |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | add tags to relationships           | categorize connections (e.g., \u0027Investor\u0027, \u0027Advisor\u0027, \u0027Competitor\u0027)                            |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | delete tags from relationships      | remove relationship tags I no longer need                                                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | add events                          | keep track of meetings, calls, and conferences                                                  |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | delete events                       | remove past or cancelled events                                                                 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | add contacts to events              | track who attended or is involved in specific events                                            |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | remove contacts from events         | update event attendance or involvement                                                          |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | add tags to events                  | categorize events (e.g., \u0027Networking\u0027, \u0027Funding\u0027, \u0027Product Launch\u0027)                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | remove tags from events             | remove event tags I no longer need                                                              |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | update event details                | change the date, location, or description of an event                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by tag              | find contacts by tag without looking through all contacts                                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by relationship     | find contacts connected in a specific way (e.g., find all \u0027Advisors\u0027)                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by phone            | find contacts by phone without looking through all contacts                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by email            | find contacts by email without looking through all contacts                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by address          | find contacts by address without looking through all contacts                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | search contacts by social           | find contacts by social media handle without looking through all contacts                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | sort contacts by fields             | quickly organize contacts by name, phone, or other fields                                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | redo previous command               | re-execute the last command(s) to avoid repeating steps manually                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | list last 10 commands               | view recent commands executed to track the workflow or find a command to redo                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"| `* *`    | startup founder | view help message                   | access instructions on how to use the application features                                      |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is `INcontact` and the **Actor** is the `startup founder`, unless specified otherwise)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"**Use case: UC1 - Find persons by name**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by name in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose names contain any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Use case: UC2 - Find persons by email**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by email**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by email in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified email keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose email contains any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified email keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any email keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that email keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"**Use case: UC3 - Find persons by phone**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by phone**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by phone in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified phone number keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose phone number contains any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified phone number keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any phone number keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that phone number keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Use case: UC4 - Find persons by address**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by address**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by address in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified address keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose address contains any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified address keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any address keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that address keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"**Use case: UC5 - Find persons by relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by relationship in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified relationship keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose relationship contains any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified relationship keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any relationship keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that relationship keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"**Use case: UC6 - Find persons by social**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by social**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by social media information in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified social media keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose social media information contains any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified social media keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any social media keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that social media keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"**Use case: UC7 - Find persons by tag**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"**Similar to UC1 but find by tag**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Startup founder requests to find persons by tag in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the specified tag keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"3. INcontact searches for persons whose tags contain any of the specified keywords as a substring (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"4. INcontact displays the list of persons matching the search criteria with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"* 2a. No persons match the specified tag keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows a message indicating no persons were found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"* 3a. The user does not specify any tag keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that tag keywords are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"**Use case: UC8 - Sort persons by specified fields**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"1. Startup founder requests to sort persons in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the sorting fields and reverse flag (if specified)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"3. INcontact validates the specified fields to ensure they are valid (name, phone, email, address, tags, socials)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"4. INcontact sorts the address book based on the specified fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"5. INcontact displays the sorted list of persons with index numbers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"6. Startup founder reviews the sorted list of persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"* 2a. The user does not specify any sorting fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows an error message indicating that sorting fields are required.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"* 3a. An invalid field is specified.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating the invalid field.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"* 4a. The reverse flag is specified but no fields are provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"    * 4a1. INcontact shows an error message indicating that sorting fields are required along with the reverse flag.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"* 5a. The user requests sorting by multiple fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"    * 5a1. INcontact sorts the address book first by the primary field, then by subsequent fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"  Use case resumes at step 4.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"**Use case: UC9 - Redo a previously executed command**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Startup founder requests to redo a previously executed command by specifying its index in the command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"2. INcontact parses the request to extract the command index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"3. INcontact validates that the command index is within the valid range (1 to 10)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"4. INcontact retrieves the specified command from the command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"5. INcontact re-executes the specified command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"6. INcontact displays the result of the re-executed command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"* 2a. The user does not specify a valid command index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows an error message indicating that the command index must be between 1 and 10.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"* 3a. The command index is out of the valid range (less than 1 or greater than 10).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that the command index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"* 4a. The command index does not exist in the history (not enough command history).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"    * 4a1. INcontact shows an error message indicating that there are not enough commands in history to redo.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"* 5a. An error occurs while re-executing the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"    * 5a1. INcontact shows an error message indicating that there was an issue re-executing the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"**Use case: UC10 - List the last 10 commands in the command history**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"1. Startup founder requests to list the last 10 commands from the command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"2. INcontact parses the request and recognizes the `redoList` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"3. INcontact retrieves the last 10 commands from the command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"4. INcontact displays the list of the last 10 commands, showing each with an index number","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"5. Startup founder reviews the list of commands","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"* 2a. No commands exist in the history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"    * 2a1. INcontact shows an error message indicating that no command history exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"* 3a. An error occurs while retrieving the commands from the history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"    * 3a1. INcontact shows an error message indicating that there was an issue retrieving the command history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"**Use Case: UC-AddRel - Add a Relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"1. Startup founder requests to add a relationship between two existing contacts using their IDs and specifying the forward and reverse relationship names.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"1. INcontact parses the command, identifying the two user IDs, the forward name, the reverse name, and any tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"1. INcontact verifies that both user IDs correspond to existing persons in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"1. INcontact verifies that a relationship with the same users and names does not already exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"1. INcontact creates the `Relationship` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"1. INcontact adds the relationship to the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"1. INcontact displays a success message confirming the relationship creation, showing the names of the involved persons.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"*   3a. One or both user IDs do not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"One or both contacts do not exist.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"*   4a. The relationship (or its reverse equivalent) already exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"    *   4a1. INcontact shows an error message \"Relationship already exists.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"*   1a. User attempts to add a relationship between a person and themselves (same ID provided twice).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"    *   1a1. INcontact shows an error message \"A contact cannot have a relationship with itself.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"*   1b. User provides an empty relationship name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"    *   2b1. INcontact shows an error message \"Relationship name cannot be empty.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"**Use Case: UC-DelRel - Delete a Relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"1. Startup founder requests to delete a relationship using the IDs of the two involved persons and one of the relationship names (either forward or reverse).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"1. INcontact parses the command to identify the two user IDs and the relationship name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"1. INcontact verifies that both user IDs correspond to existing persons.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"1. INcontact finds the relationship matching the two user IDs and the provided name (checking against both forward and reverse names).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"1. INcontact removes the relationship from the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"1. INcontact displays a success message confirming the deletion, showing the names of the involved persons.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"*   3a. One or both user IDs do not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"One or both persons could not be found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"*   4a. No relationship matching the criteria is found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"    *   4a1. INcontact shows an error message \"No relationship found with the specified details.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"*   1a. User provides empty User IDs or relationship name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"    *   2a1. INcontact shows an error message \"User IDs and relationship name cannot be empty.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"**Use Case: UC-AddRelTag - Add Tag to Relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"1. Startup founder requests to add a tag to an existing relationship, identifying the relationship by the two user IDs and one of the relationship names, and specifying the tag to add.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"1. INcontact parses the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"1. INcontact finds the specified relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"1. INcontact verifies the tag does not already exist on the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"1. INcontact creates an updated `Relationship` object with the new tag added.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"1. INcontact replaces the old relationship with the updated one in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"1. INcontact displays a success message showing the updated relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"*   3a. The specified relationship is not found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"The specified relationship was not found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"*   4a. The tag already exists on the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"    *   4a1. INcontact shows an error message \"This tag already exists in the relationship.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"**Use Case: UC-DelRelTag - Delete Tag from Relationship**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"1. Startup founder requests to delete a tag from an existing relationship, identifying the relationship by the two user IDs and one of the relationship names, and specifying the tag to delete.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"1. INcontact parses the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"1. INcontact finds the specified relationship. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"1. INcontact verifies the tag exists on the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"1. INcontact creates an updated `Relationship` object with the tag removed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"1. INcontact replaces the old relationship with the updated one in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"1. INcontact displays a success message showing the updated relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"*   3a. The specified relationship is not found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"The specified relationship was not found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"*   4a. The tag does not exist on the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"    *   4a1. INcontact shows an error message \"This tag does not exist in the relationship.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"**Use Case: UC-AddEvent - Add an Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"1. Startup founder requests to add an event, providing name, date, and optionally location, description, tags, and contact names.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"1. INcontact parses the command, including parsing the date using natural language processing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"1. INcontact validates the required fields (name, date).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"1. INcontact creates the `Event` object (initially with an empty contact list).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"1. INcontact verifies the event does not already exist (based on unique ID or other criteria if defined).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"1. INcontact adds the event to the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"1. For each contact name provided:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"   1. INcontact checks if a person with that name exists in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"   1. If the person does not exist, INcontact adds a new person with that name and default details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"   1. INcontact adds the corresponding `Person` object to the event\u0027s contact list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"1. INcontact displays a success message confirming the event addition.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"*   3a. Required fields are missing or invalid (e.g., unparseable date).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message detailing the issue.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"*   5a. An identical event already exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"    *   5a1. INcontact shows an error message \"This event already exists in the address book.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"**Use Case: UC-DelEvent - Delete an Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"1. Startup founder requests to delete an event using its unique ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"1. INcontact parses the command to get the event ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"1. INcontact finds the event corresponding to the ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"1. INcontact removes the event from the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"1. INcontact displays a success message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"*   3a. No event with the specified ID is found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"Event not found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"**Use Case: UC-AddEventContact - Add Contact to Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"1. Startup founder requests to add a contact to an event, specifying the event by index and the contact by name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"1. INcontact parses the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"1. INcontact retrieves the event at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"1. INcontact finds or creates the `Person` object corresponding to the contact name (similar to UC-AddEvent step 7).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"1. INcontact verifies the contact is not already associated with the event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"1. INcontact adds the `Person` object to the event\u0027s contact list. (Note: May require `Model.updateEvent` if `Event`\u0027s contact list isn\u0027t directly mutable or observed).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"1. INcontact displays a success message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"*   3a. Invalid event index provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"The event index provided is invalid.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"*   5a. Contact already exists in the event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"    *   5a1. INcontact shows an error message \"This contact already exists in the event.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"**Use Case: UC-DelEventContact - Delete Contact from Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"1. Startup founder requests to remove a contact from an event, specifying the event by index and the contact by name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"1. INcontact parses the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"1. INcontact retrieves the event at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"1. INcontact finds the `Person` object corresponding to the contact name within the event\u0027s contact list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"1. INcontact removes the `Person` object from the event\u0027s contact list. (Note: May require `Model.updateEvent`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"1. INcontact displays a success message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"*   3a. Invalid event index provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"    *   3a1. INcontact shows an error message \"The event index provided is invalid.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"*   4a. Contact is not found within the event\u0027s contact list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"    *   4a1. INcontact shows an error message \"This contact does not exist in the event.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"*(Use cases for adding/deleting event tags and updating event properties follow a similar pattern to relationship tag management and event contact management, involving parsing, finding the event, performing the modification, and updating the model.)*","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has the exact version of Java `17` installed according to the [Java Installation Guides](https://se-education.org/guides/tutorials/javaInstallation.html).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"1. Should be able to hold up to 1000 contacts, 1000 relationships, and 500 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"1. A user with above average typing speed for regular English text should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"1. Data should be persisted between application sessions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"*   **Mainstream OS**: Windows, Linux, macOS","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"*   **Relationship**: A directed connection between two contacts, having a forward name, a reverse name, and optional tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"*   **Event**: A scheduled item with a name, date/time, optional location/description, tags, and associated contacts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"*   **ID**: A unique identifier automatically generated for each Person and Event. Used internally, but also shown to the user (e.g., for relationship commands).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"1. Initial launch ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"   1. Double-click the jar file. Expected: Shows the GUI with a set of sample contacts. Relationships (if any sample data added) and Events (if any sample data added) might be displayed or accessible. The window size may not be optimum. Check for `config.json`, `preferences.json` and `data/addressbook.json` files created.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"        Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"### Adding Relationships","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"1.  Add a valid relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Have at least two contacts in the list. Note their IDs (shown in the contact card). Let IDs be `ID1` and `ID2`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"    1. Test case: `addRelationship u/ID1 u/ID2 fn/Mentor rn/Mentee t/Work`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"        Expected: Success message is shown. The contact cards for persons with `ID1` and `ID2` should now display the relationship (\"Mentor MenteeName\" on ID1\u0027s card, \"Mentee MentorName\" on ID2\u0027s card) and the \"Work\" tag under the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"1. Add a duplicate relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"   1. Prerequisites: Relationship added in the previous step exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"   1. Test case: `addRelationship u/ID1 u/ID2 fn/Mentor rn/Mentee`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"        Expected: Error message \"Relationship already exists.\" is shown. No changes in the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"   1. Test case: `addRelationship u/ID2 u/ID1 fn/Mentee rn/Mentor` (reversed roles)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"        Expected: Error message \"Relationship already exists.\" is shown. No changes in the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"1. Add relationship with non-existent ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"   1. Prerequisites: Get a valid ID `ID1`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"   1. Test case: `addRelationship u/ID1 u/NonExistentID fn/Friend rn/Friend`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"        Expected: Error message \"One or both contacts do not exist.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"4.  Add relationship with self","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Get a valid ID `ID1`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"    2.  Test case: `addRelationship u/ID1 u/ID1 fn/Self rn/Self`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"        Expected: Error message \"A contact cannot have a relationship with itself.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"5.  Add relationship with missing/empty names","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"    1.  Test case: `addRelationship u/ID1 u/ID2 fn/ rn/Mentee`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"        Expected: Error message \"Relationship name cannot be empty.\" or similar constraint violation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"    2.  Test case: `addRelationship u/ID1 u/ID2 fn/Mentor rn/`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"        Expected: Error message \"Relationship name cannot be empty.\" or similar constraint violation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"### Deleting Relationships","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"1.  Delete an existing relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add a relationship `addRelationship u/ID1 u/ID2 fn/Boss rn/Employee`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"    2.  Test case: `deleteRelationship u/ID1 u/ID2 n/Boss`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"        Expected: Success message shown. Relationship disappears from the contact cards of persons `ID1` and `ID2`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"    3.  Prerequisites: Add the relationship again `addRelationship u/ID1 u/ID2 fn/Boss rn/Employee`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"    4.  Test case: `deleteRelationship u/ID1 u/ID2 n/Employee` (using reverse name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"        Expected: Success message shown. Relationship disappears from the contact cards.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"2.  Delete non-existent relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"    1.  Prerequisites: No relationship named \"Friend\" exists between `ID1` and `ID2`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"    2.  Test case: `deleteRelationship u/ID1 u/ID2 n/Friend`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"        Expected: Error message \"No relationship found...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"3.  Delete with non-existent ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"-"},"content":"    1.  Prerequisites: `NonExistentID` is not a valid person ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"    2.  Test case: `deleteRelationship u/ID1 u/NonExistentID n/Boss`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"        Expected: Error message \"One or both persons could not be found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"### Managing Relationship Tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"1.  Add a tag to a relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add relationship `addRelationship u/ID1 u/ID2 fn/Partner rn/Partner`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"    2.  Test case: `addRelationshipTag u/ID1 u/ID2 n/Partner t/ProjectX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"        Expected: Success message. The \"ProjectX\" tag appears under the \"Partner\" relationship on the relevant contact cards.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"    3.  Test case: `addRelationshipTag u/ID1 u/ID2 n/Partner t/ProjectX` (duplicate tag)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"        Expected: Error message \"This tag already exists...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"2.  Delete a tag from a relationship","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Relationship with tag \"ProjectX\" exists from previous step.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    2.  Test case: `deleteRelationshipTag u/ID1 u/ID2 n/Partner t/ProjectX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        Expected: Success message. The \"ProjectX\" tag disappears from the relationship display.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    3.  Test case: `deleteRelationshipTag u/ID1 u/ID2 n/Partner t/NonExistentTag`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        Expected: Error message \"This tag does not exist...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"### Adding Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"1. Add a valid event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"   1. Test case: `addEvent en/Team Meeting d/tomorrow 2pm l/Office desc/Weekly sync t/Work`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        Expected: Success message shown. (Event list panel should update if implemented).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"   1. Test case: `addEvent en/Conference d/2025-10-20 09:00 c/Alex Yeoh c/Bernice Yu` (Assuming Alex and Bernice exist)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"        Expected: Success message. Contacts Alex Yeoh and Bernice Yu should be associated with the event internally.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"   1. Test case: `addEvent en/New Client Pitch d/next monday c/David Li c/NewContactName` (Assuming David Li exists, NewContactName does not)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"        Expected: Success message. A new contact \"NewContactName\" with default details should be added to the main contact list. Both David Li and NewContactName should be associated with the event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"2.  Add event with missing required fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"-"},"content":"    1.  Test case: `addEvent d/today`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"-"},"content":"        Expected: Error message indicating event name (`en/`) is missing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"    2.  Test case: `addEvent en/Party l/Home`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"        Expected: Error message indicating date (`d/`) is missing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"3.  Add event with invalid date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"    1.  Test case: `addEvent en/Invalid Date Event d/invalid-date-format`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"        Expected: Error message indicating the date could not be parsed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"### Deleting Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"1.  Delete an existing event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add an event, e.g., `addEvent en/ToDelete d/today`. Note its generated ID (requires viewing storage or a future `listEvents` command). Let the ID be `EventID1`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    2.  Test case: `deleteEvent u/EventID1`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"        Expected: Success message. Event is removed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"2.  Delete non-existent event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    1.  Test case: `deleteEvent u/NonExistentEventID`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"        Expected: Error message \"Event not found.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"### Managing Event Contacts \u0026 Tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"1.  Add/Delete contact to/from event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add an event `addEvent en/TestEvent d/today`. Assume its index is 1. Add a person `add n/TestPerson`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"    2.  Test case: `addEventContact 1 c/TestPerson`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"-"},"content":"        Expected: Success message. \"TestPerson\" is associated with \"TestEvent\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"-"},"content":"    3.  Test case: `addEventContact 1 c/TestPerson` (duplicate)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"        Expected: Error message \"This contact already exists...\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    4.  Test case: `deleteEventContact 1 c/TestPerson`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":"        Expected: Success message. \"TestPerson\" is removed from \"TestEvent\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    5.  Test case: `deleteEventContact 1 c/NonExistentContactInEvent`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        Expected: Error message \"This contact does not exist...\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"-"},"content":"2.  Add/Delete tag to/from event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Event at index 1 exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    2.  Test case: `addEventTag 1 t/Urgent`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        Expected: Success message. Tag \"Urgent\" added to event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    3.  Test case: `deleteEventTag 1 t/Urgent`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        Expected: Success message. Tag \"Urgent\" removed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"-"},"content":"### Updating Event Properties","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"1.  Update date, location, description","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Event at index 1 exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    2.  Test case: `updateEventDate 1 d/2024-12-25T10:00`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"-"},"content":"        Expected: Success message, event date updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    3.  Test case: `updateEventLoc 1 l/Virtual Meeting Room`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        Expected: Success message, event location updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"-"},"content":"    4.  Test case: `updateEventDesc 1 desc/Final project discussion`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        Expected: Success message, event description updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"-"},"content":"    5.  Test case with invalid index or missing prefix: `updateEventDate 99 d/2024-01-01T00:00`, `updateEventLoc 1 New Location`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"-"},"content":"        Expected: Appropriate error messages.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"-"},"content":"### Find Commands (Substring Matching)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"-"},"content":"1.  Find by name substring","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Sample contacts loaded (includes \"Alex Yeoh\", \"Bernice Yu\").","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"-"},"content":"    2.  Test case: `findName Alex`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"-"},"content":"        Expected: \"Alex Yeoh\" is listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    3.  Test case: `findName Yeo`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        Expected: \"Alex Yeoh\" is listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    4.  Test case: `findName ice`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        Expected: \"Bernice Yu\" is listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    5.  Test case: `findName xyz`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        Expected: Status message indicates 0 persons listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"-"},"content":"2.  Find by relationship keyword (using `findRelationship`)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add relationships: `addRelationship u/ID1 u/ID2 fn/Business Partner rn/Business Partner t/Tech`, `addRelationship u/ID1 u/ID3 fn/Investor rn/Investee t/Finance`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    2.  Test case: `findRelationship Partner`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        Expected: Persons with ID1 and ID2 are listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"TrKNguyen"},"content":"    3.  Test case: `findRelationship Investor`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"TrKNguyen"},"content":"        Expected: Persons with ID1 are listed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"-"},"content":"    4.  Test case: `findRelationship Tech` (finding by relationship tag - *verify if this is supported by the predicate*)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"TrKNguyen"},"content":"        Expected: 0 persons listed **(Note: The current `RelationshipContainsKeywordsAsSubstringPredicate` only checks if the person is *involved* in *any* relationship name role when the command is run, not if the relationship *itself* matches the keyword.)**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"-"},"content":"### Sort Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"1.  Sort by single field","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    1.  Prerequisites: List persons.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"    2.  Test case: `sort name`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"-"},"content":"        Expected: Persons list is sorted alphabetically by name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"    3.  Test case: `sort -r phone`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"        Expected: Persons list is sorted by phone number in descending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"2.  Sort by multiple fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Add persons with the same name but different phone numbers.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"    2.  Test case: `sort name phone`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"        Expected: Persons list is sorted by name, and those with the same name are further sorted by phone number.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"3.  Invalid sort field","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"    1.  Test case: `sort invalidField`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"        Expected: Error message \"Invalid field: invalidField\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"TrKNguyen"},"content":"### Redo and Redo List Commands","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"1.  List command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Execute several valid commands (e.g., `list`, `add n/Test`, `delete 1`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"    2.  Test case: `redoList`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        Expected: A numbered list of the recently executed commands (up to 10) is displayed in the result area (possibly as an error message, based on current implementation). `redo` commands themselves should not appear.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"TrKNguyen"},"content":"    **Note: redoList only keeps track of the command history of the last 10 commands, and this history will be cleared when the program is terminated.**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"2.  Redo a command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"    1.  Prerequisites: Execute `add n/RedoTestPerson`. Then execute `list`. The `add` command should be at index 2 in `redoList`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    2.  Test case: `redo 2`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"-"},"content":"        Expected: The `add n/RedoTestPerson` command is executed again. An error \"This person already exists...\" should appear because the person was already added.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    3.  Test case: `delete 1`. Then `redo 1`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"-"},"content":"        Expected: The `delete 1` command is executed again. If index 1 exists, it\u0027s deleted. If not, an \"invalid index\" error occurs for the *re-executed* delete.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"-"},"content":"3.  Invalid redo index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    1.  Test case: `redo 0`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        Expected: Error message \"Invalid command index...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"-"},"content":"    2.  Test case: `redo 11`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        Expected: Error message \"Invalid command index...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"-"},"content":"    3.  Test case: `redo 5` (when only 3 commands are in history)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        Expected: Error message \"Not enough commands in history...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"-"},"content":"1.  Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"-"},"content":"    1.  Simulate missing file: Close the app. Delete the `data/addressbook.json` file. Relaunch the app.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        Expected: App starts with sample data (or an empty state if sample data loading is disabled after first run). A message indicating a new file is created might be logged.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    2.  Simulate corrupted file: Close the app. Open `data/addressbook.json` and replace its content with invalid JSON (e.g., \"abcde\"). Save the file. Relaunch the app.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"-"},"content":"        Expected: App starts with sample data or empty state. A warning about the corrupted file being loaded and replaced should appear in the logs or possibly as an error dialog.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"-"},"content":"2.  Verify data persistence","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"-"},"content":"    1.  Add a person, a relationship, and an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"-"},"content":"    2.  Close the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    3.  Relaunch the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        Expected: The added person, relationship, and event are still present and correctly loaded. Check relationship display on person cards.","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":30,"-":1106}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TrKNguyen"},"content":"INcontact is a **desktop app targeted towards early startup founders for managing business contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, INcontact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed. If Java is not installed or the `java` command is not available in the command line, follow the [Java installation guide](https://se-education.org/guides/tutorials/javaInstallation.html).\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have installed the precise Java version prescribed in the [Java installation guide for Mac](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Download the [latest `INcontact.jar` file](https://github.com/AY2425S2-CS2103T-T09-1/tp/releases/latest/download/INcontact.jar).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Move `INcontact.jar` to the folder you want to use as the _home folder_ for INcontact.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   **:information_source: The _home folder_ contains `INcontact.jar` and user data.**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Open the _home folder_ in a command terminal and run INcontact with `java -jar INcontact.jar`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   **:information_source: Opening a folder in a terminal**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Right-click the folder and select `open in terminal` or `new terminal at folder`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ![open in terminal](images/openInTerminal.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"   If this is not available, you can use the `cd` (change directory) command. Open a terminal, type `cd` followed by a space, then drag the _home folder_ into the terminal. The path to the _home folder_ should appear, and you can press enter.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If this does not work, you can specify the path manually, e.g. `cd /Users/johndoe/INcontact`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. A window similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TrKNguyen"},"content":"Examples:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TrKNguyen"},"content":"* `help`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TrKNguyen"},"content":"Adds a person to INcontact. Duplicates are allowed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [s/SOCIAL]... [t/TAG]...`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TrKNguyen"},"content":"A person can have any number of tags/socials (including 0). \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TrKNguyen"},"content":"If person have no phone, email or address, system would indicate as a \"~\" instead. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TrKNguyen"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 s/@social1 s/@social2 t/Investor`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TrKNguyen"},"content":"* `add n/Caroly Wilcox`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TrKNguyen"},"content":"![add person](images/addPerson.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Shows a list of all persons in INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TrKNguyen"},"content":"Examples:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TrKNguyen"},"content":"* `list`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TrKNguyen"},"content":"![list persons](images/list.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"Edits an existing person in INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [s/SOCIAL]... [t/TAG]...`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TrKNguyen"},"content":"* You can remove all the person’s tags/socials by typing `t/` / `s/` without","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TrKNguyen"},"content":"  specifying any tags/socials respectively after it.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 s/@john`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"*  `edit 1 s/@elmo` Edits the socials of the 1st person to be `@elmo`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TrKNguyen"},"content":"![edit person](images/editPerson.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Deletes the specified person from INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"TrKNguyen"},"content":"* `findName Betsy` followed by `delete 1` deletes the 1st person in the results of the `findName` command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"TrKNguyen"},"content":"  ![delete person](images/deletePerson.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"Clears all entries from INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"TrKNguyen"},"content":"Examples:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"TrKNguyen"},"content":"* `clear`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"TrKNguyen"},"content":"![clear](images/clear.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Adding a relationship: `addRelationship`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"TrKNguyen"},"content":"Adds a relationship between contacts to INcontact. You must specify both a forward and reverse name for this relationship.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `addRelationship u/USER_ID_1 u/USER_ID_2 fn/FORWARD_NAME rn/REVERSE_NAME [t/TAG]...`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"TrKNguyen"},"content":"* `addRelationship u/-846010516 u/131288605 fn/Boss of rn/Reports to t/Work`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"TrKNguyen"},"content":"  ![addRelationship](images/addRelationship.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Deleting a relationship: `deleteRelationship`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"TrKNguyen"},"content":"Deletes a relationship from INcontact. Either the forward or reverse name of the relationship will suffice.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"Format: `deleteRelationship u/USER_ID_1 u/USER_ID_2 n/FORWARD_NAME_OR_REVERSE_NAME`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"* `deleteRelationship u/12345678 u/87654321 n/Business Partner`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Adding a relationship tag: `addRelationshipTag`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"Adds a relationship tag to a relationship.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `addRelationshipTag u/USER_ID_1 u/USER_ID_2 n/FORWARD_NAME_OR_REVERSE_NAME t/TAG`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"* `addRelationshipTag u/12345678 u/87654321 n/Business Partner t/Important`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Deleting a relationship tag: `deleteRelationshipTag`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Deletes a relationship tag from a relationship.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `deleteRelationshipTag u/USER_ID_1 u/USER_ID_2 n/FORWARD_NAME_OR_REVERSE_NAME t/TAG`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* `deleteRelationshipTag u/12345678 u/87654321 n/Business Partner t/Important`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Adding an event: `addEvent`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"Adds an event to INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"Format: `addEvent en/EVENT_NAME d/DATE [l/LOCATION] [desc/DESCRIPTION] [t/TAG]... [c/CONTACT_NAME]...`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"* `addEvent en/Annual Investor Meetup d/2025-03-15 l/Singapore desc/Networking session for investors t/Finance c/John Doe c/Jane Smith`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"* `addEvent en/Tech Conference d/2025-06-02`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Deleting an event: `deleteEvent`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Deletes an event from INcontact.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"Format: `deleteEvent u/EVENT_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"* `deleteEvent u/98765432`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Updating an event description: `updateEventDesc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"Updates the description of an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"Format: `updateEventDesc INDEX desc/NEW_DESCRIPTION`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"* `updateEventDesc 1 desc/New description for the event`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Updating an event time: `updateEventDate`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"Updates the date of an event.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Format:**  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"`updateEventDate INDEX d/NEW_DATE`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Example:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"* `updateEventDate 1 d/2025-03-15T09:30`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Updating an event location: `updateEventLoc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"Updates the location of an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Format:**  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"`updateEventLoc INDEX l/NEW_LOCATION`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Example:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* `updateEventLoc 1 l/Conference Room`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Adding an event tag: `addEventTag`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"Adds a tag to an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"Format: `addEventTag INDEX t/TAG_NAME`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* `addEventTag 1 t/Finance`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Deleting an event tag: `deleteEventTag`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"Deletes a tag from an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"Format: `deleteEventTag INDEX t/TAG_NAME`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* `deleteEventTag 1 t/Finance`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Adding an event contact: `addEventContact`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"Adds a contact to an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"Format: `addEventContact INDEX c/CONTACT_NAME`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* `addEventContact 1 c/John Doe`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Deleting an event contact: `deleteEventContact`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"Deletes a contact from an event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"Format: `deleteEventContact INDEX c/CONTACT_NAME`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* `deleteEventContact 1 c/John Doe`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Locating persons by name: `findName`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"Format: `findName KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g., `hans` will match `Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"* Only the name field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e., `OR` search). e.g., `Han Ya` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"* `findName Joh` returns `john` and `John Doe`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"* `findName ale david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Locating persons by phone: `findPhone`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"Finds persons whose phone numbers contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"Format: `findPhone KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* Only the phone number field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"* `findPhone 123 456`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Locating persons by email: `findEmail`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"Finds persons whose emails contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"Format: `findEmail KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"* Only the email field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"* `findEmail example1@example.com`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Locating persons by address: `findAddress`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"Finds persons whose addresses contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"Format: `findAddress KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"* Only the address field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"* `findAddress street avenue park`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"### Locating persons by social: `findSocial`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"Finds persons whose social media handles contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"Format: `findSocial KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"* Only the social media handle field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"TrKNguyen"},"content":"* `findSocial facebook twitter linkedin` \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Locating persons by relationship: `findRelationship`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"TrKNguyen"},"content":"Finds persons involved in relationships where their role in any relationship contains any of the given keywords as a substring.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"TrKNguyen"},"content":"**Format**: `findRelationship KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"TrKNguyen"},"content":"* Only the role names in relationships are searched.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"* The search is case-insensitive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"TrKNguyen"},"content":"* **Important**: The command returns **only the person whose role** in the relationship contains the search keyword.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"TrKNguyen"},"content":"* For example, if Person A has a relationship \"Boss\" with Person B whose relationship is \"Employee\", searching for `findRelationship Boss` will return only Person A, because their role contains the keyword \"Boss\".","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"TrKNguyen"},"content":"**Examples**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"TrKNguyen"},"content":"* `findRelationship family friend` returns all persons where their role in any relationship containing \"family\" or \"friend\" as substrings. \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"### Locating persons by tag: `findTag`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"Finds persons whose tags contain any of the given keywords as a substring.  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"Format: `findTag KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"* Only the tags field is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"* The search is case-insensitive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"TrKNguyen"},"content":"* `findTag colleague important` \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Sorting the Address Book: `sort`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"Sorts the address book by one or more fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Format**: `sort [-r] FIELD [MORE_FIELDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"* The `-r` flag reverses the sorting order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* You can sort by multiple fields (e.g., name, phone, email, address, tags).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"* Only the specified fields will be considered in the sort.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"TrKNguyen"},"content":"* Sorting is performed lexicographically by the first field first, then by the second field for entries with identical first field values, and so on.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"* `sort -r name phone` sorts the address book by name and phone in reverse order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"TrKNguyen"},"content":"* `sort email` sorts the address book by email. \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"TrKNguyen"},"content":"### Re-executing Commands: `redo`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"TrKNguyen"},"content":"Re-executes a command from your command history.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"TrKNguyen"},"content":"**Format**: `redo COMMAND_NUMBER`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"TrKNguyen"},"content":"* The *`COMMAND_NUMBER`* must be between 1 and 10, indicating the position of the command in the history.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* This command allows you to quickly redo previous actions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"TrKNguyen"},"content":"* Command history is session-based and will be cleared when the application is terminated.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"* `redo 3` re-executes the third last command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"TrKNguyen"},"content":"### Listing the Command History: `redoList`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"TrKNguyen"},"content":"Lists your command history from the current session.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"TrKNguyen"},"content":"**Format**: `redoList`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"TrKNguyen"},"content":"* This command displays a numbered list of successfully executed commands from your current session.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"TrKNguyen"},"content":"* Only stores up to 10 most recent commands.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"TrKNguyen"},"content":"* Command history is reset when you close the application.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"TrKNguyen"},"content":"* `redo` commands themselves do not appear in this history.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Example**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"TrKNguyen"},"content":"* `redoList` lists the most recent commands executed (up to 10)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"TrKNguyen"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"TrKNguyen"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"TrKNguyen"},"content":"Exits the program.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"TrKNguyen"},"content":"Format: `exit`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"TrKNguyen"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"TrKNguyen"},"content":"### Saving the data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"TrKNguyen"},"content":"INcontact data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"TrKNguyen"},"content":"### Editing the data file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"TrKNguyen"},"content":"INcontact data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"TrKNguyen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"TrKNguyen"},"content":"If your changes to the data file makes its format invalid, INcontact will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"TrKNguyen"},"content":"Furthermore, certain edits can cause the INcontact to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"TrKNguyen"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"TrKNguyen"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"TrKNguyen"},"content":"### Find and Sort Interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"TrKNguyen"},"content":"When using find commands (like `findName`, `findPhone`, etc.) followed by sort commands:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"TrKNguyen"},"content":"- Find commands display a filtered subset of the address book based on your search criteria","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"TrKNguyen"},"content":"- Sort commands affect the entire address book, but only the previously filtered results will be displayed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"TrKNguyen"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous INcontact home folder.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"TrKNguyen"},"content":"3. **Character Encoding for Find Commands**: All find commands (`findName`, `findPhone`, etc.) work best with standard English alphabet characters. When using special characters or non-English alphabets (such as Turkish, Chinese, etc.), search results may be unexpected. Searching for names with special characters might return more or fewer results than expected. For best results, use standard English characters in your contact information.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"TrKNguyen"},"content":"4. **Character Encoding for Sort Commands**: The sort functionality works best with standard English alphabet characters. When sorting entries containing special characters or non-English alphabets, the sorting order may not follow expected language-specific rules. For predictable sorting results, use standard English characters in your contact information.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"TrKNguyen"},"content":"5. **Uncommon Redo Implementation**: The `redo` command in this application differs from common redo implementations. Rather than reversing an undo action, it re-executes a specific command from your history (e.g., `redo 3` re-executes the third last command from the history list). Should use `redoList` to view your command history (up to 10 most recent commands) before using the `redo` command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"TrKNguyen"},"content":"6. **UI Feedback with redoList Command**: When executing the `redoList` command, the command input bar is not cleared and turns red (similar to when there is an error). This is expected behavior as `redoList` returns command history information through exceptions rather than standard output.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"TrKNguyen"},"content":"## Planned enhancements","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"TrKNguyen"},"content":"1. **Use a simpler specifier for relationships**: Relationships currently work via specifying unique User IDs, since INcontact has a very permissive policy regarding similar or duplicate contact details. In future implementations, we will allow for specifying relationships by GUI number, as well as multistep selection (i.e. INcontact finds all matching users, and asks you to choose the specific user).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"| Action                       | Format, Examples                                                                                                                                                                                                        |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"|------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"| **Add**                      | `add n/NAME p/[PHONE_NUMBER] e/[EMAIL] a/[ADDRESS] [s/SOCIAL]… [t/TAG]…` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 s/@social1 s/social2 /t investor t/friend t/colleague` |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"| **Clear**                    | `clear`                                                                                                                                                                                                                 |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"| **Delete**                   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                     |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"| **Edit**                     | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [s/SOCIAL]... [t/TAG]...`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                              |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"| **List**                     | `list`                                                                                                                                                                                                                  |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"| **Add Relationship**         | `addRelationship u/USER_ID_1 u/USER_ID_2 fn/FORWARD_NAME rn/REVERSE_NAME [t/TAG]...`                                                                                                                                    |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"| **Delete Relationship**      | `deleteRelationship u/USER_ID_1 u/USER_ID_2 n/FORWARD_NAME_OR_REVERSE_NAME`                                                                                                                                             |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"| **Add Relationship Tag**     | `addRelationshipTag u/USER_ID_1 u/USER_ID_2 n/FORWARD_NAME_OR_REVERSE_NAME t/TAG`                                                                                                                                       |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"| **Delete Relationship Tag**  | `deleteRelationshipTag u/12345678 u/87654321 n/Business Partner t/Important`                                                                                                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"| **Add Event**                | `addEvent en/EVENT_NAME d/DATE [l/LOCATION] [desc/DESCRIPTION] [t/TAG]... [c/CONTACT_NAME]...`                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"| **Delete Event**             | `deleteEvent u/EVENT_ID`                                                                                                                                                                                                |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"| **Update Event Description** | `updateEventDesc INDEX desc/NEW_DESCRIPTION`                                                                                                                                                                            |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"| **Update Event Location**    | `updateEventLoc INDEX l/NEW_LOCATION`                                                                                                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"| **Update Event Time**        | `updateEventDate INDEX d/NEW_DATE`                                                                                                                                                                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"| **Add Event Tag**            | `addEventTag INDEX t/TAG_NAME`                                                                                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"| **Delete Event Tag**         | `deleteEventTag INDEX t/TAG_NAME`                                                                                                                                                                                       |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"| **Add Event Contact**        | `addEventContact INDEX c/CONTACT_NAME`                                                                                                                                                                                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"| **Delete Event Contact**     | `deleteEventContact INDEX c/CONTACT_NAME`                                                                                                                                                                               |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"| **Help**                     | `help`                                                                                                                                                                                                                  |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"| **Find by Name**             | `findName KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findName James Jake`                                                                                                                                                      |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"| **Find by Phone**            | `findPhone KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"| **Find by Email**            | `findEmail KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"| **Find by Address**          | `findAddress KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"| **Find by Social**           | `findSocial KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                    |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"| **Find by Tag**              | `findTag KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"| **Find by Relationship**     | `findRelationship KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                              |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"| **Sort by Fields**           | `sort [-r] FIELD [MORE_FIELDS]`\u003cbr\u003e e.g., `sort -r name tag`                                                                                                                                                            |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"| **Redo**                     | `redo COMMAND_NUMBER`\u003cbr\u003e e.g., `redo 3`                                                                                                                                                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"| **Command History for Redo** | `redoList`                                                                                                                                                                                                              |","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":98,"-":422}},{"path":"docs/team/TrKNguyen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TrKNguyen"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TrKNguyen"},"content":"layout: page","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TrKNguyen"},"content":"title: Tran Khoi Nguyen\u0027s Project Portfolio Page","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TrKNguyen"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TrKNguyen"},"content":"### Project: INContact","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TrKNguyen"},"content":"INcontact is a desktop address book application used for managing business contacts and their relationships. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TrKNguyen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TrKNguyen"},"content":"* **New Feature**: Added multiple search functionalities to find contacts by different attributes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TrKNguyen"},"content":"  * What it does: Allows users to search for contacts by name, phone, email, address, social media, tags, and relationships using different commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TrKNguyen"},"content":"  * Justification: These features improve the product significantly because a user can quickly find specific contacts based on various attributes without having to manually search through the entire list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TrKNguyen"},"content":"  * Highlights: This enhancement required implementing multiple predicates for different search criteria and designing a unified approach to handle various search parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TrKNguyen"},"content":"  * Credits: Built upon the existing search architecture while extending it for multiple attributes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TrKNguyen"},"content":"* **New Feature**: Added Sort command to organize contacts in a specified order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TrKNguyen"},"content":"  * **What it does**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TrKNguyen"},"content":"    * The `Sort` command allows users to sort their contacts by one or more attributes, such as **name**, **phone**, **email**, **address**, **tags**, or **socials**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TrKNguyen"},"content":"    * Users can choose to sort in **ascending** or **descending** order using the `-r` flag.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TrKNguyen"},"content":"    * Example: `sort -r name phone` sorts contacts by **name** in descending order, followed by **phone** in ascending order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TrKNguyen"},"content":"  * **Justification**: This feature enhances the user experience by providing the ability to organize and retrieve contacts efficiently based on the most relevant attributes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TrKNguyen"},"content":"  * **Highlights**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TrKNguyen"},"content":"    * **Comparator Implementation**: Created custom comparators for each attribute, ensuring that the sorting is case-insensitive and handles various data types like strings (name, phone, email) and collections (tags, socials).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TrKNguyen"},"content":"    * **Multiple Fields Sorting**: The feature supports sorting by multiple fields simultaneously. For example, users can sort first by **name**, then by **phone**, and so on.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TrKNguyen"},"content":"    * **Reverse Order**: The `-r` flag enables sorting in **reverse** order (i.e., descending), adding flexibility to the sorting mechanism.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TrKNguyen"},"content":"    * **Integration**: Integrated the sorting functionality into the existing model with the `Model` interface, ensuring that the sorted list is reflected in the UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TrKNguyen"},"content":"* **New Feature**: Added Redo and RedoList commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TrKNguyen"},"content":"  * What it does:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TrKNguyen"},"content":"    * **Redo**: Allows users to reverse the effects of previous undo commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TrKNguyen"},"content":"    * **RedoList**: Displays all commands that can be redone, helping users review past actions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TrKNguyen"},"content":"  * Justification: These features provide users with more control over their actions, allowing them to recover from accidental undos and manage command history more effectively.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TrKNguyen"},"content":"  * Highlights:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TrKNguyen"},"content":"    * Created a **CommandHistory** system to maintain a session-based history of executed commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TrKNguyen"},"content":"    * The `redoList` command displays the available commands from the current session.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TrKNguyen"},"content":"    * The `redo N` command allows users to re-execute a specific command from the history by providing an index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TrKNguyen"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtotalCommits%20dsc\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dTrKNguyen\u0026tabRepo\u003dAY2425S2-CS2103T-T09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TrKNguyen"},"content":"* **Test Code**: Created comprehensive test cases for new features.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TrKNguyen"},"content":"  * Added tests for various predicates (Address, Email, Phone, Social, Tag, Name, Relationship)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TrKNguyen"},"content":"  * Added tests for command parsers and commands (FindAddress, FindEmail, FindPhone, FindSocial, FindTag, FindRelationship, Sort, Redo, RedoList)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TrKNguyen"},"content":"  * Achieved high test coverage for implemented features.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TrKNguyen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TrKNguyen"},"content":"  * Updated search functionality to enable more flexible searching","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TrKNguyen"},"content":"  * Modified command parsers to support new commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TrKNguyen"},"content":"* **Documentation**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TrKNguyen"},"content":"  * User Guide:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TrKNguyen"},"content":"    * Added documentation for search features (find by name, phone, email, address, social, tag, relationship)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TrKNguyen"},"content":"    * Added documentation for sort command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TrKNguyen"},"content":"    * Added documentation for redo and redoList commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TrKNguyen"},"content":"  * Developer Guide:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TrKNguyen"},"content":"    * Added implementation details and sequence diagrams for search features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TrKNguyen"},"content":"    * Added implementation details and sequence diagrams for sort command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TrKNguyen"},"content":"    * Added implementation details and sequence diagrams for redo and redoList commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TrKNguyen"},"content":"    * Added use cases and MSS (Main Success Scenario) for all my implemented features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TrKNguyen"},"content":"* **Project management**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TrKNguyen"},"content":"  * Managed pull requests and code reviews","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TrKNguyen"},"content":"  * Fixed issues and bugs identified during development","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TrKNguyen"},"content":"  * Merged updates from team members","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TrKNguyen"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TrKNguyen"},"content":"* **Technical Contributions**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TrKNguyen"},"content":"  * Designed and implemented the command history system for redo, redoList functionality","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TrKNguyen"},"content":"  * Created multiple predicate classes for different search criteria","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TrKNguyen"},"content":"  * Designed UML diagrams for all my implemented features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TrKNguyen"},"content":"* **Community**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TrKNguyen"},"content":"  * PRs reviewed: #209, #190, #186, #165, #164, #163, #143, #135, #132, #119, #118, #117, #89, #86, #47, #26, #16, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TrKNguyen"},"content":"  * Contributed to issue resolution and bug fixing","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TrKNguyen"},"content":"  * Collaborated with team members on feature integration, fixed several serious bugs together including search and sort on null field","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TrKNguyen"},"content":"  * Brainstormed several features including search, sort, command history system, redo command, find relationship, import, export, timestamp tracking","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TrKNguyen"},"content":"* **Reuse Declaration**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TrKNguyen"},"content":"  * I asked ChatGPT to provide some corner cases to test for finding features. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":81}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(1, 5, 2, false);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing INcontact ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Stickiem"},"content":"                        + \" populated with a sample INcontact.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Stickiem"},"content":"                    + \" Will be starting with an empty INcontact.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (configOptional.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (prefsOptional.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"        logger.info(\"Starting INcontact \" + MainApp.VERSION);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping INcontact ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"itsvari":4,"-":181,"Stickiem":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SOCIAL;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Stickiem"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Stickiem"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Stickiem"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Stickiem"},"content":"            + \"[\" + PREFIX_SOCIAL + \"SOCIAL]... \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_SOCIAL + \"@johnd\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand otherAddCommand)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":80,"Stickiem":4}},{"path":"src/main/java/seedu/address/logic/commands/AddContactToEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Adds a contact to an event in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The event is identified by its index in the filtered event list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":" * The specified contact (a Person) is added to the event’s contacts.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddContactToEventCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addEventContact\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to an event.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"c/CONTACT_NAME\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 c/John Doe\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_CONTACT_SUCCESS \u003d \"Contact added to event: %1$s\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONTACT_ALREADY_EXISTS \u003d \"This contact already exists in the event\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"The event index provided is invalid.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"            \"Contact %s does not exist in the address book. Please add the contact first.\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Person contact;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddContactToEventCommand to add the specified contact to the event at the given index.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param eventIndex the index of the event in the filtered event list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param contact    the contact to add.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddContactToEventCommand(Index eventIndex, Person contact) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(contact);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d model.getFilteredEventList().size()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_EVENT_NOT_FOUND);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"        // Check that the contact exists in the address book.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"        if (!model.hasPerson(contact)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"            throw new CommandException(String.format(MESSAGE_CONTACT_NOT_FOUND, contact.getName().fullName));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"        Event originalEvent \u003d model.getFilteredEventList().get(eventIndex.getZeroBased());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Check if the contact already exists in the event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"        if (originalEvent.getContacts().stream().anyMatch(p -\u003e p.equals(contact))) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_CONTACT_ALREADY_EXISTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"        // Add the contact to the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"        originalEvent.addContact(contact);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"        // Notify the model that the event has been updated (force UI refresh).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"        model.updateEvent(originalEvent, originalEvent);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_CONTACT_SUCCESS, originalEvent));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChauuuLe"},"content":"        if (!(other instanceof AddContactToEventCommand)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"        AddContactToEventCommand otherCommand \u003d (AddContactToEventCommand) other;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return eventIndex.equals(otherCommand.eventIndex) \u0026\u0026 contact.equals(otherCommand.contact);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":16,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds an event to the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This command also ensures that any contacts specified as part of the event are added to the address book\u0027s","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * person list if they do not already exist. The contacts are added to the event using the event\u0027s","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code addContact} method.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addEvent\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"DATE (absolute or relative date) \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_CONTACT + \"CONTACT]...\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EVENT_NAME + \"Annual Investor Meetup \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"2025-03-15 \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_LOCATION + \"Singapore \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_DESCRIPTION + \"Networking session for investors \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"Finance \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_CONTACT + \"John Doe\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"Contact %s does not exist in the address book. \"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"        + \"Please add the contact first.\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Event toAdd;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final List\u003cPerson\u003e contactsToAdd;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an {@code AddEventCommand} to add the specified {@code Event} to the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The list of contacts provided will be added to the event using {@code addContact} and, if not already present,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * added to the model\u0027s person list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param event         the event to be added; must not be null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param contactsToAdd the list of contacts to add to the event; must not be null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public AddEventCommand(Event event, List\u003cPerson\u003e contactsToAdd) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(contactsToAdd);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        toAdd \u003d event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.contactsToAdd \u003d contactsToAdd;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the add event command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChauuuLe"},"content":"     * The command first checks if the event already exists. If not, it verifies that all provided contacts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChauuuLe"},"content":"     * exist in the model. If any contact is missing, it warns the user and aborts the command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"     * Otherwise, it adds the event to the model and associates the contacts with the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return the result of executing the command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChauuuLe"},"content":"     * @throws CommandException if the event already exists or a specified contact is not found.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChauuuLe"},"content":"        // Check that all provided contacts exist in the model","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChauuuLe"},"content":"        for (Person contact : contactsToAdd) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChauuuLe"},"content":"            if (!model.hasPerson(contact)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChauuuLe"},"content":"                throw new CommandException(String.format(MESSAGE_CONTACT_NOT_FOUND, contact.getName().fullName));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChauuuLe"},"content":"        // Add each provided contact to the event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person contact : contactsToAdd) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            toAdd.addContact(contact);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddEventCommand","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 contactsToAdd.equals(((AddEventCommand) other).contactsToAdd));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"contactsToAdd\", contactsToAdd)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":14,"-":110}},{"path":"src/main/java/seedu/address/logic/commands/AddTagToRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERID;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.util.Objects;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a tag to a relationship between two persons in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The relationship is identified by the user IDs of the two persons and the name of the relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddTagToRelationshipCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addRelationshipTag\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Adds a tag to a relationship between two persons.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"USER_ID_1 \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"USER_ID_2 \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"RELATIONSHIP_NAME \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"12345678 \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"87654321 \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"Business Partner \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"Important\" + \"\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Note: You can use either the forward or reverse relationship name to identify the relationship.\\n\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added tag to relationship: %1$s\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This tag already exists in the relationship\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RELATIONSHIP_NOT_FOUND \u003d \"The specified relationship was not found\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String userId1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final String userId2;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final String relationshipName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Tag tag;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an {@code AddTagToRelationshipCommand} to add the specified tag to the relationship between two persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userId1 The user ID of the first person in the relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param userId2 The user ID of the second person in the relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param relationshipName The name of the relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param tag The tag to add.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddTagToRelationshipCommand(String userId1, String userId2, String relationshipName, Tag tag) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userId1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userId2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(relationshipName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userId1 \u003d userId1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userId2 \u003d userId2;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.relationshipName \u003d relationshipName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d model.getRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (relationship \u003d\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_RELATIONSHIP_NOT_FOUND);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (relationship.getTags().contains(tag)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Relationship updatedRelationship \u003d relationship.withAddedTag(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.updateRelationship(relationship, updatedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, updatedRelationship));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"            return true;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        if (!(other instanceof AddTagToRelationshipCommand otherCommand)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"            return false;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"        return userId1.equals(otherCommand.userId1)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"                \u0026\u0026 userId2.equals(otherCommand.userId2)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"                \u0026\u0026 relationshipName.equals(otherCommand.relationshipName)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"                \u0026\u0026 tag.equals(otherCommand.tag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"    public int hashCode() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        return Objects.hash(userId1, userId2, relationshipName, tag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"itsvari":23,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactFromEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Deletes a contact from an event in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The event is identified by its index in the filtered event list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The specified contact is removed from the event’s contacts using the event\u0027s {@code deleteContact} method.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteContactFromEventCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEventContact\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a contact from an event.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"c/CONTACT_NAME\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 c/John Doe\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Contact removed from event: %1$s\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"This contact does not exist in the event\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"The event index provided is invalid\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Person contact;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a DeleteContactFromEventCommand to remove the specified contact from the event at the given index.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param eventIndex the index of the event in the filtered event list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param contact    the contact to remove.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DeleteContactFromEventCommand(Index eventIndex, Person contact) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(contact);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d model.getFilteredEventList().size()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_EVENT_NOT_FOUND);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Event event \u003d model.getFilteredEventList().get(eventIndex.getZeroBased());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Check if the contact exists in the event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (event.getContacts().stream().noneMatch(p -\u003e p.equals(contact))) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_CONTACT_NOT_FOUND);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        event.deleteContact(contact);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"        model.updateEvent(event, event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS, event));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteContactFromEventCommand otherCommand)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return eventIndex.equals(otherCommand.eventIndex) \u0026\u0026 contact.equals(otherCommand.contact);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":2,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERID;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes an existing relationship between two persons in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteRelationshipCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deleteRelationship\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes an existing relationship between two persons.\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"FIRST_USER_ID \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"SECOND_USER_ID \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"RELATIONSHIP_NAME\\n\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"12345678 \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_USERID + \"87654321 \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"Business Partner\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Note: You can use either the forward or reverse relationship name.\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"The person\u0027s ID is shown in their contact card.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted relationship between %s and %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RELATIONSHIP_NOT_FOUND \u003d \"No relationship found with the specified details\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_NOT_FOUND \u003d \"One or both persons could not be found\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeleteRelationshipCommand.class);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String firstUserId;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String secondUserId;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final String relationshipName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a command to delete the specified relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param firstUserId First person\u0027s user ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param secondUserId Second person\u0027s user ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param relationshipName Name of the relationship to delete","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if any parameter is null","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public DeleteRelationshipCommand(String firstUserId, String secondUserId, String relationshipName) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(firstUserId, \"First user ID cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(secondUserId, \"Second user ID cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(relationshipName, \"Relationship name cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.firstUserId \u003d firstUserId;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.secondUserId \u003d secondUserId;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.relationshipName \u003d relationshipName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model, \"Model cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        validateParameters();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d findPerson(model, firstUserId);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person secondPerson \u003d findPerson(model, secondUserId);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (firstPerson \u003d\u003d null || secondPerson \u003d\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Attempted to delete relationship with non-existent person(s)\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            model.deleteRelationship(firstUserId, secondUserId, relationshipName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            logger.info(String.format(\"Deleted relationship between users %s and %s\", firstUserId, secondUserId));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, firstPerson.getName(), secondPerson.getName()));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } catch (RelationshipNotFoundException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            logger.warning(String.format(\"Attempted to delete non-existent relationship between %s and %s\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    firstUserId, secondUserId));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_RELATIONSHIP_NOT_FOUND);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void validateParameters() throws CommandException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (hasEmptyParameter(firstUserId) || hasEmptyParameter(secondUserId)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                || hasEmptyParameter(relationshipName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"            throw new CommandException(MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private boolean hasEmptyParameter(String parameter) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return parameter.trim().isEmpty();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Person findPerson(Model model, String userId) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getPersonById(userId);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteRelationshipCommand otherCommand)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return firstUserId.equals(otherCommand.firstUserId)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 secondUserId.equals(otherCommand.secondUserId)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 relationshipName.equals(otherCommand.relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return String.format(\"DeleteRelationshipCommand: Deleting relationship \u0027%s\u0027 between %s and %s\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                relationshipName, firstUserId, secondUserId);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":1,"-":121}},{"path":"src/main/java/seedu/address/logic/commands/FindRelationshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.predicate.RelationshipContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose relationships contain any of the argument keywords.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindRelationshipCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"findRelationship\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TrKNguyen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose role name in any relationship \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TrKNguyen"},"content":"            + \"contains any of the specified keywords (case-insensitive) and displays them as a list with index \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TrKNguyen"},"content":"            + \"numbers.\\n\" + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" family friend\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final RelationshipContainsKeywordsAsSubstringPredicate predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindRelationshipCommand(RelationshipContainsKeywordsAsSubstringPredicate predicate) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindRelationshipCommand otherFindRelationshipCommand)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindRelationshipCommand.predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \"FindRelationshipCommand{\" + \"predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":3,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Sorts the address book by one or more fields.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the address book by one or more fields.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: [-r] [FIELD]...\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"  -r: Reverse the order\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  FIELD: one or more fields to sort by (e.g., name, phone, email, address, tags, socials)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" -r name phone\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean isReverse;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e fields;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a SortCommand to sort the address book by the specified fields.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param isReverse Whether to reverse the sorting order","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param fields The fields by which to sort","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public SortCommand(boolean isReverse, List\u003cString\u003e fields) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.isReverse \u003d isReverse;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.fields \u003d fields;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TrKNguyen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e comparator \u003d createComparator(fields);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (isReverse) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            comparator \u003d comparator.reversed();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a comparator based on the fields provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param fields The fields to sort by","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return A comparator for sorting","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Comparator\u003cPerson\u003e createComparator(List\u003cString\u003e fields) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String firstField \u003d fields.get(0).toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        comparator \u003d switch (firstField) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            case \"name\" -\u003e (p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            case \"phone\" -\u003e (p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            case \"email\" -\u003e (p1, p2) -\u003e p1.getEmail().toString().compareToIgnoreCase(p2.getEmail().toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            case \"address\" -\u003e (p1, p2) -\u003e p1.getAddress().toString().compareToIgnoreCase(p2.getAddress().toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TrKNguyen"},"content":"            case \"tags\" -\u003e (p1, p2) -\u003e p1.getTags().toString().compareToIgnoreCase(p2.getTags().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TrKNguyen"},"content":"            case \"socials\" -\u003e (p1, p2) -\u003e p1.getSocials().toString().compareToIgnoreCase(p2.getSocials().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            default -\u003e null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c fields.size(); i++) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String field \u003d fields.get(i).toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            comparator \u003d switch (field) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                case \"name\" -\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        comparator.thenComparing((p1, p2) -\u003e p1.getName().toString()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                .compareToIgnoreCase(p2.getName().toString()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                case \"phone\" -\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                        comparator.thenComparing((p1, p2) -\u003e p1.getPhone().toString()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                .compareToIgnoreCase(p2.getPhone().toString()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                case \"email\" -\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        comparator.thenComparing((p1, p2) -\u003e p1.getEmail().toString()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                .compareToIgnoreCase(p2.getEmail().toString()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                case \"address\" -\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        comparator.thenComparing((p1, p2) -\u003e p1.getAddress().toString()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                .compareToIgnoreCase(p2.getAddress().toString()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                case \"tags\" -\u003e comparator.thenComparingInt(p -\u003e p.getTags().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                case \"socials\" -\u003e comparator.thenComparingInt(p -\u003e p.getSocials().size());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                default -\u003e null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            };","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof SortCommand otherSortCommand)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return isReverse \u003d\u003d otherSortCommand.isReverse \u0026\u0026 fields.equals(otherSortCommand.fields);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return \"SortCommand{\" + \"isReverse\u003d\" + isReverse + \", fields\u003d\" + fields + \u0027}\u0027;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":4,"-":108}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SOCIAL;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Social;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        PREFIX_ADDRESS, PREFIX_SOCIAL, PREFIX_TAG);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e phoneDetails \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Stickiem"},"content":"        Phone phone \u003d new Phone(\"~\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (phoneDetails.isPresent()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            phone \u003d ParserUtil.parsePhone(phoneDetails.get());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e emailDetails \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Stickiem"},"content":"        Email email \u003d new Email(\"~\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (emailDetails.isPresent()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            email \u003d ParserUtil.parseEmail(emailDetails.get());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e addressDetails \u003d argMultimap.getValue(PREFIX_ADDRESS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Stickiem"},"content":"        Address address \u003d new Address(\"~\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (addressDetails.isPresent()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            address \u003d ParserUtil.parseAddress(addressDetails.get());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cSocial\u003e social \u003d ParserUtil.parseSocials(argMultimap.getAllValues(PREFIX_SOCIAL));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, social, tagList);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"-":78,"Stickiem":3}},{"path":"src/main/java/seedu/address/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new RedoCommand object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RedoCommandParser implements Parser\u003cRedoCommand\u003e {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the RedoCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a RedoCommand object for execution.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            int commandIndex \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TrKNguyen"},"content":"            if (commandIndex \u003c 1 || commandIndex \u003e 10) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            return new RedoCommand(commandIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return \"RedoCommandParser{}\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":1,"-":36}},{"path":"src/main/java/seedu/address/logic/parser/UpdateEventDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UpdateEventDateCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UpdateEventDateCommand object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UpdateEventDateCommandParser implements Parser\u003cUpdateEventDateCommand\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateEventDateCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns an UpdateEventDateCommand object for execution.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return an UpdateEventDateCommand object containing the parsed data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UpdateEventDateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_DATE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // The preamble should contain the event index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (preamble.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Event index is required.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        List\u003cString\u003e dateStrings \u003d argMultimap.getAllValues(PREFIX_DATE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"        if (dateStrings.size() !\u003d 1) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"            throw new ParseException(\"Please provide exactly one new date.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        String dateString \u003d dateStrings.get(0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        LocalDateTime newDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            newDate \u003d LocalDateTime.parse(dateString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Invalid date format. Expected format: yyyy-MM-ddTHH:mm\", e);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new UpdateEventDateCommand(eventIndex, newDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":5,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/UpdateEventDescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UpdateEventDescriptionCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UpdateEventDescriptionCommand object.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UpdateEventDescriptionCommandParser implements Parser\u003cUpdateEventDescriptionCommand\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateEventDescriptionCommand","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns an UpdateEventDescriptionCommand object for execution.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return an UpdateEventDescriptionCommand object containing the parsed data.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UpdateEventDescriptionCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_DESCRIPTION);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // The preamble should contain the event index.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (preamble.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Event index is required.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        List\u003cString\u003e descriptions \u003d argMultimap.getAllValues(PREFIX_DESCRIPTION);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"        if (descriptions.size() !\u003d 1) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"            throw new ParseException(\"Please provide exactly one new description.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        String newDescription \u003d descriptions.get(0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new UpdateEventDescriptionCommand(eventIndex, newDescription);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":7,"-":36}},{"path":"src/main/java/seedu/address/logic/parser/UpdateEventLocationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UpdateEventLocationCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UpdateEventLocationCommand object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UpdateEventLocationCommandParser implements Parser\u003cUpdateEventLocationCommand\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateEventLocationCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns an UpdateEventLocationCommand object for execution.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return an UpdateEventLocationCommand object containing the parsed data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UpdateEventLocationCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_LOCATION);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // The preamble should contain the event index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (preamble.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Event index is required.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        List\u003cString\u003e locations \u003d argMultimap.getAllValues(PREFIX_LOCATION);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"        if (locations.size() !\u003d 1) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"            throw new ParseException(\"Please provide exactly one new location.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        String newLocation \u003d locations.get(0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new UpdateEventLocationCommand(eventIndex, newLocation);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":7,"-":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.UniqueRelationshipList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniqueRelationshipList relationships;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Changed events field to use a standard ObservableList instead of UniqueEventList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cEvent\u003e events;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * between constructors.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        relationships \u003d new UniqueRelationshipList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces the contents of the events list with {@code events}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.events.setAll(events);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        setRelationships(newData.getRelationshipList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //// Person-level operations","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"        deleteRelationshipsInvolvingPerson(key);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        removePersonFromEvents(key);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"     * Deletes all relationships that involve the given person.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"     * @param person The person whose relationships should be deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"    private void deleteRelationshipsInvolvingPerson(Person person) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"        relationships.removeRelationshipsInvolvingUser(person.getId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"     * Removes the given person from all events that reference them.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"     * @param person The person to remove from events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"    private void removePersonFromEvents(Person person) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"        for (Event event : events) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"            event.deleteContact(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sorts the person list using the provided comparator.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @param comparator The comparator to use for sorting.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TrKNguyen"},"content":"    public void sortPersons(Comparator\u003c? super Person\u003e comparator) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        persons.sortPersons(comparator);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //// Relationship-level operations","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns true if a relationship with the same identity fields as {@code relationship} exists in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean hasRelationship(Relationship relationship) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return relationships.contains(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if a relationship with the given user IDs and name exists in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean hasRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireAllNonNull(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return relationships.contains(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns true if there is any relationship between the two users.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean hasAnyRelationship(String userId1, String userId2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireAllNonNull(userId1, userId2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return relationships.hasAnyRelationshipBetween(userId1, userId2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Adds a relationship to the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * The relationship must not already exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void addRelationship(Relationship r) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        relationships.add(r);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Removes the relationship with the given user IDs and name from the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * The relationship must exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void removeRelationship(String userId1, String userId2, String relationshipName)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throws RelationshipNotFoundException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        relationships.remove(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Returns a person with the given ID, or null if not found.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .filter(p -\u003e p.getId().equals(id))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .orElse(null);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the relationships list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public ObservableList\u003cRelationship\u003e getRelationshipList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return relationships.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    //// Event-level operations","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return events.stream().anyMatch(event::equals);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        events.add(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Removes the given event from the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        events.remove(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(events);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @param target      the event to be replaced.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @param editedEvent the new event to replace the target event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if the target event is not found.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        int index \u003d events.indexOf(target);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Target event not found in address book.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        events.set(index, editedEvent);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    //// Util methods","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .add(\"relationships\", relationships)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                .add(\"events\", events)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // Update equals method to include relationships and events","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook otherAddressBook)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"                \u0026\u0026 relationships.equals(otherAddressBook.relationships)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"                \u0026\u0026 events.equals(otherAddressBook.events);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return Objects.hash(persons, relationships, events);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public Relationship getRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return relationships.getRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void updateRelationship(Relationship target, Relationship updatedRelationship) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        relationships.setRelationship(target, updatedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"itsvari"},"content":"    public void setRelationships(List\u003cRelationship\u003e relationships) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"itsvari"},"content":"        this.relationships.setRelationships(relationships);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"itsvari":27,"TrKNguyen":2,"-":277}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true for events */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true for relationships */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Predicate\u003cRelationship\u003e PREDICATE_SHOW_ALL_RELATIONSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the filtered person list, sorted by the specified comparator.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * If no comparator is provided, the list remains unsorted.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return an observable list of sorted and filtered persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getSortedFilteredPersonList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates the sorting order of the filtered person list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TrKNguyen"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) throws CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the person with the given ID, or null if not found.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    Person getPersonById(String id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns true if a relationship with the same identity fields exists in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    boolean hasRelationship(Relationship relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if a relationship exists between the given users.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * The relationship can be found using either the forward or reverse name.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The order of user IDs doesn\u0027t matter.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    boolean hasRelationship(String userId1, String userId2, String relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if any relationship exists between the given users,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * regardless of the relationship names.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    boolean hasAnyRelationship(String userId1, String userId2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Adds a relationship to the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * The relationship must not already exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    void addRelationship(Relationship relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Deletes the relationship with the given user IDs and name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * The relationship must exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    void deleteRelationship(String userId1, String userId2, String relationshipName)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throws RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered relationship list */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    ObservableList\u003cRelationship\u003e getFilteredRelationshipList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Adds the given event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void addEvent(Event event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Deletes the given event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the filtered event list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns the event with the given ID, or null if not found.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    Event getEventById(String id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Replaces the given event {@code target} with {@code updatedEvent}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    void updateEvent(Event target, Event updatedEvent);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns the relationship with the given user IDs and name, or null if not found.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    Relationship getRelationship(String userId1, String userId2, String relationshipName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Adds a tag to a relationship between two persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    void updateRelationship(Relationship target, Relationship updatedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered relationship list to filter by the given {@code predicate}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    void updateFilteredRelationshipList(Predicate\u003cRelationship\u003e predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":2,"-":208}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cRelationship\u003e filteredRelationships;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Comparator\u003cPerson\u003e sortComparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredRelationships \u003d new FilteredList\u003c\u003e(this.addressBook.getRelationshipList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList()); // Initialize event list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sortComparator \u003d (person1, person2) -\u003e 0;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TrKNguyen"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.addressBook.sortPersons(comparator);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Relationship \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return addressBook.getPersonById(id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean hasRelationship(Relationship relationship) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return addressBook.hasRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean hasRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        requireAllNonNull(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return addressBook.hasRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean hasAnyRelationship(String userId1, String userId2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireAllNonNull(userId1, userId2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return addressBook.hasAnyRelationship(userId1, userId2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void addRelationship(Relationship relationship) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        addressBook.addRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        updateFilteredRelationshipList(PREDICATE_SHOW_ALL_RELATIONSHIPS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public Relationship getRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return addressBook.getRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void updateRelationship(Relationship target, Relationship updatedRelationship) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, updatedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        addressBook.updateRelationship(target, updatedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        filteredRelationships.setPredicate(PREDICATE_SHOW_ALL_RELATIONSHIPS); // Use setPredicate directly","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void deleteRelationship(String userId1, String userId2, String relationshipName)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throws RelationshipNotFoundException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        addressBook.removeRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        updateFilteredRelationshipList(PREDICATE_SHOW_ALL_RELATIONSHIPS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void updateFilteredRelationshipList(Predicate\u003cRelationship\u003e predicate) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        filteredRelationships.setPredicate(predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public ObservableList\u003cRelationship\u003e getFilteredRelationshipList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return filteredRelationships;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void updateEvent(Event target, Event updatedEvent) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, updatedEvent);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        addressBook.setEvent(target, updatedEvent);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        addressBook.deleteEvent(event);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return filteredEvents;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public Event getEventById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        for (Event event : filteredEvents) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            if (event.getId().equals(id)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                return event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager otherModelManager)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredRelationships.equals(otherModelManager.filteredRelationships)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredEvents.equals(otherModelManager.filteredEvents);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":2,"-":277}},{"path":"src/main/java/seedu/address/model/commandhistory/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.commandhistory;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Deque;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A class to manage the history of commands.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandHistory {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Deque to store the last 10 user inputs.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Deque\u003cString\u003e lastCommands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Adds the given command input to the history of last 10 commands.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TrKNguyen"},"content":"     * If the list exceeds 10, removes the oldest command.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param userInput The command to add to the history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void addCommandToHistory(String userInput) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (Objects.equals(commandWord, RedoCommand.COMMAND_WORD)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (lastCommands.size() \u003d\u003d 10) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            lastCommands.pollLast();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        lastCommands.offerFirst(userInput);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Retrieves the command at the specified index from the lastCommands deque.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param index The index of the command in the deque (1-based).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return The command string at the specified index.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String getCommandFromHistory(int index) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int dequeIndex \u003d index - 1;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (lastCommands.size() \u003c\u003d dequeIndex) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException(\"Not enough commands in history to redo.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return (String) lastCommands.toArray()[dequeIndex];","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns all the commands in the history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return List of all commands in history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Deque\u003cString\u003e getAllCommands() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return lastCommands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":1,"-":73}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, and the class is immutable.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Event {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS_NAME \u003d \"Event name cannot be blank.\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final AtomicInteger COUNTER \u003d new AtomicInteger(1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String location;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final UniquePersonList contacts;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Event} with the given details.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param name        A valid event name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param date        A valid absolute or relative date.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param location    The location of the event (can be empty).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param description The event description (can be empty).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param tags        A set of tags associated with the event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param contacts    A {@code UniquePersonList} of contacts associated with the event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Event(String name, LocalDateTime date, String location, String description, Set\u003cTag\u003e tags,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                 UniquePersonList contacts) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name, \"Event name is required\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(date, \"Event date is required\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(contacts, \"Event contacts are required\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (name.trim().isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS_NAME);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Optionally, add date format validation here.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.id \u003d String.format(\"%08d\", COUNTER.getAndIncrement());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.location \u003d (location \u003d\u003d null) ? \"\" : location;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.description \u003d (description \u003d\u003d null) ? \"\" : description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.contacts \u003d contacts;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChauuuLe"},"content":"     * Public constructor used for creating an updated version of an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChauuuLe"},"content":"    public Event(String id, String name, LocalDateTime date, String location, String description, Set\u003cTag\u003e tags,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                 UniquePersonList contacts) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.contacts \u003d contacts;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the unique identifier of this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return the event id.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String getId() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns the name of this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @return the event name.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the date of this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return the event date.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String getDate() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return date.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns the location of this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return the event location.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String getLocation() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return location;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns the description of this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @return the event description.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a new {@code Event} with the specified tag added to its tag set.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param tag the tag to add.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @return a new Event instance with the updated tag set.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public Event withAddedTag(Tag tag) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        newTags.add(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new Event(this.id, this.name, this.date, this.location, this.description, newTags, this.contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a new {@code Event} with the specified tag removed from its tag set.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param tag the tag to remove.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @return a new Event instance with the updated tag set.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Event withRemovedTag(Tag tag) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        newTags.remove(tag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new Event(this.id, this.name, this.date, this.location, this.description, newTags, this.contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a new {@code Event} with an updated description.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param newDescription the new description to set.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @return a new {@code Event} instance with the updated description.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Event withUpdatedDescription(String newDescription) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(newDescription);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new Event(this.id, this.name, this.date, this.location, newDescription, this.tags, this.contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns a new {@code Event} with an updated location.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @param newLocation the new location to set.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @return a new {@code Event} instance with the updated location.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public Event withUpdatedLocation(String newLocation) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(newLocation);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return new Event(this.id, this.name, this.date, newLocation, this.description, this.tags, this.contacts);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Returns a new {@code Event} with an updated date.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @param newDate the new date to set.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @return a new {@code Event} instance with the updated date.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public Event withUpdatedDate(LocalDateTime newDate) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(newDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new Event(this.id, this.name, newDate, this.location, this.description, this.tags, this.contacts);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Returns an immutable set of tags associated with this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * The returned set is unmodifiable and any attempt to modify it will result in an","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * {@code UnsupportedOperationException}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @return an unmodifiable set of tags.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the contacts associated with this event.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @return an observable list of persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getContacts() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Adds a person to the contacts list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @param person the person to add; must not be null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void addContact(Person person) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(person, \"Person cannot be null\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        contacts.add(person);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Deletes a person from the contacts list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * @param person the person to remove; must not be null.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void deleteContact(Person person) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        requireNonNull(person, \"Person cannot be null\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        contacts.remove(person);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ChauuuLe"},"content":"     * Returns a comma-separated string of the full names of all contacts associated with this event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ChauuuLe"},"content":"     * If no contacts exist, returns \"None\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ChauuuLe"},"content":"     * @return a formatted string of contacts.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ChauuuLe"},"content":"    public String getContactsAsString() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ChauuuLe"},"content":"        return getContacts().isEmpty()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ChauuuLe"},"content":"                ? \"None\"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ChauuuLe"},"content":"                : getContacts().stream()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ChauuuLe"},"content":"                               .map(person -\u003e person.getName().fullName + \" (ID: \" + person.getId() + \")\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ChauuuLe"},"content":"                               .collect(java.util.stream.Collectors.joining(\", \"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        if (!(other instanceof Event otherEvent)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return id.equals(otherEvent.id)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                \u0026\u0026 name.equals(otherEvent.name)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"                \u0026\u0026 date.equals(otherEvent.date)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"                \u0026\u0026 location.equals(otherEvent.location)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"                \u0026\u0026 description.equals(otherEvent.description)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherEvent.tags)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"                \u0026\u0026 contacts.equals(otherEvent.contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        return Objects.hash(id, name, date, location, description, tags, contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        builder.append(\"Event Name: \")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                .append(name)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .append(date)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                .append(location)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                .append(description);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"            tags.forEach(tag -\u003e builder.append(tag.toString()).append(\" \"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ChauuuLe"},"content":"        builder.append(\"; Contacts: \").append(getContactsAsString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ChauuuLe"},"content":"        builder.append(\"; Event ID: \").append(id);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":18,"-":266}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Stickiem"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Stickiem"},"content":"            + \"and it should not be blank and not start with a (~)\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Stickiem"},"content":"     * The first character of the address must not be a whitespace or ~,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Stickiem"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s~].*\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Stickiem"},"content":"        if (!(address.equals(\"~\"))) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            requireNonNull(address);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            value \u003d address;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Stickiem"},"content":"            value \u003d \"~\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address otherAddress)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":63,"Stickiem":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Stickiem"},"content":"        if (!(email.equals(\"~\"))) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            requireNonNull(email);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Stickiem"},"content":"            value \u003d \"~\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email otherEmail)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":80,"Stickiem":2}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cSocial\u003e socials \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"     * Every field must be present and not null, except for ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cSocial\u003e socials, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        this(name, phone, email, address, socials, tags, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"     * Creates a Person with the given details. Every field must be present and not null.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cSocial\u003e socials, Set\u003cTag\u003e tags, String id) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.socials.addAll(socials);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        this.id \u003d id !\u003d null ? id : generateId(name, phone); // Use provided ID or generate one","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cSocial\u003e getSocials() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(socials);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person otherPerson)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"socials\", socials)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Generates an ID for this person based on their name and phone number.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @param name The name of the person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param phone The phone number of the person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @return The generated ID.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private String generateId(Name name, Phone phone) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return (name.toString() + phone.toString()).hashCode() + \"\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns the ID of this person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @return The ID of this person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String getId() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"itsvari":9,"-":141}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Stickiem"},"content":"        if (!(phone.equals(\"~\"))) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Stickiem"},"content":"            value \u003d \"~\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone otherPhone)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":61,"Stickiem":2}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sorts the internal list of persons using the provided comparator.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Catches any exceptions that might occur during sorting.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TrKNguyen"},"content":"    public void sortPersons(Comparator\u003c? super Person\u003e comparator) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TrKNguyen"},"content":"            FXCollections.sort(internalList, comparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TrKNguyen"},"content":"            throw new CommandException(\"An error occurred while sorting the persons list: \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TrKNguyen"},"content":"                    + \"Possible error is one of the sorting fields in some person is null. \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TrKNguyen"},"content":"                    + \"Please add sufficient value to sort properly.\", e);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList otherUniquePersonList)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":6,"-":160}},{"path":"src/main/java/seedu/address/model/predicate/RelationshipContainsKeywordsAsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Relationships} matches any of the keywords given.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class RelationshipContainsKeywordsAsSubstringPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code RelationshipContainsKeywordsAsSubstringPredicate}.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param keywords The list of keywords to match against relationship fields","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param model The model to search within for relationships","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public RelationshipContainsKeywordsAsSubstringPredicate(List\u003cString\u003e keywords, Model model) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ObservableList\u003cRelationship\u003e relationships \u003d model.getFilteredRelationshipList();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TrKNguyen"},"content":"        return relationships.stream().anyMatch(relationship -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TrKNguyen"},"content":"            if (person.getId().equals(relationship.getFirstUserId())) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TrKNguyen"},"content":"                return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TrKNguyen"},"content":"                        relationship.getForwardName() !\u003d null","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TrKNguyen"},"content":"                                \u0026\u0026 containsSubstringIgnoreCase(relationship.getForwardName(), keyword));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TrKNguyen"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TrKNguyen"},"content":"            if (person.getId().equals(relationship.getSecondUserId())) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TrKNguyen"},"content":"                return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TrKNguyen"},"content":"                        relationship.getReverseName() !\u003d null","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TrKNguyen"},"content":"                                \u0026\u0026 containsSubstringIgnoreCase(relationship.getReverseName(), keyword));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TrKNguyen"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TrKNguyen"},"content":"            return false;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TrKNguyen"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TrKNguyen"},"content":"    private boolean containsSubstringIgnoreCase(String role, String keyword) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TrKNguyen"},"content":"        return role.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof RelationshipContainsKeywordsAsSubstringPredicate otherPredicate)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":16,"-":52}},{"path":"src/main/java/seedu/address/model/relationship/UniqueRelationshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.DuplicateRelationshipException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of relationships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A relationship is considered unique by comparing using {@code Relationship#isSameRelationship(Relationship)}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniqueRelationshipList implements Iterable\u003cRelationship\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UniqueRelationshipList.class);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cRelationship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cRelationship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Checks if the list contains an equivalent relationship.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Equivalent relationships are relationships with the same user IDs and name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param toCheck The relationship to check.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return True if the list contains an equivalent relationship, False otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Relationship toCheck) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck, \"Relationship to check cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSameRelationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Checks if the list contains a relationship with the given user IDs and name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param firstUserId The user ID of the first user in the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param secondUserId The user ID of the second user in the relationship.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param relationshipName The name of the relationship.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return True if the list contains a relationship with the given user IDs and name, False otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean contains(String firstUserId, String secondUserId, String relationshipName) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireAllNonNull(firstUserId, secondUserId, relationshipName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return internalList.stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .anyMatch(r -\u003e r.isSameRelationship(firstUserId, secondUserId, relationshipName));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Checks if the list contains any relationship between the given users, regardless of the relationship names.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param firstUserId The user ID of the first user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param secondUserId The user ID of the second user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return True if the list contains any relationship between the given users, False otherwise.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean hasAnyRelationshipBetween(String firstUserId, String secondUserId) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireAllNonNull(firstUserId, secondUserId);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return internalList.stream()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .anyMatch(r -\u003e isRelationshipBetweenUsers(r, firstUserId, secondUserId));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Checks if the given relationship is between the two specified users.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param relationship The relationship to check.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param firstUserId The user ID of the first user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param secondUserId The user ID of the second user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return True if the relationship is between the two specified users, False otherwise.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private boolean isRelationshipBetweenUsers(Relationship relationship, String firstUserId, String secondUserId) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return (relationship.getFirstUserId().equals(firstUserId)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 relationship.getSecondUserId().equals(secondUserId))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (relationship.getFirstUserId().equals(secondUserId)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 relationship.getSecondUserId().equals(firstUserId));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a relationship to the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The relationship must not already exist in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param toAdd The relationship to add.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws DuplicateRelationshipException If the relationship already exists in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void add(Relationship toAdd) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd, \"Relationship to add cannot be null\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicateRelationshipException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        logger.fine(\"Added relationship: \" + toAdd);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes the relationship with the given user IDs and name from the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The relationship must exist in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param firstUserId The user ID of the first user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param secondUserId The user ID of the second user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param relationshipName The name of the relationship.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws RelationshipNotFoundException If no such relationship could be found in the list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove(String firstUserId, String secondUserId, String relationshipName) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(firstUserId, secondUserId, relationshipName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        boolean wasRemoved \u003d internalList.removeIf(relationship -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                relationship.isSameRelationship(firstUserId, secondUserId, relationshipName));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!wasRemoved) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new RelationshipNotFoundException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.fine(String.format(\"Removed relationship between %s and %s\", firstUserId, secondUserId));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @return An unmodifiable view of the relationship list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cRelationship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns an iterator over the relationships in this list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @return An iterator over the relationships in this list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public Iterator\u003cRelationship\u003e iterator() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Checks if this relationship list is the same as the given relationship list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return True if this relationship list is the same as the given relationship list, False otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniqueRelationshipList otherRelationshipList)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return internalList.equals(otherRelationshipList.internalList);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns the hash code of this relationship list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @return The hash code of this relationship list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Returns the relationship with the given user IDs and name.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @param userId1 The user ID of the first user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @param userId2 The user ID of the second user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @param relationshipName The name of the relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @return The relationship with the given user IDs and name, or null if not found.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public Relationship getRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return internalList.stream()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.isSameRelationship(userId1, userId2, relationshipName))","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .orElse(null);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Replaces the relationship {@code target} in the list with {@code editedRelationship}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @param target The relationship to replace.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @param editedRelationship The edited relationship.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void setRelationship(Relationship target, Relationship editedRelationship) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(editedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw new RelationshipNotFoundException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        internalList.set(index, editedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"     * Sets the relationships in this list to the given list of relationships.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"     * @param relationships The list of relationships to set.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"    public void setRelationships(List\u003cRelationship\u003erelationships) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"        requireNonNull(relationships);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"        internalList.setAll(relationships);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"     * Removes all relationships that involve the given user ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsvari"},"content":"     * @param userId The ID of the user whose relationships should be removed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"itsvari"},"content":"     * @return true if any relationships were removed, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsvari"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsvari"},"content":"    public boolean removeRelationshipsInvolvingUser(String userId) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsvari"},"content":"        return internalList.removeIf(relationship -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsvari"},"content":"                relationship.getFirstUserId().equals(userId) || relationship.getSecondUserId().equals(userId));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":21,"-":208}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String date;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String location;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedEvent(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"date\") String date,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"location\") String location,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"description\") String description,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"contacts\") List\u003cJsonAdaptedPerson\u003e contacts) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contacts !\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.contacts.addAll(contacts);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.id \u003d source.getId();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.date \u003d source.getDate();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.location \u003d source.getLocation();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.description \u003d source.getDescription();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.tags.addAll(source.getTags().stream().map(JsonAdaptedTag::new).toList());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.contacts.addAll(source.getContacts().stream().map(JsonAdaptedPerson::new).toList());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Optionally, add further validation for name if required.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Name\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Date\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        LocalDateTime parsedDate \u003d LocalDateTime.parse(date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final List\u003cPerson\u003e modelContacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonContact : contacts) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            modelContacts.add(jsonContact.toModelType());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList contactsList \u003d new UniquePersonList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (Person p : modelContacts) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            contactsList.add(p);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChauuuLe"},"content":"        if (this.id \u003d\u003d null || this.id.isEmpty()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new Event(name, parsedDate, location, description, modelTags, contactsList);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChauuuLe"},"content":"        } else {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChauuuLe"},"content":"            return new Event(id, name, parsedDate, location, description, modelTags, contactsList);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":4,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Social;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String socials;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    private final String id;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"social\") List\u003cString\u003e socials,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"            @JsonProperty(\"id\") String id) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (socials !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.socials \u003d String.join(\",\", socials);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.socials \u003d \"\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        socials \u003d source.getSocials().stream().map(Social::toString).collect(Collectors.joining(\",\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream().map(JsonAdaptedTag::new).toList());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"        id \u003d source.getId();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Set\u003cSocial\u003e personSocials \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String[] socialsValues \u003d socials.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        for (String s : socialsValues) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            personSocials.add(new Social(s));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Stickiem"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Stickiem"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Stickiem"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Stickiem"},"content":"        if (!(phone.equals(\"~\")) \u0026\u0026 !Phone.isValidPhone(phone)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Stickiem"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Stickiem"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Stickiem"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Stickiem"},"content":"        if (!(email.equals(\"~\")) \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Stickiem"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Stickiem"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Stickiem"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Stickiem"},"content":"        if (!(address.equals(\"~\")) \u0026\u0026 !Address.isValidAddress(address)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, personSocials, modelTags, id);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"itsvari":7,"-":112,"Stickiem":12}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"EventCard.fxml\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final Event event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private VBox eventDetails;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label locationLabel;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label description;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label eventId;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private VBox contactsPane;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code EventCard} with the given {@code Event}, displayed index, and AddressBook.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EventCard(Event event, int displayedIndex, AddressBook addressBook) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.event \u003d event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(event.getName());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        date.setText(\"Date: \" + event.getDate());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        locationLabel.setText(\"Location: \" + event.getLocation());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        description.setText(\"Description: \" + event.getDescription());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        eventId.setText(\"Event ID: \" + event.getId());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Populate tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        event.getTags().stream()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Populate contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        populateContacts();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Populates the contacts pane with names of persons involved in the event.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private void populateContacts() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (event.getContacts().isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            Label noContacts \u003d new Label(\"No contacts\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            contactsPane.getChildren().add(noContacts);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        contactsPane.getChildren().add(new Label(\"Contacts:\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        event.getContacts().forEach(person -\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChauuuLe"},"content":"            String contactName \u003d person.getName().fullName;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChauuuLe"},"content":"            Label contactLabel \u003d new Label(contactName);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            contactsPane.getChildren().add(contactLabel);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":2,"-":84}},{"path":"src/main/resources/view/EventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"locationLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"eventId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$eventId\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"      \u003cVBox fx:id\u003d\"contactsPane\" styleClass\u003d\"cell_small_label\" spacing\u003d\"2\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c!-- Contacts will be added here dynamically --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":1,"-":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Stickiem"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"         title\u003d\"INcontact\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Menu bar --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c!-- Top panel --\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cHBox HBox.hgrow\u003d\"ALWAYS\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c!-- App logo --\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cImageView fitWidth\u003d\"190\" fitHeight\u003d\"190\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cimage\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003cImage url\u003d\"@/images/INcontact_logo.png\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/image\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c!-- Command section --\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cVBox maxWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c!-- Command box --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c!-- Result display --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c!-- Main split view: Event list and Person list --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"          \u003c!-- Event list panel --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Stickiem"},"content":"          \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Stickiem"},"content":"            \u003cLabel text\u003d\"Events\" style\u003d\"-fx-font-size: 20px; -fx-text-fill: white\"/\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"          \u003c!-- Person list panel --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Stickiem"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Stickiem"},"content":"            \u003cLabel text\u003d\"Contacts\" style\u003d\"-fx-font-size: 20px; -fx-text-fill: white\"/\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c!-- Status bar --\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false}],"authorContributionMap":{"-":100,"Stickiem":5}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"    public void getSortedFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getSortedFilteredPersonList().remove(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"    public void getFilteredRelationshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredRelationshipList().remove(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"    public void getAddressBookFilePath_modifyPath_returnsCorrectPath() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"        Path expectedPath \u003d Paths.get(\"data/addressbook.json\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedPath, logic.getAddressBookFilePath());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"    public void getGuiSettings_modifySettings_returnsCorrectSettings() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        GuiSettings expectedGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedGuiSettings, logic.getGuiSettings());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"    public void setGuiSettings_nullSettings_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.setGuiSettings(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    public void setGuiSettings_validSettings_setsGuiSettings() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        GuiSettings expectedGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        logic.setGuiSettings(expectedGuiSettings);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedGuiSettings, logic.getGuiSettings());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"itsvari":41,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.DateParserUtil;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"class AddEventCommandTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null, null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws CommandException, ParseException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Event validEvent \u003d new Event(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \"A valid event name.\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                DateParserUtil.parseDate(\"2025-01-01\"),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new UniquePersonList()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent, List.of()).execute(modelStub);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"                String.format(AddEventCommand.MESSAGE_SUCCESS, validEvent),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(List.of(validEvent), modelStub.events);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        private final java.util.ArrayList\u003cEvent\u003e events \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            requireNonNull(events);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            events.add(event);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":1,"-":59}},{"path":"src/test/java/seedu/address/logic/commands/AddRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddRelationshipCommandTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void constructor_nullRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"2\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \"Friend\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \"1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \"Friend\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \"1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \"2\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \"1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \"2\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \"Friend\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \"1\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \"2\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \"Friend\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, \"First user ID cannot be null\", () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"                null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"                \"2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"                \"Friend\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"                \"Reports to\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"                \"Second user ID cannot be null\", () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"                        \"1\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"                        null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"                        \"Friend\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"                        \"Reports to\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"                        new HashSet\u003c\u003e()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                \"Forward relationship name cannot be null\", () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"                        \"1\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"                        \"2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"                        null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"                        \"Reports to\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"                        new HashSet\u003c\u003e()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"                \"Reverse relationship name cannot be null\", () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"                        \"1\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"                        \"2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"                        \"Friend\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"                        null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"                        new HashSet\u003c\u003e()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"                \"Tags set cannot be null\", () -\u003e new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"                        \"1\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"                        \"2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"                        \"Friend\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"                        \"Reports to\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"                        null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_relationshipAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelStubAcceptingRelationshipAdded modelStub \u003d new ModelStubAcceptingRelationshipAdded();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPhone(\"87654321\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelStub.addPerson(person1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelStub.addPerson(person2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Relationship validRelationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withUser1Id(person1.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withUser2Id(person2.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                person1.getId(), person2.getId(), \"Boss of\", \"Reports to\", new HashSet\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(\"New relationship created between Amy Bee and Bob\", commandResult.getFeedbackToUser());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(validRelationship, modelStub.relationshipAdded);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicateRelationship_throwsCommandException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPhone(\"87654321\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPersonsAndRelationship(person1, person2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                person1.getId(), person2.getId(), \"Boss of\", \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                AddRelationshipCommand.MESSAGE_DUPLICATE_RELATIONSHIP, () -\u003e addRelationshipCommand.execute(modelStub));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_samePerson_throwsCommandException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                person.getId(), person.getId(), \"Boss of\", \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                AddRelationshipCommand.MESSAGE_SAME_PERSON, () -\u003e addRelationshipCommand.execute(modelStub));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_emptyName_throwsCommandException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPhone(\"87654321\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPersons(person1, person2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addRelationshipCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                person1.getId(), person2.getId(), \"\", \"\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                AddRelationshipCommand.MESSAGE_EMPTY_NAME, () -\u003e addRelationshipCommand.execute(modelStub));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"        AddRelationshipCommand command \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, \"Model cannot be null\", () -\u003e command.execute(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"    public void execute_hasExistingReversedRelationship_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        ModelStubAcceptingRelationshipAdded modelStub \u003d new ModelStubAcceptingRelationshipAdded();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPhone(\"87654321\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        modelStub.addPerson(person1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"        modelStub.addPerson(person2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"        // Add reversed relationship first","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"        Relationship existingRelationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Reports to\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"                .withReverseName(\"Boss of\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"        modelStub.addRelationship(existingRelationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"        // Try to add relationship in opposite direction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"        AddRelationshipCommand addCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Boss of\", \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, AddRelationshipCommand.MESSAGE_DUPLICATE_RELATIONSHIP, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"    public void toString_returnsCorrectString() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"        AddRelationshipCommand command \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Boss of\", \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        String expected \u003d \"seedu.address.logic.commands.AddRelationshipCommand{userId1\u003d1, userId2\u003d2, \"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"                + \"forwardName\u003dBoss of, reverseName\u003dReports to, tags\u003d[]}\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String user1Id \u003d \"1\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String user2Id \u003d \"2\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String name1 \u003d \"Friend\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String name2 \u003d \"BusinessPartner\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addFriendCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                user1Id, user2Id, name1, \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addBusinessPartnerCommand \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"                user1Id, user2Id, name2, \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(addFriendCommand, addFriendCommand);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        AddRelationshipCommand addFriendCommandCopy \u003d new AddRelationshipCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                user1Id, user2Id, name1, \"Reports to\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(addFriendCommand, addFriendCommandCopy);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertNotEquals(null, addFriendCommand);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertNotEquals(addFriendCommand, addBusinessPartnerCommand);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (person.getId().equals(id)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * A Model stub that contains two persons.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private static class ModelStubWithPersons extends ModelStub {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        private final Person person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        private final Person person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ModelStubWithPersons(Person person1, Person person2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            requireNonNull(person2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (person1.getId().equals(id)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            } else if (person2.getId().equals(id)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * A Model stub that contains two persons and a relationship between them.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    private static class ModelStubWithPersonsAndRelationship extends ModelStubWithPersons {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        private final Relationship relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        ModelStubWithPersonsAndRelationship(Person person1, Person person2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            super(person1, person2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"            this.relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .withUser1Id(person1.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .withUser2Id(person2.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public boolean hasRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return relationship.isSameRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * A Model stub that always accepts the relationship being added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    private static class ModelStubAcceptingRelationshipAdded extends ModelStub {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        private Relationship relationshipAdded;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        private final java.util.ArrayList\u003cPerson\u003e persons \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public boolean hasRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"            requireNonNull(userId1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"            requireNonNull(userId2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"            requireNonNull(relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return relationshipAdded !\u003d null","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    \u0026\u0026 relationshipAdded.isSameRelationship(userId1, userId2, relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public void addRelationship(Relationship relationship) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"            requireNonNull(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"            relationshipAdded \u003d relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"            requireNonNull(id);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return persons.stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    .filter(p -\u003e p.getId().equals(id))","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    .findFirst()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    .orElse(null);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"            persons.add(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":75,"-":245}},{"path":"src/test/java/seedu/address/logic/commands/AddTagToRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"public class AddTagToRelationshipCommandTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        // null user1Id","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"                null, \"2\", \"Friend\", new Tag(\"tag\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        // null user2Id","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"                \"1\", null, \"Friend\", new Tag(\"tag\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        // null relationshipName","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", null, new Tag(\"tag\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        // null tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    public void execute_relationshipNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        ModelStubWithoutRelationship modelStub \u003d new ModelStubWithoutRelationship();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command \u003d new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", new Tag(\"tag\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"                AddTagToRelationshipCommand.MESSAGE_RELATIONSHIP_NOT_FOUND, () -\u003e command.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"    public void execute_duplicateTag_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"        Tag existingTag \u003d new Tag(\"existing\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        tags.add(existingTag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"                .withTags(\"existing\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship modelStub \u003d new ModelStubWithRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command \u003d new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Friend\", existingTag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"                AddTagToRelationshipCommand.MESSAGE_DUPLICATE_TAG, () -\u003e command.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"    public void execute_validTag_success() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        Tag newTag \u003d new Tag(\"new\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship modelStub \u003d new ModelStubWithRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command \u003d new AddTagToRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Friend\", newTag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"        CommandResult result \u003d command.execute(modelStub);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        assertEquals(String.format(AddTagToRelationshipCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"                relationship.withAddedTag(newTag)), result.getFeedbackToUser());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelStub.isRelationshipUpdated);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"    public void equals() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"        String userId1 \u003d \"user1\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"        String userId2 \u003d \"user2\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        String relationshipName \u003d \"Friend\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        Tag tag1 \u003d new Tag(\"tag1\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"        Tag tag2 \u003d new Tag(\"tag2\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command1 \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command1Copy \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command2 \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"                tag2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentUser1 \u003d new AddTagToRelationshipCommand(\"other\", userId2,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"                relationshipName, tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentUser2 \u003d new AddTagToRelationshipCommand(userId1, \"other\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"                relationshipName, tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentName \u003d new AddTagToRelationshipCommand(userId1, userId2, \"Other\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        assertEquals(command1, command1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"        assertEquals(command1, command1Copy);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(null, command1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1, command2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        // different user ID 1 -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1, commandDifferentUser1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"        // different user ID 2 -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1, commandDifferentUser2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"        // different relationship name -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1, commandDifferentName);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"    public void hashCode_test() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"        String userId1 \u003d \"user1\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"        String userId2 \u003d \"user2\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"        String relationshipName \u003d \"Friend\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"        Tag tag1 \u003d new Tag(\"tag1\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"        Tag tag2 \u003d new Tag(\"tag2\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command1 \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command1Copy \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand command2 \u003d new AddTagToRelationshipCommand(userId1, userId2, relationshipName,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"                tag2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"        // Same values -\u003e same hashcode","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"        assertEquals(command1.hashCode(), command1Copy.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        // Different tag -\u003e different hashcode","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1.hashCode(), command2.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        // Different user ID 1 -\u003e different hashcode","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentUser1 \u003d new AddTagToRelationshipCommand(\"other\", userId2,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"                relationshipName, tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1.hashCode(), commandDifferentUser1.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"        // Different user ID 2 -\u003e different hashcode","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentUser2 \u003d new AddTagToRelationshipCommand(userId1, \"other\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"                relationshipName, tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1.hashCode(), commandDifferentUser2.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"        // Different relationship name -\u003e different hashcode","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"        AddTagToRelationshipCommand commandDifferentName \u003d new AddTagToRelationshipCommand(userId1, userId2, \"Other\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"                tag1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1.hashCode(), commandDifferentName.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithoutRelationship extends ModelStub {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithRelationship extends ModelStub {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"        private final Relationship relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        private boolean isRelationshipUpdated \u003d false;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship(Relationship relationship) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"            this.relationship \u003d relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"        @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"        public Relationship getRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"            return relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"        @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"        public void updateRelationship(Relationship target, Relationship updatedRelationship) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"            isRelationshipUpdated \u003d true;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":196}},{"path":"src/test/java/seedu/address/logic/commands/DeleteRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteRelationshipCommandTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteRelationshipCommand(null, \"2\", \"Friend\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteRelationshipCommand(\"1\", null, \"Friend\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteRelationshipCommand(\"1\", \"2\", null));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void execute_emptyParameters_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        ModelStub modelStub \u003d new ModelStubWithPersons(null, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(\"\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand finalCommand \u003d command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"                finalCommand.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        command \u003d new DeleteRelationshipCommand(\"1\", \"\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand finalCommand1 \u003d command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"                finalCommand1.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        command \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"  \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand finalCommand2 \u003d command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"                finalCommand2.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"    public void execute_personsNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        // Both persons not found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"        ModelStub modelStub \u003d new ModelStubWithPersons(null, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        ModelStub finalModelStub \u003d modelStub;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"                command.execute(finalModelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"        // First person not found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"        Person secondPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        modelStub \u003d new ModelStubWithPersons(null, secondPerson);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        ModelStub finalModelStub1 \u003d modelStub;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                command.execute(finalModelStub1));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        // Second person not found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        Person firstPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        modelStub \u003d new ModelStubWithPersons(firstPerson, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        ModelStub finalModelStub2 \u003d modelStub;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_PERSONS_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"                command.execute(finalModelStub2));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"    public void execute_relationshipNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        ModelStub modelStub \u003d new ModelStubWithPersonsNoRelationship(person1, person2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"NonexistentRelationship\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class, DeleteRelationshipCommand.MESSAGE_RELATIONSHIP_NOT_FOUND, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"                command.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"    public void execute_validRelationship_success() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship modelStub \u003d new ModelStubWithRelationship(person1, person2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"        CommandResult result \u003d command.execute(modelStub);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        assertEquals(String.format(DeleteRelationshipCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"                person1.getName(), person2.getName()), result.getFeedbackToUser());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelStub.isRelationshipDeleted);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command1 \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command2 \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command3 \u003d new DeleteRelationshipCommand(\"2\", \"3\", \"Colleague\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"        assertEquals(command1, command1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(command1, command3);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(null, command1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    public void toString_returnsCorrectFormat() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        DeleteRelationshipCommand command \u003d new DeleteRelationshipCommand(\"1\", \"2\", \"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"DeleteRelationshipCommand: Deleting relationship \u0027Friend\u0027 between 1 and 2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"                command.toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class ModelStubWithPersons extends ModelStub {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Person person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Person person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        ModelStubWithPersons(Person person1, Person person2) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Person getPersonById(String id) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"            if (person1 !\u003d null \u0026\u0026 person1.getId().equals(id)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                return person1;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"            if (person2 !\u003d null \u0026\u0026 person2.getId().equals(id)) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                return person2;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithPersonsNoRelationship extends ModelStubWithPersons {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"        ModelStubWithPersonsNoRelationship(Person person1, Person person2) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"            super(person1, person2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void deleteRelationship(String userId1, String userId2, String relationshipName)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throws RelationshipNotFoundException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new RelationshipNotFoundException();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithRelationship extends ModelStubWithPersons {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"        private boolean isRelationshipDeleted \u003d false;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship(Person person1, Person person2) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"            super(person1, person2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"            Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"                    .withUser1Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"                    .withUser2Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"                    .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"        public void deleteRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            requireNonNull(userId1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(userId2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(relationshipName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"            isRelationshipDeleted \u003d true;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":91,"-":92}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagFromRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"public class DeleteTagFromRelationshipCommandTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        Tag validTag \u003d new Tag(\"valid\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        // null userId1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"                null, \"2\", \"Friend\", validTag));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        // null userId2","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"                \"1\", null, \"Friend\", validTag));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        // null relationshipName","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", null, validTag));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        // null tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        DeleteTagFromRelationshipCommand command \u003d new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", new Tag(\"tag\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"    public void execute_relationshipNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        ModelStubWithoutRelationship modelStub \u003d new ModelStubWithoutRelationship();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        DeleteTagFromRelationshipCommand command \u003d new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"                \"1\", \"2\", \"Friend\", new Tag(\"tag\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"                DeleteTagFromRelationshipCommand.MESSAGE_RELATIONSHIP_NOT_FOUND, () -\u003e command.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"    public void execute_tagNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"        Tag nonExistingTag \u003d new Tag(\"nonexistent\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                .withTags(\"existing\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship modelStub \u003d new ModelStubWithRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        DeleteTagFromRelationshipCommand command \u003d new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Friend\", nonExistingTag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"                DeleteTagFromRelationshipCommand.MESSAGE_TAG_NOT_FOUND, () -\u003e command.execute(modelStub));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"    public void execute_validTag_success() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"        Tag tagToRemove \u003d new Tag(\"friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(person1.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(person2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"                .withTags(\"friend\", \"colleague\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship modelStub \u003d new ModelStubWithRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        DeleteTagFromRelationshipCommand command \u003d new DeleteTagFromRelationshipCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"                person1.getId(), person2.getId(), \"Friend\", tagToRemove);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        CommandResult result \u003d command.execute(modelStub);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"        assertEquals(String.format(DeleteTagFromRelationshipCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"                relationship.withRemovedTag(tagToRemove)), result.getFeedbackToUser());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelStub.isRelationshipUpdated);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithoutRelationship extends ModelStub {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"    private static class ModelStubWithRelationship extends ModelStub {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        private final Relationship relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        private boolean isRelationshipUpdated \u003d false;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        ModelStubWithRelationship(Relationship relationship) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"            this.relationship \u003d relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"        @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"        public Relationship getRelationship(String userId1, String userId2, String relationshipName) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"            requireNonNull(userId1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"            requireNonNull(userId2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"            requireNonNull(relationshipName);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"            return relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"        @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"        public void updateRelationship(Relationship target, Relationship updatedRelationship) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"            requireNonNull(target);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"            requireNonNull(updatedRelationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"            isRelationshipUpdated \u003d true;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":126}},{"path":"src/test/java/seedu/address/logic/commands/FindRelationshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersonsTestSet2.ALICE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersonsTestSet2.BENSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersonsTestSet2.getTypicalAddressBook;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.predicate.RelationshipContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindRelationshipCommand}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindRelationshipCommandTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Create a new address book with our test data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook(getTypicalAddressBook());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Setup models","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Setup relationships","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String aliceId \u003d ALICE.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String bensonId \u003d BENSON.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Create relationship with forward and reverse names","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new Relationship(aliceId, bensonId, \"family\", \"family\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Add the relationship to both models","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate firstPredicate \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new RelationshipContainsKeywordsAsSubstringPredicate(Collections.singletonList(\"first\"), model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate secondPredicate \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new RelationshipContainsKeywordsAsSubstringPredicate(Collections.singletonList(\"second\"), model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindRelationshipCommand findFirstCommand \u003d new FindRelationshipCommand(firstPredicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindRelationshipCommand findSecondCommand \u003d new FindRelationshipCommand(secondPredicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FindRelationshipCommand findFirstCommandCopy \u003d new FindRelationshipCommand(firstPredicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate predicate \u003d preparePredicate(\" \", model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindRelationshipCommand command \u003d new FindRelationshipCommand(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_keywordMatchesRelationship_personsFound() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate predicate \u003d preparePredicate(\"family\", model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindRelationshipCommand command \u003d new FindRelationshipCommand(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Setup expected result with ALICE and BENSON who have a \"family\" relationship","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Add another relationship with a different relationship type","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String aliceId \u003d ALICE.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String bensonId \u003d BENSON.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new Relationship(aliceId, bensonId, \"friend\", \"friend\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedModel.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate predicate \u003d preparePredicate(\"friend family\", model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        FindRelationshipCommand command \u003d new FindRelationshipCommand(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_partialKeywords_partialPersonsFound() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Add another relationship with a relationship type containing partial match","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String aliceId \u003d ALICE.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String bensonId \u003d BENSON.getId();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new Relationship(aliceId, bensonId, \"colleague\", \"colleague\", new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        expectedModel.addRelationship(relationship);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate predicate \u003d preparePredicate(\"lea\", model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        FindRelationshipCommand command \u003d new FindRelationshipCommand(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        RelationshipContainsKeywordsAsSubstringPredicate predicate \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new RelationshipContainsKeywordsAsSubstringPredicate(Arrays.asList(\"family\"), model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        FindRelationshipCommand findCommand \u003d new FindRelationshipCommand(predicate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expected \u003d FindRelationshipCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expected, \"seedu.address.logic.commands.\" + findCommand.toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code RelationshipContainsKeywordsAsSubstringPredicate}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private RelationshipContainsKeywordsAsSubstringPredicate preparePredicate(String userInput, Model model) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new RelationshipContainsKeywordsAsSubstringPredicate(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")), model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":2,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SortCommandTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fieldsOne \u003d Arrays.asList(\"name\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fieldsTwo \u003d Arrays.asList(\"phone\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e multipleFields \u003d Arrays.asList(\"name\", \"phone\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        SortCommand sortByNameCommand \u003d new SortCommand(false, fieldsOne);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        SortCommand sortByNameReverseCommand \u003d new SortCommand(true, fieldsOne);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        SortCommand sortByPhoneCommand \u003d new SortCommand(false, fieldsTwo);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        SortCommand sortMultipleCommand \u003d new SortCommand(false, multipleFields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(sortByNameCommand.equals(sortByNameCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        SortCommand sortByNameCommandCopy \u003d new SortCommand(false, fieldsOne);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(sortByNameCommand.equals(sortByNameCommandCopy));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(sortByNameCommand.equals(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(sortByNameCommand.equals(null));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different fields -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(sortByNameCommand.equals(sortByPhoneCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(sortByNameCommand.equals(sortByNameReverseCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different number of fields -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(sortByNameCommand.equals(sortMultipleCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByName_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(nameComparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByNameReversed_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(true, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(nameComparator.reversed());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByPhone_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"phone\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e phoneComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(phoneComparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByEmail_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"email\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e emailComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getEmail().toString().compareToIgnoreCase(p2.getEmail().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(emailComparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByAddress_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"address\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e addressComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getAddress().toString().compareToIgnoreCase(p2.getAddress().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(addressComparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByTags_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"tags\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e tagsComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getTags().toString().compareToIgnoreCase(p2.getTags().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(tagsComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortBySocials_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"socials\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e socialsComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getSocials().toString().compareToIgnoreCase(p2.getSocials().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(socialsComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByMultipleFields_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\", \"phone\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e multiFieldComparator \u003d (","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        multiFieldComparator \u003d multiFieldComparator.thenComparing((","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        expectedModel.updateSortedPersonList(multiFieldComparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByTagsThenAddress_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"tags\", \"address\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e tagsComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getTags().toString().compareToIgnoreCase(p2.getTags().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"TrKNguyen"},"content":"        tagsComparator \u003d tagsComparator.thenComparing((","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getAddress().toString().compareToIgnoreCase(p2.getAddress().toString()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(tagsComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByEmailThenTags_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"email\", \"tags\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e emailComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getEmail().toString().compareToIgnoreCase(p2.getEmail().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"TrKNguyen"},"content":"        emailComparator \u003d emailComparator.thenComparingInt(p -\u003e p.getTags().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(emailComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByPhoneThenSocials_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"phone\", \"socials\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e phoneComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"TrKNguyen"},"content":"        phoneComparator \u003d phoneComparator.thenComparingInt(p -\u003e p.getSocials().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(phoneComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByThreeFields_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\", \"phone\", \"email\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(false, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e multiFieldComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"TrKNguyen"},"content":"        multiFieldComparator \u003d multiFieldComparator.thenComparing((","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"TrKNguyen"},"content":"        multiFieldComparator \u003d multiFieldComparator.thenComparing((","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getEmail().toString().compareToIgnoreCase(p2.getEmail().toString()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(multiFieldComparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByTagsReversed_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"tags\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(true, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e tagsComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getTags().toString().compareToIgnoreCase(p2.getTags().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(tagsComparator.reversed());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"TrKNguyen"},"content":"    public void execute_sortByMultipleFieldsReversed_success() throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\", \"phone\", \"email\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"TrKNguyen"},"content":"        SortCommand command \u003d new SortCommand(true, fields);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"TrKNguyen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"TrKNguyen"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"TrKNguyen"},"content":"        Comparator\u003cPerson\u003e multiFieldComparator \u003d (","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"TrKNguyen"},"content":"        multiFieldComparator \u003d multiFieldComparator.thenComparing((","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"TrKNguyen"},"content":"        multiFieldComparator \u003d multiFieldComparator.thenComparing((","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"TrKNguyen"},"content":"                p1, p2) -\u003e p1.getEmail().toString().compareToIgnoreCase(p2.getEmail().toString()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"TrKNguyen"},"content":"        expectedModel.updateSortedPersonList(multiFieldComparator.reversed());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"TrKNguyen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"TrKNguyen"},"content":"        // Verify that the lists are sorted the same way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e modelList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"TrKNguyen"},"content":"        List\u003cPerson\u003e expectedList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"TrKNguyen"},"content":"        assertEquals(expectedList.size(), modelList.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"TrKNguyen"},"content":"        for (int i \u003d 0; i \u003c modelList.size(); i++) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedList.get(i), modelList.get(i));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"    public void testToString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"        List\u003cString\u003e fields \u003d Arrays.asList(\"name\", \"phone\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"        SortCommand command \u003d new SortCommand(true, fields);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"        String expected \u003d \"SortCommand{isReverse\u003dtrue, fields\u003d[name, phone]}\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":156,"-":245}},{"path":"src/test/java/seedu/address/logic/parser/AddRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddRelationshipCommand;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddRelationshipCommandParserTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final AddRelationshipCommandParser parser \u003d new AddRelationshipCommandParser();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Basic case","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" u/1 u/2 fn/Friend rn/Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new AddRelationshipCommand(\"1\", \"2\", \"Friend\", \"Reports to\", new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // With tags","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        tags.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" u/1 u/2 fn/Friend rn/Reports to t/friend\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new AddRelationshipCommand(\"1\", \"2\", \"Friend\", \"Reports to\", tags));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // With multiple tags","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        multipleTags.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        multipleTags.add(new Tag(\"colleague\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" u/1 u/2 fn/Friend rn/Reports to t/friend t/colleague\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new AddRelationshipCommand(\"1\", \"2\", \"Friend\", \"Reports to\", multipleTags));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Missing user ID prefixes","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" fn/Friend rn/Reports to\", expectedMessage);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Only one user ID","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" u/1 fn/Friend rn/Reports to\", expectedMessage);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Missing name prefix","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" u/1 u/2\", expectedMessage);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Missing all prefixes","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Non-empty preamble","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"some random string u/1 u/2 fn/Friend rn/Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRelationshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Invalid tag","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" u/1 u/2 fn/Friend rn/Reports to t/*\u0026\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"    public void parse_invalidNameValues_throwsParseException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"        // Missing forward name value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 rn/Reports to\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"        // Missing reverse name value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 fn/Boss of\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":11,"-":66}},{"path":"src/test/java/seedu/address/logic/parser/AddTagToRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.AddTagToRelationshipCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"public class AddTagToRelationshipCommandParserTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    private final AddTagToRelationshipCommandParser parser \u003d new AddTagToRelationshipCommandParser();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"        // Basic case","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"        assertParseSuccess(parser, \" u/1 u/2 n/Friend t/colleague\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"                new AddTagToRelationshipCommand(\"1\", \"2\", \"Friend\", new Tag(\"colleague\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"        // Multiple tags - takes last tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        assertParseSuccess(parser, \" u/1 u/2 n/Friend t/colleague t/friend\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"                new AddTagToRelationshipCommand(\"1\", \"2\", \"Friend\", new Tag(\"friend\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"                AddTagToRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        // Missing user IDs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        // Missing first user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"        // Missing second user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        // Missing relationship name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        // Missing tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 n/Friend\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"                AddTagToRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        // No prefix for userIds","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" 1 2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"        // No prefix for name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        // No prefix for tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 n/Friend colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        // Invalid preamble","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \"some random text u/1 u/2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"    public void parse_exactlyTwoUserIds_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        // Exactly two user IDs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"        assertParseSuccess(parser, \" u/1 u/2 n/Friend t/colleague\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"                new AddTagToRelationshipCommand(\"1\", \"2\", \"Friend\", new Tag(\"colleague\")));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"    public void parse_incorrectNumberOfUserIds_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"                AddTagToRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        // Only one user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        // More than two user IDs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 u/3 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":83}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.AddRelationshipCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.DeleteRelationshipCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.FindAddressCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.FindEmailCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.FindPhoneCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.FindSocialCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.RedoListCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.predicate.AddressContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.predicate.EmailContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.predicate.NameContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.predicate.PhoneContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.predicate.SocialContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), model);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, model) instanceof ClearCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", model) instanceof ClearCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), model);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, model) instanceof ExitCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", model) instanceof ExitCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_findName() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"                FindNameCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsAsSubstringPredicate(keywords)), command);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_findAddress() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"clementi\", \"bedok\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"        FindAddressCommand command \u003d (FindAddressCommand) parser.parseCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"                FindAddressCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        assertEquals(new FindAddressCommand(new AddressContainsKeywordsAsSubstringPredicate(keywords)), command);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_findEmail() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"test@example.com\", \"user@domain.com\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"        FindEmailCommand command \u003d (FindEmailCommand) parser.parseCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"                FindEmailCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"        assertEquals(new FindEmailCommand(new EmailContainsKeywordsAsSubstringPredicate(keywords)), command);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_findPhone() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"12345\", \"67890\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"        FindPhoneCommand command \u003d (FindPhoneCommand) parser.parseCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"                FindPhoneCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"        assertEquals(new FindPhoneCommand(new PhoneContainsKeywordsAsSubstringPredicate(keywords)), command);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_findSocial() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"twitter\", \"facebook\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"        FindSocialCommand command \u003d (FindSocialCommand) parser.parseCommand(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"                FindSocialCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords), model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"        assertEquals(new FindSocialCommand(new SocialContainsKeywordsAsSubstringPredicate(keywords)), command);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, model) instanceof HelpCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", model) instanceof HelpCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, model) instanceof ListCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", model) instanceof ListCommand);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"        String sortCommand \u003d SortCommand.COMMAND_WORD + \" name phone\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"        Command command \u003d parser.parseCommand(sortCommand, model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"        assertTrue(command instanceof SortCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"SortCommand{isReverse\u003dfalse, fields\u003d[name, phone]}\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"                command.toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"        String redoCommand \u003d RedoCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"        Command command \u003d parser.parseCommand(redoCommand, model);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"        assertTrue(command instanceof RedoCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"RedoCommand{commandIndex\u003d1}\", command.toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_redoList() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"        assertTrue(parser.parseCommand(RedoListCommand.COMMAND_WORD, model) instanceof RedoListCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"    public void parseCommand_relationshipCommands() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"        // Test AddRelationshipCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"        assertTrue(parser.parseCommand(AddRelationshipCommand.COMMAND_WORD + \" u/1 u/2 fn/Friend rn/Friend\", model)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"                instanceof AddRelationshipCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"        // Test DeleteRelationshipCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        assertTrue(parser.parseCommand(DeleteRelationshipCommand.COMMAND_WORD + \" u/1 u/2 n/Friend\", model)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"                instanceof DeleteRelationshipCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\", model));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\", model));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"itsvari":86,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TrKNguyen"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TrKNguyen"},"content":"                                          String expectedMessage) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TrKNguyen"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TrKNguyen"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} using {@code model} is successful","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TrKNguyen"},"content":"     * and the resulting {@code Command} equals to {@code expectedCommand}.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TrKNguyen"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TrKNguyen"},"content":"    public static void assertRelationshipParseSuccess(FindRelationshipCommandParser parser,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TrKNguyen"},"content":"                                                      String userInput, Model model, Command expectedCommand) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TrKNguyen"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TrKNguyen"},"content":"            Command command \u003d parser.parse(userInput, model);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TrKNguyen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TrKNguyen"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TrKNguyen"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TrKNguyen"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} using {@code model} is unsuccessful","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TrKNguyen"},"content":"     * and the error message equals to {@code expectedMessage}.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TrKNguyen"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TrKNguyen"},"content":"    public static void assertRelationshipParseFailure(FindRelationshipCommandParser parser, String userInput,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TrKNguyen"},"content":"                                                      Model model, String expectedMessage) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TrKNguyen"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TrKNguyen"},"content":"            parser.parse(userInput, model);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TrKNguyen"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TrKNguyen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TrKNguyen"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TrKNguyen"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":30,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagFromRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.DeleteTagFromRelationshipCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"public class DeleteTagFromRelationshipCommandParserTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"    private final DeleteTagFromRelationshipCommandParser parser \u003d new DeleteTagFromRelationshipCommandParser();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"                DeleteTagFromRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"        // Missing user IDs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"        // Missing first user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"        // Missing second user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        // Missing relationship name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        // Missing tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 n/Friend\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"                DeleteTagFromRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        // No prefix for userIds","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" 1 2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        // No prefix for name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        // No prefix for tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 n/Friend colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"        // Invalid preamble","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \"some random text u/1 u/2 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"    public void parse_incorrectNumberOfUserIds_failure() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"                DeleteTagFromRelationshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"        // Only one user ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        // More than two user IDs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        assertParseFailure(parser, \" u/1 u/2 u/3 n/Friend t/colleague\", expectedMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":63}},{"path":"src/test/java/seedu/address/logic/parser/FindRelationshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TrKNguyen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TrKNguyen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TrKNguyen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TrKNguyen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertRelationshipParseFailure;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TrKNguyen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertRelationshipParseSuccess;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TrKNguyen"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TrKNguyen"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TrKNguyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.logic.commands.FindRelationshipCommand;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.predicate.RelationshipContainsKeywordsAsSubstringPredicate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TrKNguyen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TrKNguyen"},"content":"public class FindRelationshipCommandParserTest {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TrKNguyen"},"content":"    private final FindRelationshipCommandParser parser \u003d new FindRelationshipCommandParser();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TrKNguyen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TrKNguyen"},"content":"        // Test invalid user input: any input should throw a ParseException because the method always throws it.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TrKNguyen"},"content":"        assertParseFailure(parser, \"random input\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TrKNguyen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindRelationshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TrKNguyen"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TrKNguyen"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TrKNguyen"},"content":"        assertRelationshipParseFailure(parser, \" \", model, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TrKNguyen"},"content":"                FindRelationshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TrKNguyen"},"content":"    public void parse_validArgs_returnsFindRelationshipCommand() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TrKNguyen"},"content":"        // Set up sample data (mock relationships for testing)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TrKNguyen"},"content":"        Person person1 \u003d new Person(new Name(\"John Doe\"), new Phone(\"12345678\"), new Email(\"johndoe@example.com\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TrKNguyen"},"content":"                new Address(\"123 Street\"), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TrKNguyen"},"content":"        Person person2 \u003d new Person(new Name(\"Jane Doe\"), new Phone(\"98765432\"), new Email(\"janedoe@example.com\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TrKNguyen"},"content":"                new Address(\"456 Avenue\"), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TrKNguyen"},"content":"        // Set up tags for relationship","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TrKNguyen"},"content":"        Tag friendTag \u003d new Tag(\"Friend\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TrKNguyen"},"content":"        // Create relationship","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TrKNguyen"},"content":"        Relationship relationship1 \u003d new Relationship(person1.getId(), person2.getId(), \"Close friends\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TrKNguyen"},"content":"                \"Best friends\", new HashSet\u003c\u003e(Arrays.asList(friendTag)));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TrKNguyen"},"content":"        // Initialize ModelManager","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TrKNguyen"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TrKNguyen"},"content":"        // Add relationship to the model","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TrKNguyen"},"content":"        model.addRelationship(relationship1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TrKNguyen"},"content":"        // Expected FindRelationshipCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TrKNguyen"},"content":"        FindRelationshipCommand expectedFindCommand \u003d new FindRelationshipCommand(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TrKNguyen"},"content":"                new RelationshipContainsKeywordsAsSubstringPredicate(Arrays.asList(\"friend\"), model));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TrKNguyen"},"content":"        FindRelationshipCommand expectedFindCommandAnotherCase \u003d new FindRelationshipCommand(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TrKNguyen"},"content":"                new RelationshipContainsKeywordsAsSubstringPredicate(Arrays.asList(\"friend\", \"best\"), model));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TrKNguyen"},"content":"        // Calling the parser with valid input","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TrKNguyen"},"content":"        assertRelationshipParseSuccess(parser, \"friend\", model, expectedFindCommand);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TrKNguyen"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TrKNguyen"},"content":"        // Valid input with multiple whitespaces between keywords","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TrKNguyen"},"content":"        assertRelationshipParseSuccess(parser, \" \\n friend \\n \\t best \\t\", model,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TrKNguyen"},"content":"                expectedFindCommandAnotherCase);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TrKNguyen"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":75}},{"path":"src/test/java/seedu/address/logic/parser/RedoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class RedoCommandParserTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final RedoCommandParser parser \u003d new RedoCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsRedoCommand() throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // Valid index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new RedoCommand(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"3\", new RedoCommand(3));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TrKNguyen"},"content":"        assertParseSuccess(parser, \"8\", new RedoCommand(8));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // Valid index with leading/trailing spaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" 2 \", new RedoCommand(2));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Empty args","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Non-numeric index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"abc\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Index out of range (\u003c 1)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TrKNguyen"},"content":"        // Index out of range (\u003e 10)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TrKNguyen"},"content":"        assertParseFailure(parser, \"11\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TrKNguyen"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TrKNguyen"},"content":"    public void toString_returnsCorrectString() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TrKNguyen"},"content":"        // Test that toString returns the expected string","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TrKNguyen"},"content":"        String expected \u003d \"RedoCommandParser{}\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TrKNguyen"},"content":"        String actual \u003d parser.toString();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TrKNguyen"},"content":"        assert(actual.equals(expected));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TrKNguyen"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"TrKNguyen":10,"-":48}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.parser.DateParserUtil;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"        assertEquals(FXCollections.observableArrayList(), addressBook.getRelationshipList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"        assertEquals(FXCollections.observableArrayList(), addressBook.getEventList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getRelationshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getRelationshipList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEventList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + \", relationships\u003d\" + addressBook.getRelationshipList()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + \", events\u003d\" + addressBook.getEventList() + \"}\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void hasRelationship_nullRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasRelationship(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void hasRelationship_relationshipNotInAddressBook_returnsFalse() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasRelationship(relationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void hasRelationship_relationshipInAddressBook_returnsTrue() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        addressBook.addPerson(alice);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.addPerson(bob);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withUser1Id(alice.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withUser2Id(bob.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.addRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasRelationship(relationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void hasRelationshipByIds_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasRelationship(null, \"2\", \"Friend\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasRelationship(\"1\", null, \"Friend\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasRelationship(\"1\", \"2\", null));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void hasRelationshipByIds_relationshipNotInAddressBook_returnsFalse() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasRelationship(\"1\", \"2\", \"Friend\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void hasRelationshipByIds_relationshipInAddressBook_returnsTrue() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        addressBook.addPerson(alice);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        addressBook.addPerson(bob);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .withUser1Id(alice.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .withUser2Id(bob.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        addressBook.addRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasRelationship(alice.getId(), bob.getId(), RelationshipBuilder.DEFAULT_FORWARD_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void removeRelationship_existingRelationship_removesRelationship() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        addressBook.addPerson(alice);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        addressBook.addPerson(bob);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .withUser1Id(alice.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .withUser2Id(bob.getId())","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        addressBook.addRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        addressBook.removeRelationship(alice.getId(), bob.getId(), RelationshipBuilder.DEFAULT_FORWARD_NAME);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasRelationship(relationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void removeRelationship_nonExistingRelationship_throwsRelationshipNotFoundException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(RelationshipNotFoundException.class, () -\u003e addressBook.removeRelationship(\"1\", \"2\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_FORWARD_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void getPersonById_existingId_returnsPerson() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        addressBook.addPerson(alice);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(alice, addressBook.getPersonById(alice.getId()));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void getPersonById_nonExistingId_returnsNull() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertNull(addressBook.getPersonById(\"nonexistent\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"    public void sortPersons_withComparator_sortsList() throws CommandException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"        addressBook.addPerson(bob);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsvari"},"content":"        addressBook.addPerson(alice);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"        // Sort by name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"        addressBook.sortPersons(Comparator.comparing(person -\u003e person.getName().fullName));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsvari"},"content":"        assertEquals(alice, addressBook.getPersonList().get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"itsvari"},"content":"        assertEquals(bob, addressBook.getPersonList().get(1));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsvari"},"content":"    public void sortPersons_nullComparator_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.sortPersons(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"itsvari"},"content":"    public void removePersonFromEvents_personInEvents_removesPersonFromEvents() throws ParseException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"itsvari"},"content":"        Person person \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"itsvari"},"content":"        Event event \u003d new Event(\"Meeting\", DateParserUtil.parseDate(\"2024-01-01\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"itsvari"},"content":"        event.addContact(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"itsvari"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"itsvari"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"itsvari"},"content":"        addressBook.removePerson(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"itsvari"},"content":"        assertFalse(event.getContacts().contains(person));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"itsvari"},"content":"    public void setEvent_validTargetAndEditedEvent_success() throws ParseException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"itsvari"},"content":"        Event originalEvent \u003d new Event(\"Meeting\", DateParserUtil.parseDate(\"2024-01-01\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"itsvari"},"content":"        Event editedEvent \u003d new Event(\"Updated Meeting\", DateParserUtil.parseDate(\"2024-01-02\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"itsvari"},"content":"        addressBook.addEvent(originalEvent);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"itsvari"},"content":"        addressBook.setEvent(originalEvent, editedEvent);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, addressBook.getEventList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"itsvari"},"content":"        assertEquals(editedEvent, addressBook.getEventList().get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"itsvari"},"content":"    public void setEvent_targetEventNotFound_throwsIllegalArgumentException() throws ParseException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"itsvari"},"content":"        Event originalEvent \u003d new Event(\"Meeting\", DateParserUtil.parseDate(\"2024-01-01\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"itsvari"},"content":"        Event editedEvent \u003d new Event(\"Updated Meeting\", DateParserUtil.parseDate(\"2024-01-02\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e addressBook.setEvent(originalEvent, editedEvent));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"itsvari"},"content":"    public void updateRelationship_validTargetAndUpdatedRelationship_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"itsvari"},"content":"        Relationship originalRelationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"itsvari"},"content":"        Relationship updatedRelationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"UpdatedName\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"itsvari"},"content":"                .withTags(\"UpdatedTag\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"itsvari"},"content":"        addressBook.addRelationship(originalRelationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"itsvari"},"content":"        addressBook.updateRelationship(originalRelationship, updatedRelationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"itsvari"},"content":"        assertTrue(addressBook.hasRelationship(updatedRelationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"itsvari"},"content":"        assertFalse(addressBook.hasRelationship(originalRelationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"itsvari"},"content":"    public void setRelationships_validList_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"itsvari"},"content":"        Relationship relationship1 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"itsvari"},"content":"        Relationship relationship2 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"3\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"4\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"itsvari"},"content":"        List\u003cRelationship\u003e relationships \u003d Arrays.asList(relationship1, relationship2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"itsvari"},"content":"        addressBook.setRelationships(relationships);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, addressBook.getRelationshipList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"itsvari"},"content":"        assertTrue(addressBook.hasRelationship(relationship1));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"itsvari"},"content":"        assertTrue(addressBook.hasRelationship(relationship2));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"itsvari"},"content":"    public void equals_sameEvents_returnsTrue() throws ParseException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook1 \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"itsvari"},"content":"        Event event \u003d new Event(\"Meeting\", DateParserUtil.parseDate(\"2024-01-01\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"itsvari"},"content":"        addressBook1.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"itsvari"},"content":"        addressBook2.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"itsvari"},"content":"        assertEquals(addressBook1, addressBook2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"itsvari"},"content":"    public void hashCode_sameContent_sameHashCode() throws ParseException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook1 \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"itsvari"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"itsvari"},"content":"        Event event \u003d new Event(\"Meeting\", DateParserUtil.parseDate(\"2024-01-01\"), null, null, null,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"itsvari"},"content":"                new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"itsvari"},"content":"        addressBook1.addPerson(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"itsvari"},"content":"        addressBook1.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"itsvari"},"content":"        addressBook1.addRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"itsvari"},"content":"        addressBook2.addPerson(person);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"itsvari"},"content":"        addressBook2.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"itsvari"},"content":"        addressBook2.addRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"itsvari"},"content":"        assertEquals(addressBook1.hashCode(), addressBook2.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cRelationship\u003e relationships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public ObservableList\u003cRelationship\u003e getRelationshipList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"            return relationships;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"            return events;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24","isFullCredit":false}],"authorContributionMap":{"itsvari":138,"-":225}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RELATIONSHIPS;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"import seedu.address.logic.parser.DateParserUtil;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(FXCollections.observableArrayList(), modelManager.getFilteredRelationshipList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        assertEquals(FXCollections.observableArrayList(), modelManager.getFilteredEventList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"    public void deletePerson_personInAddressBookAndHasRelationship_deletesPersonAndRelationship() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        Person benson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(alice.getId()).withUser2Id(benson.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(alice);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(benson);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasPerson(alice));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(relationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        modelManager.deletePerson(alice);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasPerson(alice));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"    public void setPerson_validTargetAndEditedPerson_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(\"New Address\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"        modelManager.setPerson(ALICE, editedAlice);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"        assertEquals(editedAlice, modelManager.getFilteredPersonList().get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"    public void updateSortedPersonList_validComparator_sortsList() throws CommandException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(CARL);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"        // Sort A-Z","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d Comparator.comparing(p -\u003e p.getName().toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"        modelManager.updateSortedPersonList(nameComparator);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"        ObservableList\u003cPerson\u003e sortedList \u003d modelManager.getSortedFilteredPersonList();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"        assertEquals(ALICE, sortedList.get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"        assertEquals(BENSON, sortedList.get(1));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        assertEquals(CARL, sortedList.get(2));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"        // Sort Z-A","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        modelManager.updateSortedPersonList(nameComparator.reversed());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        sortedList \u003d modelManager.getSortedFilteredPersonList();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"        assertEquals(CARL, sortedList.get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        assertEquals(BENSON, sortedList.get(1));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"        assertEquals(ALICE, sortedList.get(2));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"    public void hasRelationship_nullRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasRelationship(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"    public void hasRelationship_relationshipNotInAddressBook_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasRelationship(r));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"    public void hasRelationship_relationshipInAddressBook_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(r));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"    public void hasRelationshipByIds_nullParams_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasRelationship(null, \"id2\", \"friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasRelationship(\"id1\", null, \"friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasRelationship(\"id1\", \"id2\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"    public void hasRelationshipByIds_relationshipExists_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(p1.getId(), p2.getId(), r.getForwardName()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(p2.getId(), p1.getId(), r.getReverseName()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"    public void hasRelationshipByIds_relationshipDoesNotExist_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasRelationship(\"id1\", \"id2\", \"friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"    public void hasAnyRelationship_nullParams_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAnyRelationship(null, \"id2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAnyRelationship(\"id1\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsvari"},"content":"    public void hasAnyRelationship_relationshipExists_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasAnyRelationship(p1.getId(), p2.getId()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasAnyRelationship(p2.getId(), p1.getId()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"itsvari"},"content":"    public void hasAnyRelationship_relationshipDoesNotExist_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasAnyRelationship(\"id1\", \"id2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"itsvari"},"content":"    public void deleteRelationship_relationshipExists_success() throws RelationshipNotFoundException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(r));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"itsvari"},"content":"        modelManager.deleteRelationship(p1.getId(), p2.getId(), r.getForwardName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasRelationship(r));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"itsvari"},"content":"    public void deleteRelationship_relationshipDoesNotExist_throwsRelationshipNotFoundException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"itsvari"},"content":"        assertThrows(RelationshipNotFoundException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"itsvari"},"content":"                modelManager.deleteRelationship(\"id1\", \"id2\", \"friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"itsvari"},"content":"    public void getRelationship_relationshipExists_returnsRelationship() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"itsvari"},"content":"        assertEquals(r, modelManager.getRelationship(p1.getId(), p2.getId(), r.getForwardName()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"itsvari"},"content":"        assertEquals(r, modelManager.getRelationship(p2.getId(), p1.getId(), r.getReverseName()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"itsvari"},"content":"    public void getRelationship_relationshipDoesNotExist_returnsNull() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"itsvari"},"content":"        assertNull(modelManager.getRelationship(\"id1\", \"id2\", \"friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"itsvari"},"content":"    public void updateRelationship_validTargetAndEdited_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"itsvari"},"content":"        Relationship originalRel \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(originalRel);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"itsvari"},"content":"        Relationship editedRel \u003d new RelationshipBuilder(originalRel).withForwardName(\"Supervisor\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"itsvari"},"content":"        modelManager.updateRelationship(originalRel, editedRel);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasRelationship(editedRel));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasRelationship(originalRel));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public void updateFilteredRelationshipList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredRelationshipList(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"itsvari"},"content":"    public void updateFilteredRelationshipList_validPredicate_filtersList() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"itsvari"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"itsvari"},"content":"        Person p2 \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"itsvari"},"content":"        Person p3 \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"itsvari"},"content":"        Relationship r1 \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p2.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Friend\").withReverseName(\"Friend\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"itsvari"},"content":"        Relationship r2 \u003d new RelationshipBuilder().withUser1Id(p1.getId()).withUser2Id(p3.getId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Colleague\").withReverseName(\"Colleague\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"itsvari"},"content":"        modelManager.addPerson(p3);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"itsvari"},"content":"        assertEquals(2, modelManager.getFilteredRelationshipList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"itsvari"},"content":"        Predicate\u003cRelationship\u003e friendPredicate \u003d r -\u003e r.getForwardName().equals(\"Friend\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredRelationshipList(friendPredicate);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, modelManager.getFilteredRelationshipList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"itsvari"},"content":"        assertEquals(r1, modelManager.getFilteredRelationshipList().get(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"itsvari"},"content":"    private Event createSampleEvent(String name) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"itsvari"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"itsvari"},"content":"            return new Event(name, DateParserUtil.parseDate(\"2025-01-01\"), null, null, null, new UniquePersonList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"itsvari"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"itsvari"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"itsvari"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"itsvari"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"itsvari"},"content":"    public void hasEvent_eventNotInAddressBook_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Meeting\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasEvent(event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"itsvari"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Meeting\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"itsvari"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasEvent(event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"itsvari"},"content":"    public void addEvent_validEvent_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Team Lunch\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"itsvari"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasEvent(event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, modelManager.getFilteredEventList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"itsvari"},"content":"    public void updateEvent_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Meeting\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateEvent(null, event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateEvent(event, null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"itsvari"},"content":"    public void deleteEvent_eventExists_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Meeting\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"itsvari"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.hasEvent(event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"itsvari"},"content":"        modelManager.deleteEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"itsvari"},"content":"        assertFalse(modelManager.hasEvent(event));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"itsvari"},"content":"        assertTrue(modelManager.getFilteredEventList().isEmpty());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"                modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public void updateFilteredEventList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredEventList(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"itsvari"},"content":"    public void getEventById_nullId_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.getEventById(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"itsvari"},"content":"    public void getEventById_eventExists_returnsEvent() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"itsvari"},"content":"        Event event \u003d createSampleEvent(\"Meeting\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"itsvari"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"itsvari"},"content":"        assertEquals(event, modelManager.getEventById(event.getId()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"itsvari"},"content":"    public void getEventById_eventDoesNotExist_returnsNull() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"itsvari"},"content":"        assertNull(modelManager.getEventById(\"nonexistent-id\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"itsvari"},"content":"    public void equals() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"itsvari"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"itsvari"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"itsvari"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"itsvari"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"itsvari"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"itsvari"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"itsvari"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"itsvari"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"itsvari"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"itsvari"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"itsvari"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"itsvari"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"itsvari"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"itsvari"},"content":"        // different filteredRelationshipList -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"itsvari"},"content":"        Relationship r1 \u003d new RelationshipBuilder().withUser1Id(ALICE.getId()).withUser2Id(BENSON.getId()).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"itsvari"},"content":"        modelManager.addRelationship(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"itsvari"},"content":"        ModelManager modelManagerWithRelationship \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"itsvari"},"content":"        modelManagerWithRelationship.addRelationship(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredRelationshipList(rel -\u003e false);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(modelManager, modelManagerWithRelationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredRelationshipList(PREDICATE_SHOW_ALL_RELATIONSHIPS);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"itsvari"},"content":"        // different filteredEventList -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"itsvari"},"content":"        Event event1 \u003d createSampleEvent(\"Event 1\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"itsvari"},"content":"        modelManager.addEvent(event1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"itsvari"},"content":"        ModelManager modelManagerWithEvent \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"itsvari"},"content":"        modelManagerWithEvent.addRelationship(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"itsvari"},"content":"        modelManagerWithEvent.addEvent(event1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredEventList(evt -\u003e false);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(modelManager, modelManagerWithEvent);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"itsvari"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"itsvari"},"content":"        // different GUI settings -\u003e returns false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"itsvari"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"itsvari"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"itsvari"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"itsvari":298,"-":153}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Stickiem"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Stickiem"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Stickiem"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Stickiem"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":52,"Stickiem":4}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Stickiem"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Stickiem"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Stickiem"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Stickiem"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Stickiem"},"content":"        assertFalse(Email.isValidEmail(\"hi~@gmail.com\")); // local part contains \"~\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":84,"Stickiem":5}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Stickiem"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Stickiem"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Stickiem"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Stickiem"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Stickiem"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":55,"Stickiem":5}},{"path":"src/test/java/seedu/address/model/relationship/RelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RelationshipTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(null, \"2\", \"Friend\", \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(\"1\", null, \"Friend\", \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(\"1\", \"2\", null, \"Reports to\", new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(\"1\", \"2\", \"Friend\", null, new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Relationship(\"1\", \"2\", \"Friend\", \"Reports to\", null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(\"1\", \"2\", \"\", \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(\"1\", \"2\", \"Friend\", \"\", new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(\"1\", \"2\", \" \", \"Reports to\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(\"1\", \"2\", \"Friend\", \" \", new HashSet\u003c\u003e()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void isSameRelationship() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(relationship.isSameRelationship(relationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(null));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different forward name -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Relationship editedRelationship \u003d new RelationshipBuilder().withForwardName(\"Different\").build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(editedRelationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different reverse name -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withReverseName(\"Different\").build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(editedRelationship));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same names, same user1Id, different user2Id -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withUser2Id(\"different\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(editedRelationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same names, different user1Id, same user2Id -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withUser1Id(\"different\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(editedRelationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same names, switched user IDs -\u003e returns true","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withUser1Id(RelationshipBuilder.DEFAULT_USER2_ID)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withUser2Id(RelationshipBuilder.DEFAULT_USER1_ID)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withForwardName(RelationshipBuilder.DEFAULT_REVERSE_NAME)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withReverseName(RelationshipBuilder.DEFAULT_FORWARD_NAME)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(relationship.isSameRelationship(editedRelationship));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isSameRelationshipWithStrings() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same parameters -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(relationship.isSameRelationship(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER1_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER2_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_FORWARD_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(relationship.isSameRelationship(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER2_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER1_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_REVERSE_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // switched user IDs, but wrong name -\u003e returns true","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(relationship.isSameRelationship(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER2_ID,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER1_ID,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_FORWARD_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER1_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_USER2_ID,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \"Different\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different user IDs -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(relationship.isSameRelationship(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \"different1\",","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \"different2\",","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                RelationshipBuilder.DEFAULT_FORWARD_NAME));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void involvesUser() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // user1Id -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(relationship.involvesUser(RelationshipBuilder.DEFAULT_USER1_ID));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // user2Id -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(relationship.involvesUser(RelationshipBuilder.DEFAULT_USER2_ID));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different user -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(relationship.involvesUser(\"differentUser\"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"    public void getNameFromPerspective_validUserId_returnsCorrectName() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        // Test getting name from first user\u0027s perspective","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"        assertEquals(RelationshipBuilder.DEFAULT_FORWARD_NAME,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"                relationship.getNameFromPerspective(RelationshipBuilder.DEFAULT_USER1_ID));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"        // Test getting name from second user\u0027s perspective","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"        assertEquals(RelationshipBuilder.DEFAULT_REVERSE_NAME,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"                relationship.getNameFromPerspective(RelationshipBuilder.DEFAULT_USER2_ID));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"    public void getNameFromPerspective_invalidUserId_throwsIllegalArgumentException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"                relationship.getNameFromPerspective(\"invalid_id\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"    public void withAddedTag_newTag_returnsNewRelationshipWithAddedTag() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"        Relationship originalRelationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"        Tag newTag \u003d new Tag(\"newTag\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"        Relationship updatedRelationship \u003d originalRelationship.withAddedTag(newTag);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"        // Check that the new relationship contains the new tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"        assertTrue(updatedRelationship.getTags().contains(newTag));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"        // Check that the original relationship is unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"        assertFalse(originalRelationship.getTags().contains(newTag));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"        // Check that other properties remain the same","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getFirstUserId(), updatedRelationship.getFirstUserId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getSecondUserId(), updatedRelationship.getSecondUserId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getForwardName(), updatedRelationship.getForwardName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getReverseName(), updatedRelationship.getReverseName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"    public void withRemovedTag_existingTag_returnsNewRelationshipWithoutTag() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"        // Create a relationship with an initial tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"        Set\u003cTag\u003e initialTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        Tag tagToRemove \u003d new Tag(\"toRemove\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"        initialTags.add(tagToRemove);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"        Relationship originalRelationship \u003d new RelationshipBuilder().withTags(tagToRemove.tagName).build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"        Relationship updatedRelationship \u003d originalRelationship.withRemovedTag(tagToRemove);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"        // Check that the new relationship doesn\u0027t contain the removed tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"        assertFalse(updatedRelationship.getTags().contains(tagToRemove));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"        // Check that the original relationship still contains the tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"        assertTrue(originalRelationship.getTags().contains(tagToRemove));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"        // Check that other properties remain the same","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getFirstUserId(), updatedRelationship.getFirstUserId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getSecondUserId(), updatedRelationship.getSecondUserId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getForwardName(), updatedRelationship.getForwardName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"        assertEquals(originalRelationship.getReverseName(), updatedRelationship.getReverseName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"    public void hashCode_consistentRegardlessOfDirection() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"        // Create two relationships with same content but different direction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"        Relationship relationship1 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Boss\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsvari"},"content":"                .withReverseName(\"Employee\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"                .withTags(\"Work\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsvari"},"content":"        Relationship relationship2 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Employee\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsvari"},"content":"                .withReverseName(\"Boss\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsvari"},"content":"                .withTags(\"Work\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"        // Hash codes should be equal","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"        assertEquals(relationship1.hashCode(), relationship2.hashCode());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Relationship relationshipCopy \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(relationship, relationshipCopy);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(relationship, relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertNotEquals(null, relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // different forwardName -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Relationship editedRelationship \u003d new RelationshipBuilder().withForwardName(\"Different\").build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertNotEquals(relationship, editedRelationship);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // different reverseName -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withReverseName(\"Different\").build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertNotEquals(relationship, editedRelationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // different user1Id -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withUser1Id(\"different\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertNotEquals(relationship, editedRelationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // different user2Id -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withUser2Id(\"different\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertNotEquals(relationship, editedRelationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        editedRelationship \u003d new RelationshipBuilder().withTags(\"Different\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertNotEquals(relationship, editedRelationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String expected \u003d \"[Forward: \" + relationship.getForwardName() + \", Reverse: \" + relationship.getReverseName()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"                + \"] Between: \" + relationship.getFirstUserId() + \" and \" + relationship.getSecondUserId();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertEquals(expected, relationship.toString());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // with tags","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        relationship \u003d new RelationshipBuilder().withTags(\"Tag1\", \"Tag2\").build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        expected \u003d \"[Forward: \" + relationship.getForwardName() + \", Reverse: \" + relationship.getReverseName()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + \"] Between: \" + relationship.getFirstUserId() + \" and \" + relationship.getSecondUserId()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                + \" Tags: [Tag1][Tag2]\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertEquals(expected, relationship.toString());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":88,"-":171}},{"path":"src/test/java/seedu/address/model/relationship/UniqueRelationshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.model.relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.exceptions.DuplicateRelationshipException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.exceptions.RelationshipNotFoundException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"public class UniqueRelationshipListTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"    private final UniqueRelationshipList uniqueRelationshipList \u003d new UniqueRelationshipList();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"    public void contains_nullRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.contains(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    public void contains_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.contains(null, \"2\", \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.contains(\"1\", null, \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.contains(\"1\", \"2\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    public void hasAnyRelationshipBetween_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.hasAnyRelationshipBetween(null, \"2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.hasAnyRelationshipBetween(\"1\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"    public void contains_relationshipNotInList_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        assertFalse(uniqueRelationshipList.contains(new RelationshipBuilder().build()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    public void contains_relationshipInList_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        assertTrue(uniqueRelationshipList.contains(relationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"    public void contains_relationshipInListWithDifferentDirection_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsvari"},"content":"                .withForwardName(\"Boss\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsvari"},"content":"                .withReverseName(\"Employee\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        // Check reverse direction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"        assertTrue(uniqueRelationshipList.contains(\"2\", \"1\", \"Employee\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"    public void hasAnyRelationshipBetween_existingRelationship_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsvari"},"content":"        assertTrue(uniqueRelationshipList.hasAnyRelationshipBetween(\"1\", \"2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        assertTrue(uniqueRelationshipList.hasAnyRelationshipBetween(\"2\", \"1\")); // Reverse order","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"    public void add_nullRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRelationshipList.add(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"    public void add_duplicateRelationship_throwsDuplicateRelationshipException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(relationship);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"        assertThrows(DuplicateRelationshipException.class, () -\u003e uniqueRelationshipList.add(relationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"    public void remove_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.remove(null, \"2\", \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.remove(\"1\", null, \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.remove(\"1\", \"2\", null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"    public void remove_relationshipNotInList_throwsRelationshipNotFoundException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        assertThrows(RelationshipNotFoundException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.remove(\"1\", \"2\", \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"    public void setRelationship_nullEditedRelationship_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.setRelationship(relationship, null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsvari"},"content":"    public void setRelationship_targetNotInList_throwsRelationshipNotFoundException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsvari"},"content":"        Relationship target \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsvari"},"content":"        Relationship editedRelationship \u003d new RelationshipBuilder().withForwardName(\"NewName\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsvari"},"content":"        assertThrows(RelationshipNotFoundException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.setRelationship(target, editedRelationship));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsvari"},"content":"    public void setRelationship_validTarget_success() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsvari"},"content":"        Relationship original \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(original);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsvari"},"content":"        Relationship edited \u003d new RelationshipBuilder().withForwardName(\"NewName\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.setRelationship(original, edited);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsvari"},"content":"        UniqueRelationshipList expectedList \u003d new UniqueRelationshipList();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsvari"},"content":"        expectedList.add(edited);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedList, uniqueRelationshipList);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsvari"},"content":"    public void setRelationships_nullList_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsvari"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.setRelationships(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsvari"},"content":"    public void removeRelationshipsInvolvingUser_userHasRelationships_returnsTrue() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsvari"},"content":"        Relationship r1 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsvari"},"content":"        Relationship r2 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"3\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsvari"},"content":"        assertTrue(uniqueRelationshipList.removeRelationshipsInvolvingUser(\"1\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsvari"},"content":"        assertEquals(0, uniqueRelationshipList.asUnmodifiableObservableList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsvari"},"content":"    public void removeRelationshipsInvolvingUser_userHasNoRelationships_returnsFalse() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsvari"},"content":"        assertFalse(uniqueRelationshipList.removeRelationshipsInvolvingUser(\"3\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsvari"},"content":"        assertEquals(1, uniqueRelationshipList.asUnmodifiableObservableList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsvari"},"content":"    public void getRelationship_existingRelationship_returnsRelationship() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsvari"},"content":"        assertEquals(r, uniqueRelationshipList.getRelationship(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsvari"},"content":"                r.getFirstUserId(), r.getSecondUserId(), r.getForwardName()));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsvari"},"content":"    public void getRelationship_nonExistentRelationship_returnsNull() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsvari"},"content":"        assertFalse(uniqueRelationshipList.contains(\"1\", \"2\", \"Friend\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsvari"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsvari"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsvari"},"content":"                uniqueRelationshipList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsvari"},"content":"    public void iterator() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsvari"},"content":"        Relationship r1 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"1\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsvari"},"content":"        Relationship r2 \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsvari"},"content":"                .withUser1Id(\"2\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsvari"},"content":"                .withUser2Id(\"3\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsvari"},"content":"                .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsvari"},"content":"        List\u003cRelationship\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsvari"},"content":"        expectedList.add(r1);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsvari"},"content":"        expectedList.add(r2);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsvari"},"content":"        List\u003cRelationship\u003e actualList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.iterator().forEachRemaining(actualList::add);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsvari"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsvari"},"content":"    public void toString_nonEmptyList_returnsStringRepresentation() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsvari"},"content":"        Relationship r \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsvari"},"content":"        uniqueRelationshipList.add(r);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"[\" + r.toString() + \"]\", uniqueRelationshipList.toString());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":216}},{"path":"src/test/java/seedu/address/model/relationship/exceptions/DuplicateRelationshipExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.model.relationship.exceptions;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"public class DuplicateRelationshipExceptionTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"    public void constructor_defaultConstructor_correctMessage() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"        DuplicateRelationshipException exception \u003d new DuplicateRelationshipException();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"        assertEquals(\"Operation would result in duplicate relationships between the same users.\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":15}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.Social;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e VALID_SOCIALS \u003d BENSON.getSocials().stream()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"            .map(Social::toString).collect(Collectors.toList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"    private static final String VALID_ID \u003d BENSON.getId();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_SOCIALS, VALID_TAGS,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"                        VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsvari"},"content":"                VALID_SOCIALS, VALID_TAGS, VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"                        VALID_SOCIALS, VALID_TAGS, VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"                        VALID_SOCIALS, VALID_TAGS, VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"                        VALID_SOCIALS, VALID_TAGS, VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"                        VALID_SOCIALS, invalidTags, VALID_ID);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"itsvari":10,"-":93}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedRelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.RelationshipBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAdaptedRelationshipTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_USER1_ID \u003d \"123456\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_USER2_ID \u003d \"654321\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_FORWARD_NAME \u003d \"Boss of\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_REVERSE_NAME \u003d \"Reports to\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d new RelationshipBuilder().build().getTags().stream()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_validRelationshipDetails_returnsRelationship() throws Exception {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Relationship relationship \u003d new RelationshipBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship jsonRelationship \u003d new JsonAdaptedRelationship(relationship);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(relationship, jsonRelationship.toModelType());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, INVALID_NAME, VALID_REVERSE_NAME,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Relationship.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationship::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationshipReverse \u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, VALID_FORWARD_NAME, INVALID_NAME,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationshipReverse::toModelType);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, null, VALID_REVERSE_NAME, VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedRelationship.MISSING_FIELD_MESSAGE_FORMAT, \"Forward Name\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationship::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationshipReverse \u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, VALID_FORWARD_NAME, null, VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessageReverse \u003d String.format(JsonAdaptedRelationship.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \"Reverse Name\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessageReverse, relationshipReverse::toModelType);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullUser1Id_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(null, VALID_USER2_ID, VALID_FORWARD_NAME, VALID_REVERSE_NAME, VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedRelationship.MISSING_FIELD_MESSAGE_FORMAT, \"User 1 ID\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationship::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullUser2Id_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, null, VALID_FORWARD_NAME, VALID_REVERSE_NAME, VALID_TAGS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedRelationship.MISSING_FIELD_MESSAGE_FORMAT, \"User 2 ID\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationship::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, VALID_FORWARD_NAME, VALID_REVERSE_NAME,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        invalidTags);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, relationship::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"    public void constructor_nullTags_createsEmptyTagList() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, VALID_FORWARD_NAME,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"                        VALID_REVERSE_NAME, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"        // Convert to model type to verify tags list is empty","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsvari"},"content":"        assertDoesNotThrow(relationship::toModelType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"    public void toModelType_invalidBothNames_throwsIllegalValueException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"        JsonAdaptedRelationship relationship \u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"                new JsonAdaptedRelationship(VALID_USER1_ID, VALID_USER2_ID, INVALID_NAME, INVALID_NAME,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"                        VALID_TAGS);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        String expectedMessage \u003d Relationship.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, relationship::toModelType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"itsvari":19,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"import java.util.Optional;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"import seedu.address.testutil.TypicalRelationships;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data/JsonSerializableAddressBookTest/\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"    public void toModelType_nullRelationshipsAndEvents_success() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"        // Create a list of JsonAdaptedPerson","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedPerson\u003e persons \u003d TypicalPersons.getTypicalPersons().stream()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"        // Create JsonSerializableAddressBook with null relationships and events","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"        JsonSerializableAddressBook addressBook \u003d new JsonSerializableAddressBook(persons, null, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"        AddressBook modelAddressBook \u003d addressBook.toModelType();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"        // Verify that persons were added but relationships and events are empty","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"        assertEquals(TypicalPersons.getTypicalPersons().size(), modelAddressBook.getPersonList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"        assertEquals(0, modelAddressBook.getRelationshipList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        assertEquals(0, modelAddressBook.getEventList().size());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e optionalData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"                Path.of(TEST_DATA_FOLDER + \"typicalPersonsAddressBook.json\"),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.class);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsvari"},"content":"        // Ensure data is present","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsvari"},"content":"        assertTrue(optionalData.isPresent(), \"Expected file to contain valid data\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsvari"},"content":"        AddressBook addressBookFromFile \u003d optionalData.get().toModelType();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsvari"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e optionalData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsvari"},"content":"                Path.of(TEST_DATA_FOLDER + \"invalidPersonAddressBook.json\"),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.class);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsvari"},"content":"        // Ensure data is present","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsvari"},"content":"        assertTrue(optionalData.isPresent(), \"Expected file to contain data\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsvari"},"content":"        JsonSerializableAddressBook dataFromFile \u003d optionalData.get();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsvari"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e optionalData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsvari"},"content":"                Path.of(TEST_DATA_FOLDER + \"duplicatePersonAddressBook.json\"),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.class);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsvari"},"content":"        // Ensure data is present","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsvari"},"content":"        assertTrue(optionalData.isPresent(), \"Expected file to contain data\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsvari"},"content":"        JsonSerializableAddressBook dataFromFile \u003d optionalData.get();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON, dataFromFile::toModelType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsvari"},"content":"    public void toModelType_duplicateRelationships_throwsIllegalValueException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsvari"},"content":"        // Create lists with a duplicate relationship","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedRelationship\u003e relationships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsvari"},"content":"        relationships.add(new JsonAdaptedRelationship(TypicalRelationships.ALICE_BEFRIENDS_BENSON));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsvari"},"content":"        relationships.add(new JsonAdaptedRelationship(TypicalRelationships.ALICE_BEFRIENDS_BENSON));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsvari"},"content":"        JsonSerializableAddressBook addressBook \u003d new JsonSerializableAddressBook(persons, relationships, null);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.MESSAGE_DUPLICATE_RELATIONSHIP, addressBook::toModelType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsvari"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsvari"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsvari"},"content":"        // Create lists with a duplicate event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedRelationship\u003e relationships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsvari"},"content":"        List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsvari"},"content":"        events.add(new JsonAdaptedEvent(TypicalEvents.BIRTHDAY));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsvari"},"content":"        events.add(new JsonAdaptedEvent(TypicalEvents.BIRTHDAY));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsvari"},"content":"        JsonSerializableAddressBook addressBook \u003d new JsonSerializableAddressBook(persons, relationships, events);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsvari"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsvari"},"content":"                JsonSerializableAddressBook.MESSAGE_DUPLICATE_EVENT, addressBook::toModelType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"itsvari":76,"-":35}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"public class TypicalEvents {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"    public static final Event BIRTHDAY \u003d new Event(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"            \"Birthday Party\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"            LocalDateTime.of(2024, 1, 1, 18, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"            \"Marina Bay Sands\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"            \"Annual birthday celebration\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"            new UniquePersonList()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"    );","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"    public static final Event MEETING \u003d new Event(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"            \"Team Meeting\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"            LocalDateTime.of(2024, 1, 2, 14, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"            \"COM1-02-01\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"            \"Weekly team sync-up\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"            new UniquePersonList()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"    );","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"    public static final Event CONFERENCE \u003d new Event(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"            \"Tech Conference\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"            LocalDateTime.of(2024, 1, 5, 9, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"            \"Suntec Convention Centre\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"            \"Annual tech conference\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"            new UniquePersonList()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"    );","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BIRTHDAY, MEETING, CONFERENCE));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":49}},{"path":"src/test/java/seedu/address/testutil/TypicalRelationships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsvari"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsvari"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsvari"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsvari"},"content":"import java.util.List;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsvari"},"content":"import seedu.address.model.relationship.Relationship;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsvari"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsvari"},"content":" * A utility class containing a list of {@code Relationship} objects to be used in tests.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsvari"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsvari"},"content":"public class TypicalRelationships {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsvari"},"content":"    public static final Relationship ALICE_BEFRIENDS_BENSON \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsvari"},"content":"            .withUser1Id(TypicalPersons.getAliceId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsvari"},"content":"            .withUser2Id(TypicalPersons.getBensonId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsvari"},"content":"            .withForwardName(\"Friends with\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsvari"},"content":"            .withReverseName(\"Friends with\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsvari"},"content":"            .withTags(\"close\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsvari"},"content":"            .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsvari"},"content":"    public static final Relationship BENSON_MENTORS_CARL \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsvari"},"content":"            .withUser1Id(TypicalPersons.getBensonId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsvari"},"content":"            .withUser2Id(TypicalPersons.getCarlId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsvari"},"content":"            .withForwardName(\"Mentors\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsvari"},"content":"            .withReverseName(\"Mentored by\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsvari"},"content":"            .withTags(\"work\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsvari"},"content":"            .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsvari"},"content":"    public static final Relationship CARL_WORKS_WITH_DANIEL \u003d new RelationshipBuilder()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsvari"},"content":"            .withUser1Id(TypicalPersons.getCarlId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsvari"},"content":"            .withUser2Id(TypicalPersons.getDanielId())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsvari"},"content":"            .withForwardName(\"Works with\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsvari"},"content":"            .withReverseName(\"Works with\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsvari"},"content":"            .withTags(\"colleague\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsvari"},"content":"            .build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsvari"},"content":"    private TypicalRelationships() {} // prevents instantiation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsvari"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsvari"},"content":"    public static List\u003cRelationship\u003e getTypicalRelationships() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsvari"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsvari"},"content":"                ALICE_BEFRIENDS_BENSON,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsvari"},"content":"                BENSON_MENTORS_CARL,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsvari"},"content":"                CARL_WORKS_WITH_DANIEL","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsvari"},"content":"        ));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsvari"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsvari"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"itsvari":47}}]
