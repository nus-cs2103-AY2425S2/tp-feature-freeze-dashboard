[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiwong834"},"content":"    archiveFileName \u003d \u0027Prof-iler.jar\u0027","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"weiwong834":1,"-":75}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"swatirajesh277"},"content":"You can reach us at the email `e1155640@u.nus.edu (Wei Yin)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Joshua Gan","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/dragonesejosh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](https://github.com/dragonesejosh)]","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"### Swati Rajesh","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/swatirajesh277.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"[[github](http://github.com/swatirajesh277)]","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Shi JianXi","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/shijianxi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dragonesejosh"},"content":"[[github](http://github.com/shijianxi)]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Wong Wei Yin","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/weiwong834.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"[[github](http://github.com/weiwong834)]","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Jun Xu","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/gekjunxu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"[[github](http://github.com/gekjunxu)]","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"dragonesejosh":1,"swatirajesh277":1,"-":52}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `ClearConfirmationWindow` class implements the `ConfirmationWindow` interface. This design allows for the use of a test stub, `ClearConfirmationWindowStub`, which also implements the `ConfirmationWindow` interface. The purpose of this stub is to facilitate unit testing by enabling the injection of a mock confirmation window during JUnit tests.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiwong834"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1,2,4\")` API call as an example.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiwong834"},"content":"![Interactions Inside the Logic Component for the `delete 1,2,4` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `ProfilerParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a student).\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `ProfilerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `ProfilerParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"#### Special Case: `ClearCommandParser`:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"This class has an overloaded constructor, allowing for injection of a stub class `ClearConfirmationWindowStub` for unit tests, with the help of `ConfirmationWindowFactory`.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the profiler data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Profiler`, which `Person` references. This allows `Profiler` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both profiler data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* inherits from both `ProfilerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Sort feature","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### Current Implementation","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"The `SortCommand` is responsible for sorting students in Prof-iler based on their progress, in either ascending (`asc`) or descending (`desc`) order. It interacts with the `Model` component to update the displayed student list based on the specified sorting order.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"#### Class Structure","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"##### `SortCommand`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"- `SortCommand` extends `Command`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"- Stores a boolean flag `isAscending` to determine sorting order","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"- Executes sorting using a `Comparator\u003cPerson\u003e` comparator on student\u0027s progress values","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"- Calls `model.updateSortedPersonList(comparator)` to update the list","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"##### `SortCommandParser`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"- Implements `Parser\u003cSortCommand\u003e`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"- Parses user input to determine sorting order","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"- Throws a `ParseException` if input is invalid","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"##### `Logic` Interface","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"- Declares `getSortedPersonList()` for obtaining a sorted student list","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"##### `LogicManager`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"- Implements `Logic`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"- Handles command execution and updates the stored profiler after sorting","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"- Overrides the `getSortedPersonList` to obtain the sorted list from model","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"##### `Model` Interface","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"- Declares `updateSortedPersonList(Comparator\u003cPerson\u003e)`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"- Declares `getSortedPersonList`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"- Updates the internal representation of the sorted student list","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"##### `ModelManager`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"- Initializes `sortedPersons` as a `SortedList\u003cPerson\u003e` with reference to `filteredPerson`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"- Overrides `getSortedPersonList` to return the sorted list","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"- Overrides `updateSortedPersonList` to update and sort the list based on the comparator","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"#### Execution Flow","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"1. **User Input**: The user inputs the command `sort asc` or `sort desc`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"2. **Parsing**: `SortCommandParser` extracts sorting order from the user input.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"3. **Command Execution**: The `SortCommand` applies the comparator and calls `model.updateSortedPersonList(comparator)` to update the `Model`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"4. **Model Update**: The `ModelManager` updates the internal `sortedPersons` list to reflect the new sorting order.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"5. **Storage Update**: The sorted data is saved to the storage file.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the `sort asc` operation works:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"**Aspect: How sorting is executed:**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Uses a comparator to sort the list of students.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"* Pros: Easy to implement and understand","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"* Cons: May have performance issues for very large lists.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"* **Alternative 2:** Implement a custom sorting algorithm","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Pros: Can be optimized for specific use cases.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Cons: More complex to implement and maintain.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"#### Interactions with other features:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Integration with `FilterCommand`**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"- The `SortCommand` works in conjunction with `FilterCommand` to refine and organize displayed results","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"- Users can first apply a filter (e.g., `filter pr/ \u003cProjectName\u003e`) to view the students in the project that contains any of the given keywords.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"- After filtering, users can execute `sort asc` to arrange students in those projects based on their progress in ascending order.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"- This ensures that sorting only affects the currently displayed subset rather than the entire student list.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedProfiler`. It extends `Profiler` with an undo/redo history, stored internally as an `profilerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* `VersionedProfiler#commit()` — Saves the current profiler state in its history.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `VersionedProfiler#undo()` — Restores the previous profiler state from its history.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `VersionedProfiler#redo()` — Restores a previously undone profiler state from its history.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitProfiler()`, `Model#undoProfiler()` and `Model#redoProfiler()` respectively.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedProfiler` will be initialized with the initial profiler state, and the `currentStatePointer` pointing to that single profiler state.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the profiler. The `delete` command calls `Model#commitProfiler()`, causing the modified state of the profiler after the `delete 5` command executes to be saved in the `profilerStateList`, and the `currentStatePointer` is shifted to the newly inserted profiler state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitProfiler()`, causing another modified profiler state to be saved into the `profilerStateList`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitProfiler()`, so the profiler state will not be saved into the `profilerStateList`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoProfiler()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous profiler state, and restores the profiler to that state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Profiler state, then there are no previous Profiler states to restore. The `undo` command uses `Model#canUndoProfiler()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoProfiler()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the profiler to that state.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `profilerStateList.size() - 1`, pointing to the latest profiler state, then there are no undone Profiler states to restore. The `redo` command uses `Model#canRedoProfiler()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the profiler, such as `list`, will usually not call `Model#commitProfiler()`, `Model#undoProfiler()` or `Model#redoProfiler()`. Thus, the `profilerStateList` remains unchanged.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitProfiler()`. Since the `currentStatePointer` is not pointing at the end of the `profilerStateList`, all profiler states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire profiler.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"**Target user profile**: Research Professors in SoC","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of student researcher contacts and details","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Value proposition**: A management system designed to help SoC professors organize, track, and maintain student research records over time that is optimized for use via Command Line Interface (CLI) while having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"| Priority | As a …​                     | I want to …​                                                             | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"|----------|-----------------------------|--------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"| `* * *`  | Professor at SoC            | view all current research students under me                              | quickly access the list of current students                                       |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"| `* * *`  | Professor at SoC            | delete student entries that are no longer active                         | keep the database current and relevant                                            |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"| `* * *`  | Professor at SoC            | add a new student to a specific project                                  | know who are part of that specific project                                        |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | filter students based on projects and tags                               | quickly find suitable students without going through the whole list               |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | find a student\u0027s name in the directory                                   | remember what project this student worked on under me                             |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | mark student milestones as complete                                      | track the students\u0027 progress over the semester                                    |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | update and edit student information                                      | have the most up-to-date information regarding the student                        |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | tag what project the students are doing                                  | quickly know who to contact for a particular research                             |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | retrieve recently deleted changes                                        | retrieve wrongly deleted data efficiently                                         |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | update progress of a student                                             | monitor and update the student\u0027s progress in that project                         |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | Sort students based on the progress                                      | know which students are behind progress                                           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | delete multiple students at once                                         | perform delete faster when I have multiple students to delete                     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | clear all data at once                                                   | prepare for a new academic year                                                   |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | be asked for confirmation when clearing data                             | prevent accidentally clearing all data                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | be notified when there are any duplicate entries                         | keep the data relevant                                                            |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | clear students from a specific project after the project is completed    | keep track of just the ongoing projects                                           |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | find all active research in a summary dashboard                          | get a quick overview of all the ongoing research                                  |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | receive reminders about the upcoming student deadlines                   | ensure timely feedback and submissions                                            |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | find students working on similar projects in the past                    | link up current students to past students for mentoring                           |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | undo changes                                                             | maintain productivity when I accidentally make unwanted changes                   |","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | redo changes                                                             | change in case I change my mind after undoing a change                            |","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | have a help command                                                      | see all available commands                                                        |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | use shortcuts to type a command faster                                   | retrieve information faster                                                       |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | use shortcuts to add new student profiles                                | create users quicker                                                              |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | log notes about students                                                 | refer to them in the future and find out additional information about the student |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"| `* *`    | Professor at SoC            | set a preferred name for my students                                     | know what to call them                                                            |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"| `* *`    | Forgetful Professor at SoC  | set profile picture for my students                                      | remember how they look like                                                       |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"| `*`      | Vain Professor at SoC       | set my own profile picture                                               | admire my face everytime I use the application                                    |","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"| `*`      | Professor at SoC            | export data about student research into a report format                  | share my research easily                                                          |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"| `*`      | Forgetful Professor at SoC  | log research meetings with students                                      | do not forgot what we discussed in the meeting                                    |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"| `*`      | Professor at SoC            | maintain a professional network with past students                       | reconnect with them for future collaboration                                      |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"| `*`      | Professor at SoC            | create charts and diagrams to compare students across multiple semesters | decide if I need to take in more students for my projects                         |","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"| `*`      | Professor at SoC            | export each student\u0027s grades for the current semester                    | update their grades into the system easily                                        |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"| `*`      | Professor at SoC            | color tag each students                                                  | sort them effectively                                                             |","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `Prof-iler` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"#### **Use case: UC01 List all students under User**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"gekjunxu"},"content":"1. User requests to list all students.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ShiJianXi"},"content":"2. Prof-iler displays the list of all students under user.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The List is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"#### **Use case: UC02 Delete a student**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"1.  User requests to \u003ca href\u003d\"#use-case-uc01-list-all-students-under-user\" style\u003d\"text-decoration: underline;\"\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"    list all students (UC01)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003c/a\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"ShiJianXi"},"content":"2.  Prof-iler shows a list of students.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"ShiJianXi"},"content":"3.  User requests to delete the specific students in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"ShiJianXi"},"content":"4.  Prof-iler deletes the students. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"gekjunxu"},"content":"* 3a. The given index is invalid.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"ShiJianXi"},"content":"    * 3a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"#### **Use case: UC03 Add a student**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"ShiJianXi"},"content":"1. User requests to add the student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required details to add a student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler adds the student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"ShiJianXi"},"content":"4. Prof-iler displays the added student.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"ShiJianXi"},"content":"      Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"ShiJianXi"},"content":"* 2b. The student already exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    * 2b1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"ShiJianXi"},"content":"      Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC04 Edit a student**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"ShiJianXi"},"content":"1. User request to edit the details of a specific student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required input and details to be edited for that student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler updates the student with the new details. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"ShiJianXi"},"content":"   Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"ShiJianXi"},"content":"    Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC05 Update progress of a student**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"ShiJianXi"},"content":"1. User request to update the progress of the project of a specific student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required input and the new progress value.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler updates the progress of the project.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message indicating invalid input.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"ShiJianXi"},"content":"* 2b. The progress value is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"ShiJianXi"},"content":"    * 2b1. Prof-iler shows an error message indicating invalid progress.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC06 Log notes about a student**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"ShiJianXi"},"content":"1. User request to log some notes of a specific student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required input and notes regarding the student.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler logs the students with the given notes.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC07 Find students based on their name**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"ShiJianXi"},"content":"1. User requests to find certain students based on the names.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required inputs and the keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler searches for the students based on the keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"ShiJianXi"},"content":"4. Prof-iler displays all the students that matches the keywords. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"ShiJianXi"},"content":"* 3a. No student\u0027s name matches the keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"ShiJianXi"},"content":"    * 3a1. Prof-iler shows a message indicating that no student\u0027s name matches the keywords.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC08 Filter students based on project**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"ShiJianXi"},"content":"1. User requests to filter students based on their project.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required inputs and the keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler searches for students with the project that matches the keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"ShiJianXi"},"content":"4. Prof-iler displays all the students with projects that match the keywords.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"ShiJianXi"},"content":"Use case ends. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"ShiJianXi"},"content":"* 3a. No project matches the given keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"ShiJianXi"},"content":"    * 3a1. Prof-iler shows a message indicating that no project matches the keywords.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC09 Sort students based on order of progress**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"ShiJianXi"},"content":"1. User requests to sort students based on the order of progress.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"ShiJianXi"},"content":"2. User enters the required inputs and the order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler arranges the students based on the given order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"ShiJianXi"},"content":"4. Prof-iler displays the students in the given order.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The input format is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"ShiJianXi"},"content":"    * 2a1. Prof-iler shows an error message.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"ShiJianXi"},"content":"* 2b. The given order is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"ShiJianXi"},"content":"    * 2b1. Prof-iler shows an error message indicating invalid order.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"ShiJianXi"},"content":"  Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"ShiJianXi"},"content":"#### **Use case: UC10 Clear all entries**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"ShiJianXi"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"ShiJianXi"},"content":"1. User request to clear all entries.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"ShiJianXi"},"content":"2. Prof-iler asks for confirmation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"ShiJianXi"},"content":"3. Prof-iler clears all entries.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"ShiJianXi"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"ShiJianXi"},"content":"* 2a. The user declines the clearing of all entries.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"ShiJianXi"},"content":"Use case ends.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"4.  The datafile created by the program should be stored in a human-readable format.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"5.  Should work without requiring installation (i.e. packaged as a .jar file).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"6.  Should work without an internet connection, without depending on an online server.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"7.  Should follow the Object-oriented paradigm for ease of future expansion, where commands can be added with minimal changes to existing code.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"8.  The GUI should not cause any resolution-related inconveniences to the user for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%. It should remain usable (all functions can be used even if the user experience is not optimal) for resolutions 1280x720 and higher, and, for screen scales 150%.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"9.  The file size for the .jar file should not exceed 100MB, and documents like PDF files should not exceed 15MB/file.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"* **Use case**: Description of a set of sequences of actions, including variants, that a system performs to yield an observable result of value to an actor (role played by user)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"* **MSS (Main Success Scenario)**: Describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"* **Extensions**: \"Add-on\"s to the MSS that describe exceptional/alternative flow of events","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"* **Student ID**: A unique identifier assigned to each student by the university","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"* **Project**: The title of the research project a student is working on","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"gekjunxu"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"gekjunxu"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample students. The window size may not be optimum.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Deleting a student","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"gekjunxu"},"content":"      Expected: First student is deleted from the list. Details of the deleted student shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"dragonesejosh"},"content":"### Sort Function","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"dragonesejosh"},"content":"1. **Sorting students by progress**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"dragonesejosh"},"content":"   1. **Test case: `sort asc`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:** Students are displayed in ascending order of their progress.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"dragonesejosh"},"content":"   1. **Test case: `sort desc`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:**  Students are displayed in descending order based on their progress values.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"dragonesejosh"},"content":"   1. **Invalid test case: `sort invalid`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:**  The application shows an error message detailing the usage of `sort`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"dragonesejosh"},"content":"#### Filter Function","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"dragonesejosh"},"content":"1. **Filtering students by project**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"dragonesejosh"},"content":"   1. **Prerequisites:** At least one student with project containing the word `Prof-iler`, and no students with project containing the word `Invalid`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"dragonesejosh"},"content":"   1. **Test case: `filter pr/Prof-iler`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:**  Only students associated with the project \"Prof-iler\" are shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"dragonesejosh"},"content":"   1. **Test case: `filter pr/Invalid`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:** An empty list is displayed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"dragonesejosh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"dragonesejosh"},"content":"1. **Filtering students by tag**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"dragonesejosh"},"content":"   1. **Prerequisites:** At least one student with tag containing the word `Y4`, and no students with tag containing the word `Invalid`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"dragonesejosh"},"content":"   1. **Test case: `filter t/Y4`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:** Only students tagged with \"Y4\" are shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"dragonesejosh"},"content":"   2. **Test case: `filter t/Invalid`**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"dragonesejosh"},"content":"      - **Expected:** An empty list is displayed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"dragonesejosh"},"content":"3. **Test case: Invalid command**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"dragonesejosh"},"content":"   - **Command:** `filter pr/Prof-iler t/Y4`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"dragonesejosh"},"content":"   - **Expected:**  The application shows an error message: `Should only have one of pr/ or t/`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"Team Size: 5","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. Update light theme for confirmation window when clearing records. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"2. Improve UI to cater to extremely long values. Currently, if values are over a certain number of characters, it will be concatenated with `...`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"3. Allow change of theme with CLI command, to conform to `Recommendation-CLI-First`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"4. Allow help window to be closed via keyboard command, such as using the `esc` key.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"ShiJianXi"},"content":"5. Allow `Filter Command` to filter for projects that contain prefixes such as `pr/` and `t/` without error. Since a project name can take any value, the users are allowed to add projects with names such as pr/Project Prof-iler or even t/Project Orbital. However, `filter` command is not able to filter such projects efficiently in the presence of leading whitespaces in between commands. For example, `filter pr/   pr/Project Prof-iler` will lead to an error to indicate the presence of multiple prefixes `pr/`, similar for prefix `t/`. However, `filter pr/pr/Project Prof-iler` will work. This feature will be fixed in the future to ensure that `filter` command is able to parse any string after the prefix `pr/` and `t/` accurately while ignoring leading and trailing white spaces to achieve filtering of projects that contains prefixes `pr/` and `t/` in their name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"weiwong834"},"content":"6. Allow names to accept special prefixes such as s/o, d/o, w/o, and @.","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"weiwong834":3,"dragonesejosh":34,"gekjunxu":5,"ShiJianXi":120,"-":482}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gekjunxu"},"content":"Prof-iler is a **desktop app for managing student research records, optimized for use via a [Command Line Interface (CLI)](#cli)** while still having the benefits of a [Graphical User Interface (GUI)](#gui). Designed for fast typing research professors at SoC, Prof-iler helps streamline research management by organizing, tracking, and maintaining student records over time. These tasks can be done faster than traditional GUI apps.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gekjunxu"},"content":"1. Ensure you have [Java `17`](#java-17) or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gekjunxu"},"content":"2. Download the latest [`.jar`](#jar-file) file from [here](https://github.com/AY2425S2-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gekjunxu"},"content":"3. Copy the file to the folder you want to use as the [_home folder_](#home-folder) for your Prof-iler application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gekjunxu"},"content":"4. Open a command terminal, `cd` into the folder you put the [jar file](#jar-file) in, and use the `java -jar Prof-iler.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gekjunxu"},"content":"   A [GUI](#gui) similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gekjunxu"},"content":"   * `list` : Lists all students.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gekjunxu"},"content":"   * `add n/John Doe p/98765432 id/A0253517M e/johnd@example.com pr/Prof-iler pb/72 t/Y3` : Adds a student named `John Doe` to Prof-iler","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gekjunxu"},"content":"   * `delete 3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gekjunxu"},"content":"   * `clear` : Deletes all students.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/Y4` or as `n/John Doe`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShiJianXi"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/Y4`, `t/CS t/Y4` etc.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShiJianXi"},"content":"  e.g. `pr/KEYWORD...` can be used as `pr/Prof-iler` ` ` (i.e. 0 times), `pr/Project Prof-iler` (i.e. 1 time), `pr/Project Orbital Apollo` (i.e. 2 times).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"swatirajesh277"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"swatirajesh277"},"content":"### Changing Theme","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"swatirajesh277"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"swatirajesh277"},"content":"Clicking \u0027Theme\u0027 shows a drop-down box with options Dark and Light.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gekjunxu"},"content":"A [GUI](#gui) similar to the below should appear on clicking Light.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"swatirajesh277"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"swatirajesh277"},"content":"![light_ui](images/lightUI.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"swatirajesh277"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"swatirajesh277"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a link to the user guide and a list of all commands available in Prof-iler.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`, can also be accessed via `F1` function key","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Adding a student: `add`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"Adds a student to Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"Format: `add n/NAME id/STUDENT_ID p/PHONE e/EMAIL pr/PROJECT [pb/PROGRESS] [t/TAG]…​`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"* All included fields must not be blank.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"* `NAME` should only contain alphanumeric characters and spaces.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weiwong834"},"content":"* `STUDENT_ID` is unique, should start with `A` or `a`, followed by 7 digits, and end with a letter.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiwong834"},"content":"* `PHONE` should only contain numbers, and it should be 3 - 15 digits long.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `EMAIL` should be of the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"  * The local-part should only contain alphanumeric characters and the special characters `+_.-`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"  * The local-part may not start or end with any special characters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiwong834"},"content":"  * The local-part may not contain consecutive special characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"  * This is followed by `@` and then a domain name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"  * The domain name is made up of domain labels separated by periods, and must:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    * end with a domain label at least 2 characters long,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    * have each domain label start and end with alphanumeric characters,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weiwong834"},"content":"    * have each domain label consist of alphanumeric characters, separated only by hyphens (non-consecutive), if any.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weiwong834"},"content":"  * A top-level domain (e.g. `.com`) is optional.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"* `PROJECT` can be any value.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"* `PROGRESS` should be a whole number between 0 and 100.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weiwong834"},"content":"* Each `TAG` should be alphanumeric, contain no spaces and is case-sensitive (e.g. `cs` and `Cs` are counted as two different tags).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"A student can have any number of tags (including 0). \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weiwong834"},"content":"A student can have unmentioned progress (default \u003d 0). \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weiwong834"},"content":"Duplicate students are detected by the same `STUDENT_ID`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* `add n/John Doe id/A0253517M p/98765432 e/johnd@example.com pr/Project Prof-iler`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/Y4 id/A0055729D e/betsycrowe@example.com p/1234567 pr/Orbital`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Listing all students : `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"Shows a list of all students in Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Editing a student : `edit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"Edits an existing student in Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [id/STUDENT_ID] [p/PHONE] [e/EMAIL] [pr/PROJECT] [pb/PROGRESS] [t/TAG]…​`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* You can remove all the student’s tags by typing `t/` without","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st student to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Editing the progress : `progress`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"Edits the progress of an existing student in Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `progress INDEX pb/PROGRESS`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Edits the student at the specified `INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Existing progress will be updated to the input progress.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"*  `progress 1 pb/45` Edits the progress of the 1st student to be `45`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Entering log for a student: `log`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"Adds log for the student whose index is specified.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `log INDEX l/LOG`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weiwong834"},"content":"* Adds a log to the student at the specified `INDEX`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weiwong834"},"content":"* Student can only have one log at a time.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weiwong834"},"content":"* To remove a log, use `log INDEX l/`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"* `log 1 l/CS2103T tutor` Edits the log of the 1st student to be `CS2103T tutor`.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Locating students by name: `find`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Filter for specific projects: `filter`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Filters for projects that contain all the given keywords or tags that contain any of the given keywords.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"weiwong834"},"content":"Format: `filter pr/KEYWORD...` or `filter t/KEYWORD...`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"weiwong834"},"content":"* The search is case-insensitive. e.g. `PROF-ILER` will match `prof-iler`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"weiwong834"},"content":"* The order of the given keywords does not matter. e.g. `Project Orbital` will match `Orbital Project`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"weiwong834"},"content":"* At least one fields must be provided, but not both. e.g. `filter pr/Prof-iler t/Y4` will not work.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"weiwong834"},"content":"* Whitespaces in between each keywords separates the keywords. e.g. `Project Orbital` searches for both keywords `Project` and `Orbital`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"weiwong834"},"content":"* Only the full keyword will be matched. e.g. `Prof-iler` will not match `Prof-ilers`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"weiwong834"},"content":"* Filtering for project requires the project to contain all the given keywords. e.g.`filter pr/Project Orbital` will not match students with project `Orbital` while `filter pr/Orbital` will match student with `Project Orbital`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"weiwong834"},"content":"* Filtering for tag requires the student to contain any of the given tags. e.g. `Y4` and `CS` will match any student that contain either `Y4` or `CS` or both tags.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"* All the filtered students will be shown in the displayed student list to the screen.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"weiwong834"},"content":"* `filter pr/prof-iler` returns `Charlotte Oliveiro` and `David Li` which are the two students under the project `Prof-iler`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    ![result for `filter pr/prof-iler`](images/filterProjectExample.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"weiwong834"},"content":"* `filter t/Y4 CS` returns `David Li` and `Irfan Ibrahim` which are the students that contain at least one of the given keywords for the tag.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    ![result for `filter t/CS2103T t/Tutor](images/filterTagExample.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Sorting based on progress: `sort`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"Sorts the student based on the progress, in either ascending or descending order.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"weiwong834"},"content":"Format: `sort asc` or `sort desc`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"* The order `asc` or `desc` is case-insensitive.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"* `asc` will sort the students based on ascending order of progress and `desc` will sort the students based on descending order of progress.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"* All the sorted students will be shown in the displayed student list to the screen.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ShiJianXi"},"content":"Use `list` command to return to the original list after commands such as `sort`, `filter` and `find`. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The `sort` command works in conjunction with the `filter` command. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"weiwong834"},"content":"For example, the user can first apply a `filter` command (e.g. `filter pr/Prof-iler`) to view the students in the project that contains the word Prof-iler. After filtering, user can execute `sort desc` to arrange students in those project based on their progress in descending order. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"This can also be done the other way round by applying the `sort` command first followed by `filter` command.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"weiwong834"},"content":"**Example usage of `filter pr/Prof-iler` followed by `sort desc`:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    ![SortWithFilterCommand](images/sortFilterCommandExample.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Deleting students : `delete`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"Deletes the specified student from Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: `delete INDEX [,INDEXES] ...`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"* Deletes the student(s) at the specified `INDEX` or `INDEXES`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"* The indexes refer to the index numbers shown in the displayed student list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"* The indexes **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"* Indexes can be specified in a list separated by commas `,`, allowing for multiple deletions in a single command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd student in Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"* delete 1, 3, 4 deletes the 1st, 3rd, and 4th students from the displayed list in Prof-iler.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Clears all entries from Prof-iler, or clears a given project.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"weiwong834"},"content":"Format: `clear [PROJECT]`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"weiwong834"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* If no project is given, all the entries are cleared.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* The project field is case-insensitive.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* All the students under the project will be cleared.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"A pop-up message to confirm your action will appear. It defaults to `No` to prevent accidental deletion.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"![clear message](images/clearMessage.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"weiwong834"},"content":"Simply use keyboard tab or arrow keys to toggle between the options. Press `enter` on your keyboard to confirm the selection. Alternatively, you can also click on the buttons using your cursor.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* `clear` clears all entries.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"weiwong834"},"content":"* `clear prof-iler` clears `Charlotte Oliveiro` and `David Li` which are the two students under the project `Prof-iler`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"Prof-iler data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"gekjunxu"},"content":"Prof-iler data are saved automatically as a JSON file [`[JAR file location]/data/prof-iler.json`](#prof-iler-json). Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, Prof-iler will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"weiwong834"},"content":"Furthermore, certain edits can cause the Prof-iler application to behave in unexpected ways (e.g. if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Prof-iler home folder.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"gekjunxu"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the [GUI](#gui) will open off-screen. The remedy is to delete the [`preferences.json`](#preferences-json) file created by the application before running the application again.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"| Action       | Format, Examples                                                                                                                                                                                |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"weiwong834"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"weiwong834"},"content":"| **Add**      | `add n/NAME id/STUDENT_ID p/PHONE_NUMBER e/EMAIL pr/PROJECT [pb/PROGRESS] [t/TAG]…​` \u003cbr\u003e e.g. `add n/James Ho id/A0223615H p/82793554 e/jamesho@example.com pr/Project_Orbit t/Y3 pb/29 t/BZA` |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"weiwong834"},"content":"| **Clear**    | `clear [PROJECT]`\u003cbr\u003e e.g. `clear` \u003cbr\u003e e.g. `clear prof-iler`                                                                                                                                  |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"weiwong834"},"content":"| **Delete**   | `delete INDEX [,INDEXES] ...`\u003cbr\u003e e.g. `delete 1, 3`                                                                                                                                            |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"weiwong834"},"content":"| **Edit**     | `edit INDEX [n/NAME] [id/STUDENT_ID] [p/PHONE] [e/EMAIL] [pr/PROJECT] [pb/PROGRESS] [t/TAG]…​`\u003cbr\u003e e.g.`edit 2 n/James Lee id/A0112946T e/jameslee@example.com`                                 |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"weiwong834"},"content":"| **Filter**   | `filter pr/KEYWORD...` or `filter t/KEYWORD...`\u003cbr\u003e e.g. `filter pr/prof-iler` \u003cbr\u003e e.g. `filter t/CS2103T CS2109S`                                                                             |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"weiwong834"},"content":"| **Sort**     | `sort asc` or `sort desc`                                                                                                                                                                       |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"weiwong834"},"content":"| **Find**     | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`                                                                                                                                       |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"weiwong834"},"content":"| **Progress** | `progress INDEX pb/PROGRESS`\u003cbr\u003e e.g. `progress 1 pb/45`                                                                                                                                        |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| **List**     | `list`                                                                                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"weiwong834"},"content":"| **Log**      | `log INDEX l/LOG` \u003cbr\u003e e.g. `log 1 l/CS2103T tutor for Class 2A`                                                                                                                                |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| **Help**     | `help`                                                                                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ShiJianXi"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gekjunxu"},"content":"## Glossary","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gekjunxu"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gekjunxu"},"content":"This glossary defines key terms and abbreviations used in the Prof-iler User Guide.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gekjunxu"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gekjunxu"},"content":"| Term                             | Definition |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"gekjunxu"},"content":"|----------------------------------|------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"cli\"\u003e\u003c/a\u003e**CLI (Command Line Interface)** | A text-based interface where users type commands to interact with the program. Prof-iler is optimized for use via a CLI. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"gui\"\u003e\u003c/a\u003e**GUI (Graphical User Interface)** | A visual interface that uses elements like windows, buttons, and icons to help users interact with the application. Prof-iler includes a GUI in addition to the CLI. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"jar-file\"\u003e\u003c/a\u003e**JAR file**                     | *Java Archive*. A package file format that bundles Java class files and related resources into one file for distribution and execution. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"java-17\"\u003e\u003c/a\u003e**Java 17**                      | The version of the Java Development Kit (JDK) required to run Prof-iler. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"home-folder\"\u003e\u003c/a\u003e**Home folder**                  | The folder where the Prof-iler `.jar` file is located. Data files like `prof-iler.json` are stored here. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"preferences-json\"\u003e\u003c/a\u003e**preferences.json**             | A settings file storing user interface preferences such as window size and position. Can be deleted to reset the UI. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"gekjunxu"},"content":"| \u003ca name\u003d\"prof-iler-json\"\u003e\u003c/a\u003e**prof-iler.json**               | The main data file where Prof-iler stores all student information. Located inside the `data` folder. |","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"weiwong834":39,"gekjunxu":26,"swatirajesh277":8,"ShiJianXi":4,"-":253}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Prof-iler","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2425S2-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S2-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2425S2-CS2103T-W12-3/tp/graph/badge.svg?token\u003d1OWKL0FSVX)](https://codecov.io/gh/AY2425S2-CS2103T-W12-3/tp)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"**Prof-iler is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dragonesejosh"},"content":"* If you are interested in using Prof-iler, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gekjunxu"},"content":"* If you are interested in developing Prof-iler, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"dragonesejosh":1,"gekjunxu":1,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROGRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to profiler.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to Prof-iler. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PROJECT + \"PROJECT \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PROGRESS + \"PROGRESS] \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ID + \"A0210301K \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PROJECT + \"Prof-iler \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PROGRESS + \"38 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiwong834"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Student with same ID already exists in Prof-iler\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"weiwong834":1,"-":89}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROGRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Progress;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Project;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in prof-iler.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PROJECT + \"PROJECT] \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PROGRESS + \"PROGRESS] \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiwong834"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Student with same ID already exists in Prof-iler\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedPersonList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Id updatedId \u003d editPersonDescriptor.getId().orElse(personToEdit.getId());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Project updatedProject \u003d editPersonDescriptor.getProject().orElse(personToEdit.getProject());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Progress updatedProgress \u003d editPersonDescriptor.getProgress().orElse(personToEdit.getProgress());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Log updatedLog \u003d personToEdit.getLog();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedId, updatedPhone, updatedEmail, updatedProject,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                        updatedProgress, updatedLog, updatedTags);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Id id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Project project;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Progress progress;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setId(toCopy.id);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setProject(toCopy.project);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setProgress(toCopy.progress);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, id, phone, email, project, progress, tags);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setId(Id id) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.id \u003d id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setProject(Project project) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.project \u003d project;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cProject\u003e getProject() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(project);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setProgress(Progress progress) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.progress \u003d progress;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cProgress\u003e getProgress() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(progress);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(id, otherEditPersonDescriptor.id)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(project, otherEditPersonDescriptor.project)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(progress, otherEditPersonDescriptor.progress)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    .add(\"id\", id)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    .add(\"project\", project)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .add(\"progress\", progress)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"weiwong834":1,"-":276}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final List\u003cString\u003e HELP_COMMANDS \u003d Arrays.asList(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \"add: Add a new student in Prof-iler.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                    + \"Usage: add n/NAME p/PHONE id/STUDENT_ID e/EMAIL pr/PROJECT [pb/PROGRESS] [t/TAG]...\\n\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"                    + \"Example: add n/John Doe p/98765432 id/A0293712D e/john@example.com pr/Orbital pb/38 t/Y3 t/CS\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"delete: Remove student(s) by index.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    + \"Usage: delete INDEX [,INDEXES] ... (separated by commas)\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    + \"Example: delete 1, 3\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"edit: Modify student details by index.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    + \"Usage: edit INDEX [n/NAME] [id/ID] [p/PHONE] [e/EMAIL] [pr/PROJECT] [t/TAG]...\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    + \"Example: edit 1 p/91234567 e/john@example.com\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"progress: Update a student\u0027s project progress by index.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    + \"Usage: progress INDEX pb/PROGRESS\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    + \"Example: progress 1 pb/87\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"log: Adds log for student by index.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    + \"Format: log INDEX l/LOG\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    + \"Example: log 1 l/CS2103T tutor\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"find: Search students by name (case-insensitive).\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    + \"Usage: find KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    + \"Example: find John Doe\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"filter: Display students by specific project or tag.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiwong834"},"content":"                    + \"Usage: filter pr/PROJECT... or filter t/TAG...\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    + \"Example: filter pr/Orbital\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    + \"Example: filter t/Y3\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \"sort: Organize students by progress in ascending or descending order.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiwong834"},"content":"                    + \"Usage: sort asc or sort desc\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    + \"Example: sort desc\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \"list: Show all students.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    + \"Usage: list\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"clear: Remove all students from list or from a specified project.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiwong834"},"content":"                    + \"Usage: clear [PROJECT]\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    + \"Example: clear\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    + \"Example: clear Orbital\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"weiwong834":3,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Sorts and list all students in Prof-iler based on the order given.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Order given is either asc or desc and it is case-insensitive.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShiJianXi"},"content":"            + \": Sorts the student\u0027s progress based on the given order\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: ORDER (asc/desc)\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean isAscending;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public SortCommand(boolean isAscending) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e comparator \u003d Comparator.comparingInt(","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                person -\u003e Integer.parseInt(person.getProgress().getValue())","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!isAscending) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            comparator \u003d comparator.reversed();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(\"Sorted in %s order.\", isAscending ? \"ascending\" : \"descending\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return isAscending \u003d\u003d otherSortCommand.isAscending;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"isAscending\", isAscending)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"ShiJianXi":1,"-":64}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in prof-iler.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiwong834"},"content":"            + \"characters and special characters should not be consecutive.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiwong834"},"content":"            + \"    - end with a domain label at least 2 characters long.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiwong834"},"content":"            + \"    - have each domain label start and end with alphanumeric characters.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiwong834"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiwong834"},"content":"            + \"by hyphens (non-consecutive), if any.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiwong834"},"content":"            + \"    - A top-level domain (e.g. `.com`) is optional.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiwong834"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"weiwong834":7,"-":75}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in prof-iler.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiwong834"},"content":"            \"Phone numbers should only contain numbers, and it should be 3-15 digits long\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiwong834"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"weiwong834":2,"-":59}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in prof-iler.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiwong834"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Each tag should be alphanumeric and contain no spaces\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"weiwong834":1,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Profiler;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyProfiler;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Progress;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Project;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code Profiler} with sample data.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final Log EMPTY_LOG \u003d new Log(\"\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"swatirajesh277"},"content":"    public static final Log ALEX_LOG \u003d new Log(\"Got to arrange a meeting with Alex to discuss the bugs\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"swatirajesh277"},"content":"    public static final Log BERNICE_LOG \u003d new Log(\"CS2103T TA\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Id(\"A0289384P\"), new Phone(\"87438807\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"swatirajesh277"},"content":"                new Project(\"Project Orbiting\"), new Progress(\"30\"), ALEX_LOG,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"Y3\", \"InfoSys\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Id(\"A0214850K\"), new Phone(\"99272758\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"swatirajesh277"},"content":"                new Email(\"berniceyu@example.com\"), new Project(\"Project ReX\"), new Progress(\"21\"), BERNICE_LOG,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"Y3\", \"CS2101\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Id(\"A0250255M\"), new Phone(\"93210283\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiwong834"},"content":"                new Email(\"charlotte@example.com\"), new Project(\"Prof-iler\"), new Progress(), EMPTY_LOG,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"BZA\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Id(\"A0280123C\"), new Phone(\"91031282\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Email(\"lidavid@example.com\"), new Project(\"Prof-iler\"), new Progress(\"11\"), EMPTY_LOG,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"Y4\", \"CS\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Id(\"A0267893F\"), new Phone(\"92492021\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Email(\"irfan@example.com\"), new Project(\"WealthVault\"), new Progress(\"48\"), EMPTY_LOG,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"Y4\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Id(\"A0280012B\"), new Phone(\"92624417\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Email(\"royb@example.com\"), new Project(\"TAssist\"), new Progress(\"17\"), EMPTY_LOG,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiwong834"},"content":"                getTagSet(\"InfoSec\"))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyProfiler getSampleProfiler() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Profiler samplePrf \u003d new Profiler();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            samplePrf.addPerson(samplePerson);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return samplePrf;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"weiwong834":7,"swatirajesh277":4,"-":56}},{"path":"src/main/java/seedu/address/ui/ConfirmationWindowFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":" * Factory for creating ConfirmationWindow instances. With inspiration from Copilot.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ConfirmationWindowFactory {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static ConfirmationWindowProvider provider \u003d new DefaultConfirmationWindowProvider();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Sets a custom provider for testing","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void setProvider(ConfirmationWindowProvider testProvider) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assert testProvider !\u003d null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        provider \u003d testProvider;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Gets a confirmation window instance","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static ConfirmationWindow getConfirmationWindow() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assert provider !\u003d null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return provider.getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Resets to the default provider","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void resetProvider() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        provider \u003d new DefaultConfirmationWindowProvider();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Interface for confirmation window providers","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public interface ConfirmationWindowProvider {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ConfirmationWindow getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Default provider that returns the real confirmation window","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static class DefaultConfirmationWindowProvider implements ConfirmationWindowProvider {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public ConfirmationWindow getConfirmationWindow() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return ClearConfirmationWindow.getInstance();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"gekjunxu":1,"-":47}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.CheckBox?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"swatirajesh277"},"content":"         title\u003d\"Prof-iler\" minWidth\u003d\"850\" minHeight\u003d\"550\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/prof-iler_icon.png\" /\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"lightTheme\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleLightTheme\" text\u003d\"Light\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"darkTheme\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleDarkTheme\" text\u003d\"Dark\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false}],"authorContributionMap":{"swatirajesh277":1,"-":66}},{"path":"src/test/java/seedu/address/ui/ClearConfirmationWindowStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gekjunxu"},"content":" * Stub class for testing ClearCommand class, as a Confirmation Window is implemented. With inspiration from Copilot.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ClearConfirmationWindowStub implements ConfirmationWindow {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static ClearConfirmationWindowStub instance; // Singleton instance","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private boolean confirmationResult;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private boolean isShowing; // Default behavior: window is not open","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private boolean wasFocusCalled;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private ClearConfirmationWindowStub() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Sets simulated user result.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param result true if confirmed, false if cancelled.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setConfirmationResult(boolean result) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.confirmationResult \u003d result;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the single instance of ClearConfirmationWindowStub.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static ClearConfirmationWindowStub getInstance() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            instance \u003d new ClearConfirmationWindowStub();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            instance.resetValues();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return instance;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return isShowing;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the result that showAndWait() should return","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean showAndWait() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return confirmationResult;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setShowing(boolean isShowing) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.isShowing \u003d isShowing;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        wasFocusCalled \u003d true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean wasFocusCalled() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this.wasFocusCalled;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setWasFocusCalled(boolean wasFocusCalled) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.wasFocusCalled \u003d wasFocusCalled;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Resets values to original to simulate fresh instantiation","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void resetValues() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        confirmationResult \u003d false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        isShowing \u003d false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"gekjunxu":1,"-":79}},{"path":"src/test/java/seedu/address/ui/ConfirmationWindowFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.ui.ConfirmationWindowFactory.ConfirmationWindowProvider;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gekjunxu"},"content":" * Unit tests for ConfirmationWindowFactory, with reference from Copilot","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ConfirmationWindowFactoryTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private MockConfirmationWindowProvider mockProvider;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private StubConfirmationWindow stubWindow;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // Save the factory\u0027s initial state","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ConfirmationWindowFactory.resetProvider();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // Create test doubles","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        stubWindow \u003d new StubConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        mockProvider \u003d new MockConfirmationWindowProvider(stubWindow);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @AfterEach","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void tearDown() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Reset factory to default state after each test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ConfirmationWindowFactory.resetProvider();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void getConfirmationWindow_withCustomProvider_returnsCustomWindow() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Set our custom provider","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ConfirmationWindowFactory.setProvider(mockProvider);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Get a window from the factory","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ConfirmationWindow window \u003d ConfirmationWindowFactory.getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Should be our stub window","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertSame(stubWindow, window);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(1, mockProvider.getCallCount(), \"Provider should be called exactly once\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void getConfirmationWindow_calledMultipleTimes_delegatesToProvider() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Set our custom provider","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ConfirmationWindowFactory.setProvider(mockProvider);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Call getConfirmationWindow multiple times","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ConfirmationWindow window1 \u003d ConfirmationWindowFactory.getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ConfirmationWindow window2 \u003d ConfirmationWindowFactory.getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ConfirmationWindow window3 \u003d ConfirmationWindowFactory.getConfirmationWindow();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Verify the provider was called each time","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(3, mockProvider.getCallCount());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // And returned our stub each time","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertSame(stubWindow, window1);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertSame(stubWindow, window2);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertSame(stubWindow, window3);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * A stub implementation of ConfirmationWindow for testing","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class StubConfirmationWindow implements ConfirmationWindow {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private boolean showing \u003d false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        private String message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        public boolean showAndWait() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            showing \u003d true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public boolean isShowing() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return showing;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void focus() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            // Do nothing for the stub","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setMessage(String message) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.message \u003d message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A mock ConfirmationWindowProvider that counts how many times it\u0027s called","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static class MockConfirmationWindowProvider implements ConfirmationWindowProvider {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        private final ConfirmationWindow windowToReturn;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        private int callCount \u003d 0;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public MockConfirmationWindowProvider(ConfirmationWindow windowToReturn) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            this.windowToReturn \u003d windowToReturn;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ConfirmationWindow getConfirmationWindow() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            callCount++;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return windowToReturn;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public int getCallCount() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return callCount;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"gekjunxu":1,"-":119}}]
