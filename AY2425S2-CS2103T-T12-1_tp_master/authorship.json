[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"- Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"- stores the address book data i.e., all `Person`, `Group` and `GroupMemberDetails` objects (which are contained in a `UniquePersonList` and `UniqueGroupList` object).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"- stores the currently \u0027selected\u0027 `Person` or `Group` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"- `Group` class contains an `ArrayListMap` object which acts similarly to a Map","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"- The `Person` objects are stored in the `Group` object as \u0027keys\u0027 of the `ArrayListMap` within `Group` object","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"- The values of the `ArrayListMap` would be the corresponding `GroupMemberDetail` object","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src \u003d \"images/PersonInGroupDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Storage` component is responsible for persisting address book data and user preferences to the hard disk. It handles the conversion between in-memory objects and their file representations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"#### Structure","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"The Storage component is organized into two main areas:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. **AddressBook Storage**: Manages the reading and writing of address book data","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"   - `AddressBookStorage` interface defines the operations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"   - `JsonAddressBookStorage` provides JSON-based implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"   - Uses `JsonSerializableAddressBook` as an intermediate representation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"   - Contains a hierarchy of JSON adapter classes that mirror the model structure:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     - `JsonAdaptedGroup` represents groups in the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     - `JsonAdaptedGroupMemberDetails` contains details about group membership","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     - `JsonAdaptedPerson` and `JsonAdaptedAssignment` linked to group member details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     - `JsonAdaptedTag` represents tags associated with persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"2. **UserPrefs Storage**: Manages the reading and writing of user preferences","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"   - `UserPrefsStorage` interface defines the operations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"   - `JsonUserPrefsStorage` provides JSON-based implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"The `Storage` interface extends both `AddressBookStorage` and `UserPrefsStorage`, providing a unified API. `StorageManager` implements this interface and coordinates between both storage types.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"#### Key Operations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Reading Data**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"- Retrieves data via file paths specified in the storage implementations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"- Converts JSON data to model objects through the adapter class hierarchy","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"- Returns `Optional` objects to handle cases where files don\u0027t exist","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"- Throws `DataLoadingException` when data cannot be loaded properly","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"**Writing Data**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"- Accepts model objects and converts them to JSON format using adapter classes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"- Writes to specified file paths","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"- Throws `IOException` when writing fails","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"- Logs operations for debugging purposes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"- **Interface Segregation**: Separate interfaces allow for independent implementation and testing of different storage aspects","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"- **Adapter Pattern**: JSON adapter classes separate model concerns from persistence details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"- **Complex Composition**: The JSON classes mirror the complex relationships in the model, including groups, group memberships, persons, assignments, and tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"- **Dependency Injection**: `StorageManager` takes concrete storage implementations as constructor parameters, facilitating testing and flexibility","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"This design provides clean separation of concerns, allowing the model to remain focused on business logic while the storage component handles persistence details. The hierarchy of JSON adapter classes supports the address book\u0027s ability to manage not just persons and tags, but also groups, group memberships, and assignments.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Adding a person to a group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"The sequence diagram below illustrate the process of adding a Person to a Group by writing the command `add-to-group P/ p g/ g`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. First the command will go through the standard logic sequence. Creating a Unique Command parser to parse input data to create","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"   a `AddPersonToGroupCommand` object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"2. The `LogicManger` then execute the command by calling `execute(m)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"3. `AddPersonToGroupCommand` will get the `Person` object to be added and the `Group` object to be added to from `Model`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"4. Lastly, the `addPersonToGroup` method will be called to add the `Person` object into the `Group` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"5. A `CommandResult` is returned for `Ui` purpose","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![AddPersonToGroupSequenceDiagram-Logic](images/AddPersonToGroupSequenceDiagram-Logic.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The `Group` object will create a new `GroupMemberDetail` object tied to the newly added `Person` object and stored into the Map as a key-value pair. 6. After `addPersonToGroup` is called, the `Model` will call on the `VersionedAddressBook` to which adds `p:Person` to `g:Group` 7. `Group` will create a new `GroupMemberDetails` object that corresponds to `p:Person` object 8. Both the `p:Person` and the newly created `GroupMemberDetails` objects will be stored in an `ArrayListMap` within the `Group` object","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"![AddPersonToGroupSeqeunceDiagram-Model](images/AddPersonToGroupSequenceDiagram-Model.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"- is a Teaching Assistant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"- has a need to manage a significant number of students/contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"- can type fast","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Value proposition**: makes administrative work more convenient for a Teaching Assistant","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                                  | So that I can…​                                                          |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"| -------- | ------------------ | ------------------------------------------------------------- | ------------------------------------------------------------------------ |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"| `* * *`  | Teaching Assistant | Add a new contact with details such as name, contact and role | Quickly access their information when required                           |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"| `* * *`  | Teaching Assistant | Create and manage groups                                      | Organize my contact based on my different responsibilities               |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"| `* * *`  | Teaching Assistant | See the list of contact in my class list                      | Easily access the information when required                              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"| `* * *`  | Teaching Assistant | Delete a contact                                              | Remove students who have dropped / transferred my class                  |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"| `* * *`  | Teaching Assistant | Update a contact\u0027s detail                                     | Update my information of my contact to the latest up-to-date information |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* *`    | Teaching Assistant | Search for a contact by an identifier like name or role       | I can quickly find a contact I need                                      |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `* *`    | Teaching Assistant | Fileter contacts by role such as student/ TA or Professor     | Organize my address book more efficiently                                |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"| `* *`    | Teaching Assistant | Mark certain contact with \u0027priority\u0027                          | Quickly access te most important contacts                                |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"| `* *`    | Teaching Assistant | Add notes to a contact                                        | Easily remember important details about the contact                      |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"| `* *`    | Teaching Assistant | Mark the attendance count of students                         | Keep track of attendence for grading                                     |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Import contact list from a CSV file                           | Avoid manually inputting each contact                                    |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Log interaction with students                                 | Track who I have assisted and follow up if needed                        |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | See an image of my student                                    | Remember their faces and names easier                                    |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Export my contact to a CSV file                               | Back up or share my contact list                                         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Track my student\u0027s homework submission status                 | Mark their work for grading                                              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Set reminders for specific contacts                           | Don\u0027t forget to follow up on important tasks                             |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Track whether I marked my student\u0027s homework                  | Ensrure I do not miss out any work during marking                        |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Track my students\u0027 grades                                     | Assess my own teacing ability                                            |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | See the dates of upcoming tutorials and exams                 | Make the necessary preparations before hand                              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | See deadline for submission and other important dates         | Remind my students to prepare for them                                   |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Track the progress for preparations of my teaching material   | Ensure it is completed before tutorials                                  |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"| `*`      | Teaching Assistant | Plot a whisker plot of the current grade of my students       | Track their learning progress and identify stuggling students            |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Use case: UC01 - Delete a person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"2. AddressBook displays persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"3. User requests to delete a specific person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"4. AddressBook deletes the person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"  - 3a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Use case: UC02 - Adding a person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"1. User provides contact details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"2. AddressBook adds the contact","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"- 1a. The provided details are invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"  - 1a2. User provides valid details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Use case: UC03 - Editing a Contact","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"2. AddressBook displays persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"3. User requests to edit a specific person with new details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"4. AddressBook updates the contact information","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"5. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"  - 3a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"- 3b. The provided details are invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"  - 3b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"  - 3b2. User provides valid details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Use case: UC04 - Find a contact by name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"- The address book contains at least one person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. User requests to find persons by keyword(s)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"2. AddressBook displays persons whose names contain the keyword(s)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"- 2a. No person matches the keyword(s).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"  - 2a1. AddressBook indicates no matches found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"- 1a. User provides invalid search parameters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Use case: UC05 - List all contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. User requests to list all persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"2. AddressBook displays all persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"- 2a. The address book is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"  - 2a1. AddressBook indicates no contacts exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Use case: UC06 - Mark attendance for a student","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"- The student exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"- The group exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"- The student is a member of the specified group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. User requests to mark attendance with student name, group name, and week number","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"2. AddressBook updates the attendance record","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"- 1a. Week number is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"- 1b. Group does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"  - 1b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"- 1c. Student does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"  - 1c1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"- 1d. Student is not a member of the specified group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"  - 1d1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Use case: UC07 - Unmark attendance for a student","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"- The student exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"- The group exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"- The student is a member of the specified group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. User requests to unmark attendance with student name, group name, and week number","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"2. AddressBook updates the attendance record","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"- 1a. Week number is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"- 1b. Group does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"  - 1b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"- 1c. Student does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"  - 1c1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"- 1d. Student is not a member of the specified group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"  - 1d1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"### Use case: UC08 - Show a student\u0027s attendance in a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"- The student exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"- The group exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"- The student is a member of the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"1. User requests attendance records for a specific student in a specific group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"2. AddressBook displays the attendance records","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"- 1a. Group does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"- 1b. Student does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"  - 1b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"- 1c. Student is not a member of the specified group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"  - 1c1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Use case: UC09 - Add a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"- The group name is unique","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"1. User requests to create a new group with a specified name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"2. AddressBook creates the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"- 1a. A group with the same name already exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"### Use case: UC10 - Delete a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. User requests to list groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"2. AddressBook displays groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"3. User requests to delete a specific group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"4. AddressBook deletes the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"5. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"  - 3a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Use case: UC11 - Edit a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. User requests to list groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"2. AddressBook displays groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"3. User requests to edit a specific group with a new name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"4. AddressBook updates the group name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"5. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"  - 3a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"- 3b. The new group name already exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"  - 3b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"### Use case: UC12 - Show group details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"1. User requests to list groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"2. AddressBook displays groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"3. User requests details of a specific group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"4. AddressBook displays the group\u0027s name and member list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"  - 3a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"### Use case: UC13 - Find a group by name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"- At least one group exists in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. User requests to find groups by keyword(s)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"2. AddressBook displays groups whose names contain the keyword(s)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"- 2a. No group matches the keyword(s).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"  - 2a1. AddressBook indicates no matches found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"- 1a. User provides invalid search parameters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"### Use case: UC14 - List all groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"1. User requests to list all groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"2. AddressBook displays all groups","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"- 2a. No groups exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"  - 2a1. AddressBook indicates no groups exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"### Use case: UC15 - Add a person to a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"- The person exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"- The group exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"- The person is not already a member of the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"1. User requests to add a person to a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"2. AddressBook adds the person to the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"- 1a. Person does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"- 1b. Group does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"  - 1b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"- 1c. Person is already in the group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"  - 1c1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"### Use case: UC16 - Remove a person from a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"**Preconditions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"- The person exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"- The group exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"- The person is a member of the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"1. User requests to remove a person from a group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"2. AddressBook removes the person from the group","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"3. AddressBook indicates success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"**Extensions:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"- 1a. Person does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"  - 1a1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"- 1b. Group does not exist.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"  - 1b1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"- 1c. Person is not a member of the group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"  - 1c1. AddressBook indicates error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"### Use case: UC17 - View help information","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"{:.no_toc}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"**MSS:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"1. User requests help information","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"2. AddressBook displays help information","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"4.  Should not require an internet connection for all functionalities.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"5.  Should work well in multitasking scenarios, allowing TAs to switch between the app and other teaching tools (e.g., PDF readers, Excel) without performance degradation.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"6.  Should be lightweight, running smoothly on the same laptops TAs use for general university tasks, without any additional hardware.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"7.  Data should be backed up into a user-editable file format, making it easy to share across devices or with other TAs.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"8.  Should be easily upgradable, allowing new versions or features to be added without disrupting existing user data or workflows.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"_{More to be added}_","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"- **Contact**: An entry with details of a person of interest, i.e., a student, a teacher, or a teaching assistant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"- **Teaching assistant (TA)**: A person who assists in teaching a class; they are typically also a full-time student","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"- **Head TA**: The teaching assistant(s) in charge of all other teaching assistants for a particular course","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"- **Tutorial**: Lessons that students attend which complement the content taught in lectures; typically taught by TAs","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"- **Assignment/homework**: A set of deliverables that students have to submit regularly; typically comes with a grade","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"- **Exam**: A formal test of a student\u0027s understanding of the content in a course; typically comes with a grade","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"      - Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"      - Person that was deleted from the list should also be removed from all group it was previously part of. Can be verified using `list-group` to see all the groups.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"### Manging Persons in Group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"1. Adding a Person to a Group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"   1. Prerequisites: `p:Person` is not a member of `g:Group`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"   2. Test case: `add-to-group P/ p g/ g` \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"      Expected: Person should show up inside `g:Group` when using either `list-group` or `find-group` commands","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"2. Adding a Person who already exist in the Group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"   1. Prerequisite: `p:Person` is already a member of `g:Group`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"   2. Test case: `add-to-group P/ p g/ g` \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"      Expected: Error message indicating `p:Person` is already in `g:Group`. No duplicate entry should be created.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"3. Deleting a Person from a Group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"   1. Prerequisites: `p:Person` is already a member of `g:Group`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"   2. Test case: `delete-from-group P/ p g/ g` \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"      Expected: Person should no longer show up inside `g:Group` when using either `list-group` or `find-group` commands","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"4. Deleting a Person who is not a member of Group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"   1. Prerequisite: `p:Person` is not a member of `g:Group`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"   2. Test case: `delete-from-group P/ p g/ g` \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"      Expected: Error message indicating `p:Person` does not exist in `g:Group`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"The project required a considerable effort beyond the baseline AddressBook-Level3 (AB3), especially due to the introduction of a new domain entity: `Group`. While AB3 only deals with a flat structure of a single entity (`Person`), our project introduces a relational structure between `Group` and `Person`, along with additional responsibilities such as attendance tracking, role assignment, and performance logging through assignments.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"### Key Challenges and Effort","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"- **Designing a New Entity Model**: Introducing `Group` was not a simple data addition — it required a full-fledged model (`Group.java`) capable of:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"  - Maintaining its own identity and validation rules.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"  - Tracking a collection of `Person` instances with unique roles and contextual data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"  - Persisting group-member-specific data such as attendance and assignment grades.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"- **Extending Existing Entities**: To maintain separation of concerns, we introduced a new class `GroupMemberDetail.java` which bridges a `Person` and a `Group` and stores contextual information like:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"  - Weekly attendance (`boolean[13]` per student).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"  - Assignment grades (via a custom `ArrayListMap`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"  - Roles (e.g., Student, Teaching Assistant, Lecturer).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"- **Cross-Entity Logic**: Unlike AB3\u0027s flat command structure, many features required verifying the existence and relationship of both `Person` and `Group` during execution (e.g., `mark-attendance`, `add-to-group`, `show-attendance`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"-"},"content":"- **Storage Complexity**: Extending the storage layer to support nested structures like `Group -\u003e GroupMemberDetail -\u003e Person` required:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"  - Custom serialization and deserialization logic.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"  - Managing consistency between group membership and person identity.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"  - Updating the JSON format in a backward-compatible and testable way.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"- **UI Considerations**: We also needed to design new UI components like `GroupCard` and `GroupDetailCard` to present hierarchical data clearly, which required significant effort in FXML design and JavaFX integration.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"### Reuse and Adaptation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"- While the base `Person` and command structure were derived from AB3, at least **60–70%** of our implementation around Groups was written from scratch.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"- Reuse was mainly in utility classes (e.g., `ToStringBuilder`, `AppUtil`) and storage design patterns.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"- Our work in adapting the storage layer was influenced by the original `JsonSerializableAddressBook` class but extended heavily to handle nested structures.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"### Summary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"Implementing Groups added substantial architectural and technical complexity, transforming the app from a flat contact book into a lightweight group management system with role-based semantics, performance tracking, and detailed inter-entity relationships.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"This shift from simple CRUD operations to relational logic and multi-level storage increased the overall effort significantly beyond AB3\u0027s scope.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"dexterkwxn"},"content":"Team size: 5","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"dexterkwxn"},"content":"### Submission and grading of assignments","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"dexterkwxn"},"content":"Currently, the app allows TAs to add, delete and edit assignments, but there is no support for submission and grading of assignments. We plan to allow TAs to add and grade student submissions for assignments. TAs will also be able to add submission deadlines and set penalties for late submissions. Ultimately, the goal is for TAs to be able to create assignment deadlines, record down their students\u0027 time of submission, and grade students\u0027 work while also penalizing late submissions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"dexterkwxn"},"content":"### Display of assignment data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"dexterkwxn"},"content":"Currently assignments cannot be viewed as there is not much to be done with them without a grading feature. We plan to make them displayable together with the implementation of grading of assignments in the future so that the information is meaningful. This will be done via some sort of `list-assignments` command that will show what assignments are in the group, and for each student if they have submitted or not.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"dexterkwxn"},"content":"### Nicer UI and output of command feedback","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"dexterkwxn"},"content":"Currently shows JSON output which is informative and clear for a technically inclined person, but does not look as nice on the UI. Future plan is to enhance the output format to be more visually appealing alongside a UI visual upgrade to display both person and group lists side-by-side for better information tracking. We also intend to make the feedback window dynamically sized so that error messages fit within the box and users will not need to scroll through, thus reducing friction when inputting wrong commands.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"dexterkwxn"},"content":"### Support for TA and Lecturer roles","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"dexterkwxn"},"content":"Currently all persons in the application are assumed to be students which is most important to track for a TA. We plan to add support for TA and Professor roles which would facilitate the feature on grading and submission of assignments. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"dexterkwxn"},"content":"### Listing students in sorted name order","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"dexterkwxn"},"content":"Currently students in groups are indexed arbitrarily. For a future enhancement, we intend to list them in sorted name order for easier lookup.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"dexterkwxn"},"content":"### Marking the attendance of multiple students for multiple weeks at once","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"dexterkwxn"},"content":"Currently, `mark-attendance` only allows the attendance of a single student and for a single week to be marked. This can be time-consuming when marking attendance for larger classes. To make the experience more efficient, we plan to allow TAs to mark multiple students\u0027 attendance for multiple weeks at once. The command would look like `mark-all-attendance g/GROUP w/WEEK1[,WEEK2,WEEK3,...] n/PERSON1 [n/PERSON2 n/PERSON3 ...]`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"dexterkwxn"},"content":"### Display groups that students are in","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"dexterkwxn"},"content":"When listing students currently, the list does not show which groups they are in. We plan to add this information in for this command so that tutors can see which group each student belongs to without going through all the groups he is in charge of.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"dexterkwxn"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"-":1009,"dexterkwxn":23}},{"path":"src/main/java/seedu/address/logic/commands/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_GROUP_NOT_FOUND;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a new assignment to the specified group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddAssignmentCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The command word to trigger this command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add-assignment\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(\"\"\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    %s: Adds a new assignment in the specified group.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zwliew"},"content":"                    Parameters: %sASSIGNMENT_NAME %sGROUP_NAME %sDEADLINE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zwliew"},"content":"                    Example: %s %sHW 1 %sCS2103T T12 %s21-04-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \"\"\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zwliew"},"content":"            COMMAND_WORD, PREFIX_NAME, PREFIX_GROUP, PREFIX_DATE, COMMAND_WORD, PREFIX_NAME,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zwliew"},"content":"            PREFIX_GROUP, PREFIX_DATE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Added new assignment to group!\\nGroup: %s\\nAssignment: %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Name of the new assignment to be added.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Name of the group to be added to.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final String groupName;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Deadline of the assignment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Grade penalty for late submission, default value is 1.0.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Float penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates an AddAssignmentCommand to add a new assignment with the specified name, group, and deadline.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param name      The name of the assignment to be added.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param groupName The name of the group to be added.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param deadline  The deadline of the assignment.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public AddAssignmentCommand(String name, String groupName, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, groupName, deadline);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.penalty \u003d penalty \u003d\u003d null ? 1.0F : penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Group group;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            group \u003d model.getGroup(groupName);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (GroupNotFoundException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_GROUP_NOT_FOUND);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (model.isAssignmentInGroup(name, group)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Another assignment with the same name already exists in group!\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Assignment assignment \u003d model.addAssignmentToGroup(name, deadline, group, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, groupName, assignment));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DuplicateAssignmentException d) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(d.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddAssignmentCommand otherAddAssignmentCommand)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return name.equals(otherAddAssignmentCommand.name) \u0026\u0026 groupName.equals(otherAddAssignmentCommand.groupName);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .add(\"groupName\", groupName)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"deadline\", deadline)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"zwliew":4,"-":117}},{"path":"src/main/java/seedu/address/logic/commands/EditAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEW_NAME;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Edits the specified assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditAssignmentCommand extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The command word to trigger this command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit-assignment\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(\"\"\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    %s: Edits the assignment in the specified group.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zwliew"},"content":"                    Parameters: %sASSIGNMENT_NAME %sGROUP_NAME [%sNEW_NAME] [%sDEADLINE]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zwliew"},"content":"                    Example: %s %sHW 1 %sCS2103T T12 %sHW 1 %s21-04-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \"\"\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zwliew"},"content":"            COMMAND_WORD, PREFIX_NAME, PREFIX_GROUP, PREFIX_NEW_NAME, PREFIX_DATE,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zwliew"},"content":"            COMMAND_WORD, PREFIX_NAME, PREFIX_GROUP, PREFIX_NEW_NAME, PREFIX_DATE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dexterkwxn"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Assignment in group %s has been edited: %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Name of the assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Name of the group the assignment belongs in.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final String groupName;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * New name of the assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final String newName;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * New deadline of the assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Late penalty for assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Float penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates an EditAssignmentCommand to edit an assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param name      The name of the assignment to be added.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param groupName The name of the group to be added.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditAssignmentCommand(String name, String groupName, String newName, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, groupName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name.equals(newName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.newName \u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.newName \u003d newName;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.penalty \u003d penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Group group;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            group \u003d model.getGroup(groupName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (GroupNotFoundException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Group not found!\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            model.editAssignment(name, newName, deadline, group, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (AssignmentNotFoundException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Assignment not found!\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DuplicateAssignmentException d) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new CommandException(d.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, groupName, newName \u003d\u003d null ? name : newName));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditAssignmentCommand otherEditAssignmentCommand)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return name.equals(otherEditAssignmentCommand.name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 groupName.equals(otherEditAssignmentCommand.groupName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"groupName\", groupName)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"newName\", newName)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"deadline\", deadline)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"zwliew":4,"-":126,"dexterkwxn":1}},{"path":"src/main/java/seedu/address/logic/parser/AddAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LATE_PENALTY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddAssignmentCommand object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddAssignmentCommandParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAssignmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an AddAssignmentCommand object for execution.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUP,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zwliew"},"content":"                PREFIX_DATE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUP, PREFIX_DATE)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GROUP, PREFIX_DATE, PREFIX_LATE_PENALTY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String assignmentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        LocalDate deadline \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Float penalty \u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_LATE_PENALTY).isPresent()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            penalty \u003d Float.parseFloat(argMultimap.getValue(PREFIX_LATE_PENALTY).get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new AddAssignmentCommand(assignmentName, groupName, deadline, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"zwliew":1,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/EditAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LATE_PENALTY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEW_NAME;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dexterkwxn"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditAssignmentCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditAssignmentCommand object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditAssignmentCommandParser implements Parser\u003cEditAssignmentCommand\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAssignmentCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditAssignmentCommand object for execution.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUP, PREFIX_NEW_NAME,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zwliew"},"content":"                PREFIX_DATE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUP)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    EditAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GROUP, PREFIX_NEW_NAME, PREFIX_DATE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String assignmentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String groupName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_GROUP).get()).toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String newName \u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NEW_NAME).isPresent()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            newName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NEW_NAME).get()).toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LocalDate deadline \u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            deadline \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Float penalty \u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_LATE_PENALTY).isPresent()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            penalty \u003d Float.parseFloat(argMultimap.getValue(PREFIX_LATE_PENALTY).get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dexterkwxn"},"content":"        if (!CollectionUtil.isAnyNonNull(newName, deadline, penalty)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dexterkwxn"},"content":"            throw new ParseException(EditAssignmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new EditAssignmentCommand(assignmentName, groupName, newName, deadline, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"zwliew":1,"-":62,"dexterkwxn":3}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dexterkwxn"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date is not in dd-MM-yyyy format.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the String group name and validated it.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given String violated Message Constraints for Group Name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String parseGroupName(String name) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Group.isValidGroupName(trimmedName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return trimmedName;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses {@code String} into a {@code Date}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * The format used is dd-MM-yyyy.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param dateString","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static LocalDate parseDate(String dateString) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        LocalDate date;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return date;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"-":177,"dexterkwxn":1}},{"path":"src/main/java/seedu/address/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.text.MessageFormat;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Repesents an assignment.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Assignment {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group names should be alphanumeric\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The assignment name.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The assignment deadline.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private LocalDate deadline;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Penalty for grading should there be late submission.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Float penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code Assignment}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param name     The assignment name.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param deadline deadline of the assignment.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Assignment(String name, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, deadline, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.penalty \u003d penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Edits the assignment details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param name The assignment name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param deadline deadline of the assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void editAssignment(String name, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (penalty !\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.penalty \u003d penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this.name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this.deadline;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Float getPenalty() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this.penalty;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Computes the hash code for this assignment based on its name and group.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @return The hash code of the group.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(name);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zwliew"},"content":"        return MessageFormat.format(\"Assignment\u0027{\u0027name\u003d\u0027\u0027{0}\u0027\u0027, deadline\u003d{1}\u0027}\u0027\", name, deadline);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"zwliew":1,"-":90}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.group;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ArrayListMap;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.ui.GroupCard;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.ui.Result;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A {@code Group} consists of a unique name and an ordered list of unique members.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class Group implements Result {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Message to indicate the constraints for group names.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group names should be alphanumeric\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Regular expression to validate group names.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dexterkwxn"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} /\\\\-\u0027]*\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The name of the group.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private String groupName;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The map of all members in the group.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final ArrayListMap\u003cPerson, GroupMemberDetail\u003e groupMembers;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The list of all assignments in the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cAssignment\u003e assignments;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Constructs a {@code Group} with a specified name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Initializes an empty list of group members.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param groupName A valid group name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Group(String groupName) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this(groupName, (Collection\u003cPerson\u003e) null, null);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Constructs a {@code Group} with a specified name and an existing list of members.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Assumes groupMembers are students.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param groupName    A valid group name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param groupMembers The list of members in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Group(String groupName, Collection\u003cPerson\u003e groupMembers) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this(groupName, groupMembers, null);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Constructs a {@code Group} with a specified name, existing list of members, and a set of tags.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param groupName    A valid group name.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param groupMembers The collection of members in the group.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param tags         The collection of tags for the group.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Group(String groupName, Collection\u003cPerson\u003e groupMembers, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.groupMembers \u003d new ArrayListMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (groupMembers !\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            for (Person p : groupMembers) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                this.groupMembers.put(p, new GroupMemberDetail(p, this));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.tags \u003d tags \u003d\u003d null ? new HashSet\u003c\u003e() : new HashSet\u003c\u003e(tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Constructs a {@code Group} with a specified name, existing Map and set of tags.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param groupName    A valid group name.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param groupMembers A map of Person as key to GroupMemberDetail as value.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param tags         The collection of tags for the group.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Group(String groupName, ArrayListMap\u003cPerson, GroupMemberDetail\u003e groupMembers, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this(groupName, groupMembers, tags, null);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Constructs a {@code Group} with a specified name, existing Map and set of tags.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @param groupName    A valid group name.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param groupMembers A map of Person as key to GroupMemberDetail as value.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @param tags         The collection of tags for the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @param assignments  The collection of tags for the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public Group(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String groupName,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            ArrayListMap\u003cPerson,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    GroupMemberDetail\u003e groupMembers,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Collection\u003cTag\u003e tags,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Collection\u003cAssignment\u003e assignments) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.groupMembers \u003d groupMembers;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        this.tags \u003d tags \u003d\u003d null ? new HashSet\u003c\u003e() : new HashSet\u003c\u003e(tags);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        this.assignments \u003d assignments \u003d\u003d null ? new ArrayList\u003c\u003e() : new ArrayList\u003c\u003e(assignments);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Checks if the given string is a valid group name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param test The string to test.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @return True if the name is valid, false otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Gets the name of the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @return The group\u0027s name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String getGroupName() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return this.groupName;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets a new name for the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param groupName The new name to assign to the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setGroupName(String groupName) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Retrieves the list of group members.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @return An ArrayList of group members.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public ArrayList\u003cPerson\u003e getGroupMembers() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(groupMembers.keySet());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public ArrayListMap\u003cPerson, GroupMemberDetail\u003e getGroupMembersMap() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ArrayListMap\u003cPerson, GroupMemberDetail\u003e copied \u003d new ArrayListMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        copied.putAll(this.groupMembers);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return copied;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Replaces the old person with new edited person while keeping the GroupMemberDetails.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @param target","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @param editedPerson","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void setGroupMember(Person target, Person editedPerson) throws PersonNotFoundException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!contains(target)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        groupMembers.replaceKey(target, editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two gorups.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return otherGroup !\u003d null \u0026\u0026 otherGroup.getGroupName().equals(groupName);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Checks whether this group is equal to another object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Two groups are considered equal if they have the same name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * @return True if both groups have the same name, false otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (!(other instanceof Group otherGroup)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return groupName.equals(otherGroup.groupName) \u0026\u0026 tags.equals(otherGroup.tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Computes the hash code for this group based on its name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * @return The hash code of the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return Objects.hash(groupName, tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Checks if the group contains a specific person.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @param toCheck The person to check for membership in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @return True if the person exists in the group, false otherwise.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return groupMembers.containsKey(toCheck);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Adds a person to the group.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Ensures that the person does not already exist in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * @param p The person to be added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException If the person already exists in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void add(Person p) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        requireNonNull(p);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (contains(p)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        this.groupMembers.put(p, new GroupMemberDetail(p, this));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Removes a person from the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Ensures that the person exists before attempting removal.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * @param p The person to be removed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException If the person is not found in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void remove(Person p) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (groupMembers.remove(p) \u003d\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Retrieves a person at a specified index in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * @param i The index of the person to retrieve.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * @return The person at the given index.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public Person get(int i) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return groupMembers.get(i).getPerson();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * Gets the number of members in the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * @return The size of the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return this.groupMembers.size();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public GroupMemberDetail getGroupMemberDetail(Person person) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return groupMembers.get(person);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Gets the {@code Assignment} specified by name. If no such assignment is found, returns null.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"     * @param assignmentName The name of the assignment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * @return The desired assignment if found","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public Assignment getAssignment(String assignmentName) throws AssignmentNotFoundException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        for (Assignment a : assignments) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (a.getName().equals(assignmentName)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"                return a;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"        throw new AssignmentNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * Gets all {@code Assignment} in the group","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * @return All assignments in the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    public ArrayList\u003cAssignment\u003e getAssignments() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        return assignments;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * Checks if the group contains the {@code Assignment} specified by name.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * @param assignmentName The name of the assignment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * @return True if the Assignment exists and false otherwise.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public boolean containsAssignment(String assignmentName) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        return assignments.stream()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"                .anyMatch(a -\u003e a.getName().equals(assignmentName));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"     * Adds the assignment to the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * @param assignmentName The assignment name.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"     * @param deadline       A {@code LocalDate} object specifying the assignment deadline.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    public Assignment addAssignment(String assignmentName, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        if (containsAssignment(assignmentName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Assignment assignment \u003d new Assignment(assignmentName, deadline, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"        assignments.add(assignment);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"        return assignment;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * Removes an assignment from the group.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * @param assignmentName The assignment name to be removed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public void removeAssignment(String assignmentName) throws AssignmentNotFoundException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        for (Assignment a : assignments) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"            if (a.getName().equals(assignmentName)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"                assignments.remove(a);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"        throw new AssignmentNotFoundException();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"     * Edits the specified assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * @param assignmentName The assignment name of the assignment to be edited.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * @param newName        The new name of the assignment.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"     * @param deadline       A {@code LocalDate} object specifying the assignment deadline.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public void editAssignment(String assignmentName, String newName, LocalDate deadline, Float penalty) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"        for (Assignment a : assignments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"            if (a.getName().equals(newName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"                throw new DuplicateAssignmentException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"            if (a.getName().equals(assignmentName)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"                a.editAssignment(newName, deadline, penalty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"        throw new AssignmentNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * Marks attendance of a person for a specified week.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * @param person The person to mark the attendance","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"     * @param week   A valid week.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public void markAttendance(Person person, int week) throws PersonNotFoundException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"        if (!groupMembers.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        GroupMemberDetail groupMemberDetail \u003d groupMembers.get(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"        groupMemberDetail.markAttendance(week);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"     * Unmarks attendance of a person for a specified week.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"     * @param person The person to mark the attendance","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"     * @param week   A valid week.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    public void unmarkAttendance(Person person, int week) throws PersonNotFoundException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"        if (!groupMembers.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"        GroupMemberDetail groupMemberDetail \u003d groupMembers.get(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"        groupMemberDetail.unmarkAttendance(week);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"     * Returns a string representation of the group in the format \"[GroupName]\".","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"     * @return A formatted string representing the group.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"                .add(\"name\", groupName)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"    public UiPart\u003cRegion\u003e createCard(int displayedIndex) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"        return new GroupCard(this, displayedIndex);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public ArrayList\u003cGroupMemberDetail\u003e getGroupDetails() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"        return groupMembers.values();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"-":442,"dexterkwxn":1}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dexterkwxn"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} /\\\\-\u0027]*\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":66,"dexterkwxn":1}}]
