[{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Wedding Hero User Guide","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"As a professional wedding planner, you need a tool that keeps pace with your fast-moving schedule.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"**Wedding Hero** is a desktop application tailored specifically for you. Optimised for rapid interactions through a","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"**Command Line Interface (CLI)**—while still offering the clarity and ease of a **Graphical User Interface (GUI)**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"—this application is built to help you manage complex wedding details with precision.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"### Key Features","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"- **Person Lists \u0026 Seating Arrangements:** Organise and modify with speed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"- **Crucial Person Details:** Manage contact information, dietary requirements and RSVP statuses seamlessly.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"- **Multiple Weddings Management:** Keep track of several weddings effortlessly, consolidating details for each event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  in one centralised dashboard.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you\u0027re comfortable typing quickly, Wedding Hero empowers you to execute your planning tasks more efficiently than","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"traditional mouse-based applications.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"- [Using Wedding Hero](#using-wedding-hero)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  - [Getting Help](#getting-help)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"  - [Viewing Help: `help`](#viewing-help-help)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"- [How Wedding Hero Works (System Flow)](#how-wedding-hero-works-system-flow)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"  - [Typical Workflow Example](#typical-workflow-example)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"- [Features](#features)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"  - [Managing Weddings](#managing-weddings)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"    - [Creating a Wedding : `createWedding`](#creating-a-wedding--createwedding)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    - [Setting a Wedding : `setWedding`](#setting-a-wedding--setwedding)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    - [Wedding Overview : `weddingOverview`](#wedding-overview--weddingoverview)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"    - [Deleting a Wedding : `deleteWedding`](#deleting-a-wedding--deletewedding)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"  - [Managing Persons](#managing-persons)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    - [Adding a person: `addPerson`](#adding-a-person-addperson)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"    - [Deleting a Person : `deletePerson`](#deleting-a-person--deleteperson)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"    - [Filtering Persons: `filterPersons`](#filtering-persons-filterpersons)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"    - [Listing Persons: `list`](#listing-persons--list)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"  - [Managing Tables](#managing-tables)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"    - [Adding a Table : `addTable`](#adding-a-table--addtable)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"    - [Deleting a Table : `deleteTable`](#deleting-a-table--deletetable)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"    - [Listing Tables : `getTables`](#listing-tables--gettables)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"    - [Finding a Table : `findTable`](#finding-a-table--findtable)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"  - [Assigning a Person to a Tables](#assigning-a-person-to-a-table)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"    - [Adding a Person to a Table: addPersonToTable](#adding-a-person-to-a-table-addpersontotable)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"    - [Removing a Person from a Table: deletePersonFromTable](#removing-a-person-from-a-table-deletepersonfromtable)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"  - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"- [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"   [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"   **Window and Linux users:** can find their Java `17` download links","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"   [here](https://www.oracle.com/java/technologies/downloads/#java17).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/se-edu/WeddingHero-level3/releases).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your WeddingHero.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar WeddingHero.jar`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/Ui.png\" alt\u003d\"Ui\" style\u003d\"max-width: 75%; height: auto;\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"- `addPerson n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/NONE r/YES` : Adds a ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"  person named John Doe with RSVP status and dietary preference to the active wedding.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"- `createWedding n/Jack and Jill\u0027s Wedding` : Creates a new wedding called \"Jack and Jill\u0027s Wedding\". ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"- `exit` : Exits the application.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"- Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"- **Words in `UPPER_CASE` are placeholders for user input.**  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  For example, in `add n/NAME`, you can use:  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"  `add n/John Doe` (where `John Doe` replaces `NAME`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"- **Prefixes** (e.g., `n/`, `p/`, `e/`) **must be used exactly as shown**, including lowercase letters and the slash.  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"  Missing or mistyped prefixes will result in an invalid command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jonzyyyy"},"content":"- **Parameters can be typed in any order.**  For example, `n/John p/91234567` and `p/91234567 n/John` are both valid.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"- **Commands are case-sensitive for field values** where applicable, such as `d/VEGAN` vs. `d/vegan`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"- **Optional parameters are shown in square brackets.**  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jonzyyyy"},"content":"  e.g., `filterPersons [d/DietaryRestriction] [r/RSVP]`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cbox\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jonzyyyy"},"content":"⚠️ PDF Warning: If you are using a PDF version of this document, be careful when copying and pasting commands that ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jonzyyyy"},"content":"span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jonzyyyy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"## Using Wedding Hero","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Getting Help","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"You can access a help popup at any time while using Wedding Hero.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" alt\u003d\"help message\" style\u003d\"max-width: 70%; height: auto;\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Viewing Help: `help`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"Displays a message that explains how to access the full user guide.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"help","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"## How Wedding Hero Works (System Flow)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"Wedding Hero helps you manage **multiple weddings** with ease by using a **“set and operate” model**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. **Create a wedding** using the `createWedding` command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"2. **Set the wedding as active** using the `setWedding` command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jonzyyyy"},"content":"3. Once a wedding is set as active, all operations like adding persons, tables, or assigning seats apply **only to that ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jonzyyyy"},"content":"   active wedding**.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jonzyyyy"},"content":"4. You can view and manage each wedding’s persons, tables, and RSVP details independently.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jonzyyyy"},"content":"\u003e  **Note:** You can only interact with one wedding at a time. You must `setWedding` before performing most other ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jonzyyyy"},"content":"\u003e commands (e.g., `addPerson`, `addTable`, etc.).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Typical Workflow Example","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Here\u0027s a typical command sequence you might use a wedding planner:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"createWedding n/John \u0026 Jane Wedding","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jonzyyyy"},"content":"setWedding n/John \u0026 Jane Wedding","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jonzyyyy"},"content":"addPerson n/John p/91234567 e/john@example.com a/123 Street d/NONE r/YES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"addTable tid/1 c/10","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"addPersonToTable n/John tid/1","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"weddingOverview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jonzyyyy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Managing Weddings","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Creating a Wedding : `createWedding`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"Creates a new wedding in the wedding planner.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"`createWedding n/WEDDINGNAME`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"- Creates a wedding with the provided `n/WEDDINGNAME`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"- The parameter `n/WEDDINGNAME` should be a valid string representing the name of the wedding. Feel free to use spaces.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"- This command is used to quickly add a new wedding event to the system.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"- Running `createWedding John \u0026 Jane Wedding` will create a wedding entry with the name \"John \u0026 Jane Wedding\".","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"- Using `createWedding Smith Family Wedding` will add a wedding event named \"Smith Family Wedding\".","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"- After using createWedding, remember to set the wedding as active using:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jonzyyyy"},"content":"  `setWedding n/John \u0026 Jane Wedding`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jonzyyyy"},"content":"- Always match spacing exactly when setting or referring to a wedding — \"John\u0026JaneWedding\" is not the same as \"John ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jonzyyyy"},"content":"\u0026 Jane Wedding\".","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"- Once a wedding is set, any added persons, tables, or edits will apply to that active wedding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Setting a Wedding : `setWedding`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jonzyyyy"},"content":"Sets a specific wedding as the active wedding, enabling modifications such as adding a person to a wedding and ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jonzyyyy"},"content":"assigning a person to a wedding\u0027s table.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `setWedding n/WEDDINGNAME`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"- Sets the active wedding context to the wedding with the provided **`WEDDINGNAME`**.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"- Activates a previously created wedding identified by WEDDINGNAME.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"  -Once set, all person and table operations will apply to this active wedding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"  -The WEDDINGNAME must match the name used during createWedding, with correct spacing.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jonzyyyy"},"content":"- Running `setWedding n/John \u0026 Jane Wedding` sets the active wedding to \"John \u0026 Jane Wedding\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jonzyyyy"},"content":"- Using `setWedding n/Smith Wedding` sets the active wedding to the wedding named \"Smith Wedding\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"  \u003cbox type\u003d\"info\" seamless\u003e Note: You can only modify or view wedding details after setting a wedding as active. \u003c/box\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Wedding Overview : `weddingOverview`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jonzyyyy"},"content":"Provides an overview of the current active wedding, including details such as the number of tables and persons.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `weddingOverview`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"- Retrieves a summary overview of the active wedding.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"- No additional arguments are required.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jonzyyyy"},"content":"- The overview includes key details such as the number of tables and persons and the list of persons invited.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jonzyyyy"},"content":"- Running `weddingOverview` after setting an active wedding displays a summary of the wedding, including number of ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jonzyyyy"},"content":"  persons attending and number of tables.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"### Deleting a Wedding : `deleteWedding`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"Deletes a wedding from the system by name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `deleteWedding WEDDINGNAME`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"- Permanently deletes the wedding identified by WEDDINGNAME.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jonzyyyy"},"content":"- WEDDINGNAME must match the exact name of the wedding you created. The comparison is case-insensitive but spacing ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jonzyyyy"},"content":"  must match exactly.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"- Once deleted, all associated persons, tables, and data under the wedding will also be removed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"- deleteWedding John \u0026 Jane Wedding would delete John \u0026 Jane Wedding","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e  This action is irreversible. Ensure you are deleting the correct wedding before confirming. \u003c/box\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jonzyyyy"},"content":"## Managing Persons","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Adding a person: `addPerson`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jonzyyyy"},"content":"Adds a person to the currently active wedding’s person list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `addPerson n/NAME p/PHONE e/EMAIL a/ADDRESS d/DIETARYRESTRICTION r/RSVP`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Details:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jonzyyyy"},"content":"- All fields are mandatory.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jonzyyyy"},"content":"- A person is identified by their `NAME` only. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jonzyyyy"},"content":"- Multiple persons can have the same contact information such as `PHONE` or `EMAIL` since children may not have a ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jonzyyyy"},"content":"  phone number, and it would be more flexible to allow guests to select their point of contact.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jonzyyyy"},"content":"- A wedding should be created and set before a person can be added.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jonzyyyy"},"content":"- Please refer to the full list of [Allowed Dietary Restrictions](#allowed-dietary-restrictions) and [Allowed RSVP ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jonzyyyy"},"content":"  Values](#allowed-rsvp-values)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jonzyyyy"},"content":"addPerson n/John Doe p/12345678 e/johndoe@example.com a/123 Street d/NONE r/YES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jonzyyyy"},"content":"addPerson n/Alex Tan p/87654321 e/alex@example.com a/456 Avenue d/VEGAN r/NO","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Deleting a Person : `deletePerson`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jonzyyyy"},"content":"Deletes a person from the currently active wedding\u0027s person list, using their displayed index number.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `deletePerson INDEX`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"Details:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"INDEX: A positive integer corresponding to the person\u0027s number in the displayed person list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"(e.g., from a previous list or filterPersons command)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"- You must run setWedding before this command — deletion only works for persons in the currently active wedding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"- If the index is invalid or out of range, the system will show an error.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"- Deletion is permanent and cannot be undone.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jonzyyyy"},"content":"**Examples:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jonzyyyy"},"content":"- Running `deletePerson 1` deletes the first person shown in the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jonzyyyy"},"content":"- Running `deletePerson 3` deletes the third person shown in the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jonzyyyy"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e Make sure you\u0027re viewing the correct list of persons before deleting — the index is ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jonzyyyy"},"content":"based on the currently displayed list. \u003c/box\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Filtering Persons: `filterPersons`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jonzyyyy"},"content":"This command allows you to filter your list of persons by applying `DIETARYRESTRICTION` and/or `RSVP` status filters.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"You can use it to display only those persons who meet the criteria you specify.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `filterPersons [d/DIETARYRESTRICTION] [r/RSVP]`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jonzyyyy"},"content":"- At least one of 2 prefixes d/ and r/ must be used for this command. Both of the prefixes can be used together as well.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jonzyyyy"},"content":"- Note that each prefix can only be used at most once with the command. Running `filterPersons r/NO r/YES` will ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jonzyyyy"},"content":"  result in ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jonzyyyy"},"content":"  an error.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"- **Dietary Restriction Filter:** Use the prefix `d/` followed by a valid dietary restriction value","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jonzyyyy"},"content":"  (e.g., `VEGAN`, `VEGETARIAN`). Include this if you want to filter persons based on dietary needs. Please see ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jonzyyyy"},"content":"  [Allowed Dietary Restrictions](#allowed-dietary-restrictions) for the full list of `DIETARYRESTRICTIONS` to filter by.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jonzyyyy"},"content":"- **RSVP Filter:** Use the prefix `r/` followed by a valid RSVP status (e.g., `YES`).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jonzyyyy"},"content":"  Include this if you want to filter persons by their RSVP status. Please see ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jonzyyyy"},"content":" [Allowed RSVP Values](#allowed-rsvp-values) for the full list of `RSVP` status to filter by","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/UG-example-images/filterPersonExample.png\" alt\u003d\"List of filtered persons based on RSVP - No\" style\u003d\"max-width: 70%; height: auto;\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003csub\u003eExample output when filtering persons based on RSVP `NO` using command: `filterPersons r/NO`\u003c/sub\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"- Running `filterPersons d/VEGAN r/YES` displays all persons who are vegan and have accepted the invitation.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"- Using `filterPersons d/HALAL` displays all persons with a halal dietary restriction.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"jonzyyyy"},"content":"- Running `filterPersons r/YES r/NO` will return an error message since multiple categories are not allowed for a prefix.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"jonzyyyy"},"content":"### Listing Persons : `list`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"jonzyyyy"},"content":"Lists all persons in the currently selected wedding, resetting any applied filters.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `list`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"jonzyyyy"},"content":"Details:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"jonzyyyy"},"content":"- This command displays every person in the currently selected wedding.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"jonzyyyy"},"content":"- No prefixes are required for this command. Anything typed after the `list` command will be ignored","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"jonzyyyy"},"content":"- It updates the current view by removing any filters, ensuring that all persons are shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"jonzyyyy"},"content":"**Example:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"jonzyyyy"},"content":"- Running `list` will update the display to show all persons stored in the currently selected wedding.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"## Managing Tables","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Adding a Table : `addTable`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"Adds a table with the specified ID and capacity to the current wedding","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"addTable tid/TABLEID c/CAPACITY","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"- Adds a table with the provided `TABLEID` and `CAPACITY`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"- The parameter `TABLEID` denotes the unique integer identifier for the table. Ensure that it is unique by using","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"  the `getTablesCommand`, to view the other tables","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"- The parameter `CAPACITY` represents the seating capacity of the table.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"- Both parameters are required to correctly add the table to the wedding plan.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"- There is an upper limit of 10000 as the maximum capacity","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"jonzyyyy"},"content":"- Running `addTable tid/12 c/8` will add a table with the ID `12` and a seating capacity for 8 persons.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Deleting a Table : `deleteTable`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"Deletes a table by its ID.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"`deleteTable tid/TABLEID`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"- Deletes the table with the provided `TABLEID`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"- The parameter `TABLEID` must match the table\u0027s ID exactly as stored in the system.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"- This command removes the specified table from the currently set wedding.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"- Running `deleteTable tid/12` deletes the table with the ID `12`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Listing Tables : `getTables`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"Lists all tables currently added to the wedding layout.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"`getTables`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"- Retrieves a list of all tables.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"- No additional arguments are required.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"jonzyyyy"},"content":"- The command displays details of each table like the persons seated at that table for easy reference.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Finding a Table : `findTable`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"Finds a table by its ID.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"`findTable tid/TABLEID`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"- Searches for the table with the specified `TABLEID`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"- The parameter `TABLEID` should exactly match the table\u0027s identifier number.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"- Useful for quickly locating a specific table in the wedding layout.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"- Running `findTable tid/12`  searches and displays the table with the id 12.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"jonzyyyy"},"content":"## Assigning a Person to a Table","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Adding a Person to a Table: addPersonToTable","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"jonzyyyy"},"content":"Assigns a Person to a specified Table within the currently active wedding.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"jonzyyyy"},"content":"**Format:** `addPersonToTable n/NAME tid/INDEX","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"jonzyyyy"},"content":"`  ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"- Searches for the table with the specified `TABLEID`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"- The parameter `TABLEID` should exactly match the table\u0027s identifier number.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"- Useful for quickly locating a specific table in the wedding layout.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"- Running `findTable tid/12`  searches and displays the table with the id 12.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Removing a Person from a Table: deletePersonFromTable","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"Removes a person from a table in the currently active wedding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"jonzyyyy"},"content":"**Format**: `deletePersonFromTable n/NAME tid/INDEX","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"jonzyyyy"},"content":"`  ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"jonzyyyy"},"content":"- deletePersonFromTable n/NAME tid/TABLEID","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"jonzyyyy"},"content":"- NAME is the name of the person displayed on the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"example:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"- deletePersonFromTable name/John Doe tid/5 deletes the John Doe person from the table with ID 5","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"WeddingHero data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"save manually.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"WeddingHero data are saved automatically as a JSON file `[JAR file location]/data/WeddingHero.json`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, WeddingHero will discard all data and start with an","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the WeddingHero to behave in unexpected ways (e.g., if a value entered is outside","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"jonzyyyy"},"content":"- **Active Wedding**: The currently selected wedding that all actions (e.g., adding a person or a table) apply to. You ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"jonzyyyy"},"content":"  must use the `setWedding` command to set an active wedding.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"jonzyyyy"},"content":"- **Table ID**: A unique integer identifier (e.g., `1`, `5`, `12`) given to each table during the `addTable` command.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"jonzyyyy"},"content":"  Used for assigning and locating tables.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"jonzyyyy"},"content":"- **Dietary Restriction**: Describes food requirements or allergies of a person. Acceptable values include: `NONE`, ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"jonzyyyy"},"content":"  `VEGETARIAN`, `VEGAN`, `HALAL`, `SHELLFISH`, `PEANUTS`, `FISH`, `EGGS`, `SOY`, `SESAME`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"- **RSVP**: Indicates whether a person has responded to an invitation. Valid values: `YES`, `NO`, `NO_RESPONSE`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"- **Index**: A positive integer shown in the GUI list view that represents the position of a person in the current filtered or full list. Used in commands like `deletePerson`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"jonzyyyy"},"content":"- **Prefix**: Refers to `n/`, `r/`, `p/` etc. Please refer to the list of prefixes and its meaning below to see what ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"jonzyyyy"},"content":"  each of them refer to.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"jonzyyyy"},"content":"### List of prefixes and its meaning:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"jonzyyyy"},"content":"- `n/` → Name (e.g., John Doe or Jack and Jill\u0027s wedding)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"jonzyyyy"},"content":"- `p/` → Phone number (e.g., 12345678)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"jonzyyyy"},"content":"- `e/` → Email address (e.g., johndoe@example.com)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"jonzyyyy"},"content":"- `a/` → Address (e.g., 123 Street)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"jonzyyyy"},"content":"- `d/` → Dietary Restriction (must be selected from [Allowed Dietary Restrictions](#allowed-dietary-restrictions))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"jonzyyyy"},"content":"- `r/` → RSVP status (must be selected from [Allowed RSVP Values](#allowed-rsvp-values))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"jonzyyyy"},"content":"- `tid/` → Table ID integer (Must be greater than 0)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"jonzyyyy"},"content":"- `c/` → Capacity allocated to table ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"jonzyyyy"},"content":"\u003ca id\u003d\"allowed-dietary-restrictions\"\u003e\u003c/a\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"jonzyyyy"},"content":"### **Allowed `DIETARYRESTRICTION` values:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"jonzyyyy"},"content":"- NONE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"jonzyyyy"},"content":"- VEGETARIAN","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"jonzyyyy"},"content":"- VEGAN","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"jonzyyyy"},"content":"- HALAL","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"jonzyyyy"},"content":"- SHELLFISH","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"jonzyyyy"},"content":"- PEANUTS","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"jonzyyyy"},"content":"- EGGS","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"jonzyyyy"},"content":"- FISH","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"jonzyyyy"},"content":"- SOY","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"jonzyyyy"},"content":"- SESAME","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"jonzyyyy"},"content":"\u003ca id\u003d\"allowed-rsvp-values\"\u003e\u003c/a\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"jonzyyyy"},"content":"### **Allowed `RSVP` values:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"jonzyyyy"},"content":"- YES","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"jonzyyyy"},"content":"- NO","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"jonzyyyy"},"content":"- NO_RESPONSE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"the data of your previous WeddingHero home folder.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. When using multiple screens, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the preferences.json file created by the application before running the application again.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"2. If you minimize the Help Window and then run the help command (or use the Help menu, or the keyboard shortcut F1) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"jonzyyyy"},"content":"3. We understand that the list of dietary restrictions is not exhaustive and does not include all dietary ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"jonzyyyy"},"content":"   restrictions people may have, but the list we have provided is applicable to majority of the population. We will ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"jonzyyyy"},"content":"   try our best to include more dietary restrictions in the future. Stay tuned!","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"| **Action**                | **Format, Examples**                                                                                                                                                 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"|---------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"| **createWedding**         | `createWedding n/NAME`\u003cbr\u003eExample: `createWedding n/John \u0026 Jane Wedding`                                                                                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"| **deleteWedding**         | `deleteWedding n/NAME`\u003cbr\u003eExample: `deleteWedding n/John \u0026 Jane Wedding`                                                                                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"| **setWedding**            | `setWedding n/NAME`\u003cbr\u003eExample: `setWedding n/Smith Wedding`                                                                                                         |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"| **weddingOverview**       | `weddingOverview`\u003cbr\u003eExample: `weddingOverview`                                                                                                                      |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"jonzyyyy"},"content":"| **addPerson**             | `addPerson n/NAME p/PHONE e/EMAIL a/ADDRESS d/DIETARYRESTRICTION r/RSVP`\u003cbr/\u003eExample: `addPerson n/John Doe p/12345678 e/johndoe@example.com a/123 Street d/Vegan r/YES` |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"| **deletePerson**          | `deletePerson INDEX`\u003cbr\u003eExample: `deletePerson 3`                                                                                                                    |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"| **Find**                  | `Find KEYWORD`\u003cbr\u003eExample: `Find John`                                                                                                                               |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"jonzyyyy"},"content":"| **filterPersons**         | `filterPersons [d/DIETARYRESTRICTION] [r/RSVP_FIELD]`\u003cbr\u003eExample: `filterPersons d/Vegan r/YES`                                                               |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"| **addTable**              | `addTable tid/TABLE_ID c/CAPACITY`\u003cbr\u003eExample: `addTable tid/1 c/8`                                                                                                  |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"| **addPersonToTable**      | `addPersonToTable n/NAME tid/TABLE_ID`\u003cbr\u003eExample: `addPersonToTable n/John Doe tid/1`                                                                               |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"| **deletePersonFromTable** | `deletePersonFromTable n/NAME tid/TABLE_ID`\u003cbr\u003eExample: `deletePersonFromTable n/John Doe tid/1`                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"| **deleteTable**           | `deleteTable tid/TABLE_ID`\u003cbr\u003eExample: `deleteTable tid/1`                                                                                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"| **findTable**             | `findTable [tid/TABLE_ID] [INDEX]`\u003cbr\u003eExamples: `findTable tid/1` or `findTable 1`                                                                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"| **getTables**             | `getTables`\u003cbr\u003eExample: `getTables`                                                                                                                                  |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"| **Help**                  | `Help`                                                                                                                                                               |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"| **exit**                  | `exit`                                     ","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":165,"-":361}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josejhkim"},"content":"    private static final String LOG_FILE \u003d \"weddinghero.log\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":105,"josejhkim":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.beans.property.ReadOnlyStringProperty;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final StringProperty weddingNameProperty \u003d new SimpleStringProperty(\"\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Initialize wedding name if available","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        updateWeddingNameProperty();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Add listener to update wedding name when model changes","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        model.addPropertyChangeListener(evt -\u003e {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (\"currentWedding\".equals(evt.getPropertyName())) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                updateWeddingNameProperty();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTable\u003e getFilteredTableList() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getFilteredTableList();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ReadOnlyStringProperty weddingNameProperty() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return weddingNameProperty;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates the wedding name property based on the current wedding in the model","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void updateWeddingNameProperty() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"josejhkim"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Wedding currentWedding \u003d model.getCurrentWedding();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            weddingNameProperty.set(currentWedding.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"josejhkim"},"content":"        } catch (NoCurrentWeddingException ncwe) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            weddingNameProperty.set(\"Not Set\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"-":124,"josejhkim":3}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_UNKNOWN_PERSON_NAME \u003d \"The person with the name \u0027%s\u0027 not found!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_UNKNOWN_TABLE_ID \u003d \"The table with the id %d not found!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_NO_CURRENT_WEDDING \u003d \"No current wedding set. Please use \u0027setWedding\u0027 first.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_TABLE_FULL \u003d \"Table with ID %d is full!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_INVALID_TABLE_ID \u003d \"Please input a number between 1 and 100, inclusive, \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josejhkim"},"content":"        + \"for the table id!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_INVALID_TABLE_CAPACITY \u003d \"Please input a number between 1 and 100, inclusive, \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josejhkim"},"content":"        + \"for the table capacity!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_UNKNOWN_WEDDING_NAME \u003d \"There is no wedding with the name: %s\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_INVALID_WEDDING_NAME \u003d \"Wedding name cannot be empty\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getName())","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \")","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(person.getTags().stream().map(tag -\u003e tag.tagName).collect(Collectors.toList()))","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Dietary Restriction: \")","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(person.getDietaryRestriction())","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; RSVP: \")","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getRsvp())","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Table: \")","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getTableIdString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":59,"josejhkim":10}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_CURRENT_WEDDING;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Adds a person to the current wedding.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addPerson\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the current wedding.\\n\"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"n/NAME p/PHONE e/EMAIL a/ADDRESS d/DIETARY_RESTRICTION r/RSVP\\n\"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"n/John Doe p/12345678 e/johndoe@example.com a/123 Street d/None r/YES\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Person added to wedding: %1$s\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Person person;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates an AddGuestCommand to add the specified {@code Person} to the rsvp list in the current wedding.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Executes the AddGuestCommand.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return {@code CommandResult} that describes the result of executing the command.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws CommandException if the current wedding is not set.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            model.addPerson(person);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josejhkim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, person));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (NoCurrentWeddingException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(MESSAGE_NO_CURRENT_WEDDING);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddPersonCommand otherCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return person.toString().equals(otherCommand.person.toString());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return person.hashCode();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return \"seedu.address.logic.commands.AddPersonCommand{toAdd\u003d\" + person + \"}\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":72,"josejhkim":3}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonToTableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE_ID;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds the guest to the specified table.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * If the guest was previously allocated to another table, removes them from there.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddPersonToTableCommand extends Command {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addPersonToTable\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \": Adds the guest identified by name \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"to the table identified by the table ID.\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + \"If the guest was previously seated at another table, \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + \"they will forcefully be removed from that table \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + \"to be relocated to the given table.\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TABLE_ID + \"TABLE ID]\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josejhkim"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_TABLE_ID + \"2\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_GUEST_TO_TABLE_SUCCESS \u003d \"Added Person: %s to Table: %d\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_TABLE_NOT_FOUND \u003d \"Table with id %d not found!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_TABLE_FULL \u003d \"Table with ID %d is full!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Name guestName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final int newTableId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param guestName Name of the guest to add to the table","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param newTableId Int ID of the table to add the guest to","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddPersonToTableCommand(Name guestName, int newTableId) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guestName);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(newTableId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guestName \u003d guestName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.newTableId \u003d newTableId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!model.hasCurrentWedding()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(\"No current wedding set. Please use \u0027setWedding\u0027 first.\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person personToAdd \u003d model.findPersonByName(guestName); // now throws only CommandException","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addPersonToTableById(personToAdd, newTableId);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_GUEST_TO_TABLE_SUCCESS,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                personToAdd.getName().fullName, newTableId));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddPersonToTableCommand)) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddPersonToTableCommand otherAddPersonToTableCommand \u003d (AddPersonToTableCommand) other;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guestName.equals(otherAddPersonToTableCommand.guestName)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u0026\u0026 newTableId \u003d\u003d otherAddPersonToTableCommand.newTableId;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .add(\"AddedGuest\", guestName)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            .add(\"AddedTable\", newTableId)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"-":93,"josejhkim":1}},{"path":"src/main/java/seedu/address/logic/commands/AddTableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_CURRENT_WEDDING;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.table.exceptions.DuplicateTableException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a command to add a table to the wedding seating plan.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddTableCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addTable\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a table to the current wedding.\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: tid/TABLE_ID c/CAPACITY\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" tid/1 c/6\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Table added: Table ID: %1$d, Capacity: %2$d\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_TABLE \u003d \"A table with ID %1$d already exists. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Please choose a different ID.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final int tableId;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final int capacity;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates an AddTableCommand with the specified table ID and capacity.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param tableId  The unique identifier for the table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param capacity The seating capacity of the table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddTableCommand(int tableId, int capacity) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tableId \u003d tableId;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Table table \u003d new Table(tableId, capacity);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            model.addTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, tableId, capacity));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josejhkim"},"content":"        } catch (DuplicateTableException dte) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TABLE, tableId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josejhkim"},"content":"        } catch (NoCurrentWeddingException ncwe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(MESSAGE_NO_CURRENT_WEDDING);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josejhkim"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(iae.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof AddTableCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 tableId \u003d\u003d ((AddTableCommand) other).tableId","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 capacity \u003d\u003d ((AddTableCommand) other).capacity);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":55,"josejhkim":9}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"WeddingHero data has been cleared!\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":22,"josejhkim":1}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonFromTableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_CURRENT_WEDDING;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE_ID;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a guest from the given table.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeletePersonFromTableCommand extends Command {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deletePersonFromTable\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \": Deletes the guest identified by name \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + \"from the table identified by the table ID.\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TABLE_ID + \"TABLE ID]\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_TABLE_ID + \"2\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_REMOVED_GUEST_FROM_TABLE_SUCCESS \u003d \"Deleted Person: %s from Table: %d\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Name guestName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final int oldTableId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param guestName Name of the guest to delete from the table","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param oldTableId Int ID of the table to delete the guest from","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public DeletePersonFromTableCommand(Name guestName, int oldTableId) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(guestName);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(oldTableId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.guestName \u003d guestName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.oldTableId \u003d oldTableId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josejhkim"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person guestToRemove \u003d model.findPersonByName(guestName); // throws CommandException","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            model.deletePersonFromTableById(guestToRemove, oldTableId); // throws CommandException","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_REMOVED_GUEST_FROM_TABLE_SUCCESS,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                guestToRemove.getName().fullName, oldTableId));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"josejhkim"},"content":"        } catch (NoCurrentWeddingException ncwe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(MESSAGE_NO_CURRENT_WEDDING);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeletePersonFromTableCommand)) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeletePersonFromTableCommand otherRemovePersonFromTableCommand \u003d (DeletePersonFromTableCommand) other;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return guestName.equals(otherRemovePersonFromTableCommand.guestName)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u0026\u0026 oldTableId \u003d\u003d otherRemovePersonFromTableCommand.oldTableId;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .add(\"RemovedPerson\", guestName)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .add(\"RemovedTable\", oldTableId)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"-":84,"josejhkim":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_CURRENT_WEDDING;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_TABLE_ID;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableNotFoundException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Deletes a table from the current wedding.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteTableCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTable\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a table from the current wedding.\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: tid/TABLE_ID or just the ID\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" tid/1 or 1\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Table deleted: Table ID %d\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_TABLE_ID \u003d \"Table ID must be a positive integer.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final int tableId;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a DeleteTableCommand to delete the table with the given ID.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param tableId ID of the table to delete","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteTableCommand(int tableId) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.tableId \u003d tableId;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            model.deleteTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josejhkim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, tableId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (TableNotFoundException tnfe) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(String.format(MESSAGE_UNKNOWN_TABLE_ID, tableId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josejhkim"},"content":"        } catch (NoCurrentWeddingException ncwe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(MESSAGE_NO_CURRENT_WEDDING);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteTableCommand","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 tableId \u003d\u003d ((DeleteTableCommand) other).tableId);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"-":50,"josejhkim":7}},{"path":"src/main/java/seedu/address/logic/commands/FilterPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction.TypicalRestriction;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestrictionFilter;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp.Status;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RsvpFilter;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Command to filter guests based on dietary restrictions or RSVP status or None.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FilterPersonsCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"filterPersons\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all people belonging to filtered request.\\n\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"            + \"Please pick at least one of the two categories (Dietary restriction / RSVP) to filter by, with at most\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"            + \" one filter within each category.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"            + \"Parameters: [d/DIETARYRESTRICTION] [r/RSVP]\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/\" + TypicalRestriction.values()[0].toString()","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \" r/\" + Status.values()[0].toString();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the people matching your filter.\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    final Predicate\u003cPerson\u003e dietaryRestrictionFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    final Predicate\u003cPerson\u003e rsvpFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    final Predicate\u003cPerson\u003e combinedPredicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a FilterPersonsCommand with the specified dietary and RSVP filters.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * At least one of the filters must be non-null.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param dietaryFilter the dietary restriction filter to apply; may be null","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param rsvpFilter the RSVP filter to apply; may be null","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FilterPersonsCommand(DietaryRestrictionFilter dietaryFilter, RsvpFilter rsvpFilter) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"        assert dietaryFilter !\u003d null || rsvpFilter !\u003d null : \"At least one filter must be provided.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.dietaryRestrictionFilter \u003d dietaryFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.rsvpFilter \u003d rsvpFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        Predicate\u003cPerson\u003e predicate \u003d PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (dietaryFilter !\u003d null) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            predicate \u003d predicate.and(dietaryFilter);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (rsvpFilter !\u003d null) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            predicate \u003d predicate.and(rsvpFilter);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.combinedPredicate \u003d predicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(combinedPredicate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof FilterPersonsCommand)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FilterPersonsCommand otherFilterPersonsCommand \u003d (FilterPersonsCommand) other;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return java.util.Objects.equals(this.dietaryRestrictionFilter,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                otherFilterPersonsCommand.dietaryRestrictionFilter)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u0026\u0026 java.util.Objects.equals(this.rsvpFilter, otherFilterPersonsCommand.rsvpFilter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a string representation of the FilterPersonsCommand.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return The string representation.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        .add(\"combined predicate\", combinedPredicate)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        .toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":6,"-":87}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":" * Lists all persons in the currently selected wedding to the user.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/SetWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_WEDDING_NAME;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.exceptions.WeddingNotFoundException;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Sets a new wedding in the model.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SetWeddingCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"setWedding\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the current wedding.\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josejhkim"},"content":"            + \"Parameters: n/NAME\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josejhkim"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/John and Jane\u0027s Wedding\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Current wedding set to: %1$s\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josejhkim"},"content":"    public static final String MESSAGE_INVALID_NAME \u003d \"Wedding name cannot be empty or just spaces.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String weddingName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Instantiates the command with the given wedding name.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The wedding name should contain a non-empty string.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param weddingName","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public SetWeddingCommand(String weddingName) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(weddingName, \"Wedding name cannot be null\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (weddingName.trim().isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_INVALID_NAME);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.weddingName \u003d weddingName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josejhkim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Wedding existingWedding \u003d model.findWeddingByName(weddingName.strip());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            model.setCurrentWedding(existingWedding);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, existingWedding.getName()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (WeddingNotFoundException wnfe) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josejhkim"},"content":"            throw new CommandException(String.format(MESSAGE_UNKNOWN_WEDDING_NAME, weddingName));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof SetWeddingCommand","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 weddingName.equals(((SetWeddingCommand) other).weddingName));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":53,"josejhkim":7}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTableCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE_ID;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteTableCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteTableCommand object.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteTableCommandParser implements Parser\u003cDeleteTableCommand\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTableCommand","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * and returns a DeleteTableCommand object for execution.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to expected format.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteTableCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TABLE_ID);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Handle prefixed format: deleteTable tableId/2","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TABLE_ID).isPresent()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return parseWithPrefix(argMultimap);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // Handle raw format: deleteTable 2","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] tokens \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (tokens.length !\u003d 1) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \"Too many arguments provided.\\n\\n\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            + \"Usage: \" + DeleteTableCommand.MESSAGE_USAGE","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josejhkim"},"content":"        int tableId \u003d ParserUtil.parseTableId(tokens[0]);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new DeleteTableCommand(tableId);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private DeleteTableCommand parseWithPrefix(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josejhkim"},"content":"        int tableId \u003d ParserUtil.parseTableId(argMultimap.getValue(PREFIX_TABLE_ID).get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new DeleteTableCommand(tableId);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"-":43,"josejhkim":2}},{"path":"src/main/java/seedu/address/logic/parser/FilterPersonsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIETARY_RESTRICTION;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FilterPersonsCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestrictionFilter;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RsvpFilter;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FilterPersonsCommand object.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FilterPersonsCommandParser implements Parser\u003cFilterPersonsCommand\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FilterPersonsCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        DietaryRestrictionFilter dietaryRestrictionFilter \u003d null;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        RsvpFilter rsvpFilter \u003d null;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DIETARY_RESTRICTION, PREFIX_RSVP);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        if (!anyPrefixesPresent(argumentMultimap, PREFIX_DIETARY_RESTRICTION, PREFIX_RSVP)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"                || prefixHasMultipleOccurrences(argumentMultimap, PREFIX_DIETARY_RESTRICTION, PREFIX_RSVP)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"                    FilterPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (argumentMultimap.getValue(PREFIX_DIETARY_RESTRICTION).isPresent()) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            DietaryRestriction dietaryRestriction \u003d ParserUtil.parseDietaryRestriction(","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    argumentMultimap.getValue(PREFIX_DIETARY_RESTRICTION).get());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            dietaryRestrictionFilter \u003d new DietaryRestrictionFilter(dietaryRestriction);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (argumentMultimap.getValue(PREFIX_RSVP).isPresent()) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Rsvp rsvp \u003d ParserUtil.parseRsvp(argumentMultimap.getValue(PREFIX_RSVP).get());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            rsvpFilter \u003d new RsvpFilter(rsvp);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new FilterPersonsCommand(dietaryRestrictionFilter, rsvpFilter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Checks if at least one prefix are present in the user input.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param argumentMultimap The map of prefixes to their corresponding argument values.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param prefixes The prefixes to check for.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return true if any required prefixes are present, false otherwise.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"     * Checks if any prefix has more than one occurrence in the argumentMultimap.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"     * @param argumentMultimap The map of prefixes to their argument values.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"     * @param prefixes The prefixes to check.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"    private static boolean prefixHasMultipleOccurrences(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"                .anyMatch(prefix -\u003e argumentMultimap.getAllValues(prefix).size() \u003e 1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":17,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TABLE_CAPACITY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TABLE_ID;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_WEDDING_NAME;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses a {@code String rsvp} into a {@code RSVP}.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code rsvp} is invalid if the status is not one of the valid statuses.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Rsvp parseRsvp(String rsvp) throws ParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(rsvp);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String trimmedRsvp \u003d rsvp.trim().toUpperCase();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Rsvp.Status status \u003d Rsvp.Status.valueOf(trimmedRsvp);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return new Rsvp(status);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Invalid RSVP status: \u0027\" + rsvp + \"\u0027. It should be Yes, No or No_Response. (case \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + \"insensitive)\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String dietaryRestriction} into a {@code DietaryRestriction}.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Tries to parse the dietary restriction as a typical restriction first.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * If not possible, treats it as a custom restriction.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static DietaryRestriction parseDietaryRestriction(String dietaryRestriction) throws ParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(dietaryRestriction);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Trim the restriction to be a typical restriction like halal etc...","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String trimmedTypicalRestriction \u003d dietaryRestriction.trim().toUpperCase();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            // See if it\u0027s a typical restriction","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            DietaryRestriction.TypicalRestriction typicalRestriction \u003d","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                DietaryRestriction.TypicalRestriction.valueOf(trimmedTypicalRestriction);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return new DietaryRestriction(typicalRestriction);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            // If it\u0027s not a typical one, treat it as a custom restriction","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Invalid dietary restriction: \" + dietaryRestriction + \". \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + \"Possible values are: \" + DietaryRestriction.getPossibleValues());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Parses a {@code String tableId} into a {@code int tableId}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @param tableId A string representation of the table id","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @return An integer representation of the table id","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws ParseException","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static int parseTableId(String tableId) throws ParseException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            int id \u003d Integer.parseInt(tableId.trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"josejhkim"},"content":"            if (id \u003c 1 || id \u003e 100) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"josejhkim"},"content":"                throw new ParseException(MESSAGE_INVALID_TABLE_ID);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return id;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"josejhkim"},"content":"            throw new ParseException(MESSAGE_INVALID_TABLE_ID);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses a {@code String weddingName} and returns the trimmed version.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be removed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @param weddingName The input wedding name string to be parsed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @return A trimmed {@code String} representing the wedding name.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws ParseException if the input is {@code null}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static String parseWeddingName(String weddingName) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String trimmedWeddingName \u003d weddingName.trim();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"josejhkim"},"content":"        if (trimmedWeddingName.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"josejhkim"},"content":"            throw new ParseException(MESSAGE_INVALID_WEDDING_NAME);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return trimmedWeddingName;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Parses a string into a positive integer representing table capacity.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * @param capStr The string containing the capacity to be parsed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @return The parsed capacity as a positive integer.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws ParseException If the string is not a valid integer or the value is not positive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static int parseCapacity(String capStr) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            int cap \u003d Integer.parseInt(capStr.trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"josejhkim"},"content":"            if (cap \u003c 1 || cap \u003e 100) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"josejhkim"},"content":"                throw new ParseException(MESSAGE_INVALID_TABLE_CAPACITY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return cap;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"josejhkim"},"content":"            throw new ParseException(MESSAGE_INVALID_TABLE_CAPACITY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"-":212,"josejhkim":13}},{"path":"src/main/java/seedu/address/logic/parser/SetWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SetWeddingCommand;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new SetWeddingCommand object","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SetWeddingCommandParser implements Parser\u003cSetWeddingCommand\u003e {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public SetWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josejhkim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josejhkim"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josejhkim"},"content":"        if (!argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josejhkim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josejhkim"},"content":"        String weddingName \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josejhkim"},"content":"        return new SetWeddingCommand(weddingName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":14,"josejhkim":11}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.table.UniqueTableList;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.UniqueWeddingList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.exceptions.WeddingNotFoundException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Manages the list of weddings in the address book.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Wedding currentWedding;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes the address book with a default wedding and sets it as the current wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UniqueWeddingList uniqueWeddingList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UniquePersonList personList;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UniqueTableList tableList;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes the AddressBook object","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * with blank UniqueLists","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        personList \u003d new UniquePersonList();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tableList \u003d new UniqueTableList();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param toBeCopied the ReadOnlyAddressBook to copy from","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ObservableList\u003cWedding\u003e getWeddingList() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this.uniqueWeddingList.asUnmodifiableObservableList();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param newData the new data to reset to","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"josejhkim"},"content":"        if (hasCurrentWedding()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"josejhkim"},"content":"            deleteCurrentWedding();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"josejhkim"},"content":"        uniqueWeddingList.clear();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"josejhkim"},"content":"        personList.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"josejhkim"},"content":"        tableList.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Add all weddings from newData, ensuring no duplicates","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Wedding wedding : newData.getWeddingList()) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (!hasWedding(wedding)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Wedding toBeAdded \u003d new Wedding(wedding);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"josejhkim"},"content":"                uniqueWeddingList.addWedding(toBeAdded);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Set current wedding if available","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (newData.hasCurrentWedding() \u0026\u0026 !uniqueWeddingList.asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"josejhkim"},"content":"            Wedding newCurrentWedding \u003d newData.getCurrentWedding();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            setCurrentWeddingByName(newData.getCurrentWedding().getName());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"josejhkim"},"content":"            personList.loadData(newCurrentWedding.getUniquePersonList());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"josejhkim"},"content":"            tableList.loadData(newCurrentWedding.getTableList());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Weddings","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds a wedding to the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The wedding must not already exist in the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param wedding The wedding to be added","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addWedding(Wedding wedding) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.uniqueWeddingList.addWedding(wedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Creates a new wedding with the given name and adds it to the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param weddingName The name of the wedding to be created","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void createWeddingWithName(String weddingName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Wedding newWedding \u003d new Wedding(weddingName);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addWedding(newWedding);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Sets the active wedding in the address book. Replaces any existing wedding.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setCurrentWedding(Wedding wedding) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (this.uniqueWeddingList.findWeddingByName(wedding.getName()) \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new WeddingNotFoundException();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.currentWedding \u003d wedding;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        personList.loadData(wedding.getUniquePersonList());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        tableList.loadData(wedding.getTableList());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the current wedding by its name.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @param weddingName the name of the wedding to set as current","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setCurrentWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(weddingName);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Wedding weddingWithMatchingName \u003d uniqueWeddingList.findWeddingByName(weddingName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        setCurrentWedding(weddingWithMatchingName);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Retrieves the currently active wedding.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @return the current Wedding","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public Wedding getCurrentWedding() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"josejhkim"},"content":"        if (currentWedding \u003d\u003d null) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"josejhkim"},"content":"            throw new NoCurrentWeddingException();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return currentWedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Wedding getWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return this.uniqueWeddingList.findWeddingByName(weddingName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Deletes the specified wedding from the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * If there is more than one wedding and the deleted wedding is the current wedding,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * another wedding will be set as current.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * If there is only one wedding, the current wedding will be set to null after deletion.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @param wedding The wedding to be deleted","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void deleteWedding(Wedding wedding) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!uniqueWeddingList.hasWedding(wedding)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new WeddingNotFoundException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        uniqueWeddingList.deleteWedding(wedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (wedding \u003d\u003d currentWedding) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            personList.clear();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            tableList.clear();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            currentWedding \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Deletes the current wedding from the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Delegates to deleteWedding method with the current wedding as parameter.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void deleteCurrentWedding() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"josejhkim"},"content":"        if (!hasCurrentWedding()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"josejhkim"},"content":"            throw new NoCurrentWeddingException();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        deleteWedding(currentWedding);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Deletes a wedding by its name from the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * First finds the wedding with the matching name, then deletes it.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * If the wedding with the given name is not found, a WeddingNotFoundException will be thrown.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @param weddingName The name of the wedding to be deleted","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @throws WeddingNotFoundException if no wedding with the given name exists","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void deleteWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Wedding weddingWithMatchingName \u003d uniqueWeddingList.findWeddingByName(weddingName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (weddingWithMatchingName \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new WeddingNotFoundException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        deleteWedding(weddingWithMatchingName);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Checks if a wedding currently exists in the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * @return true if a current wedding exists, false otherwise","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public boolean hasCurrentWedding() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return currentWedding !\u003d null;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Checks if a specific wedding exists in the address book.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param wedding the Wedding to check for","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @return true if the wedding exists, false otherwise","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public boolean hasWedding(Wedding wedding) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return uniqueWeddingList.contains(wedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Sets a wedding in the address book.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * @param wedding the Wedding to set","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * @param target the Wedding to be replaced","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void setWedding(Wedding wedding, Wedding target) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        this.uniqueWeddingList.setWedding(wedding, target);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Sets multiple weddings in the address book.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * @param weddings the List of Weddings to set","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void setWeddings(List\u003cWedding\u003e weddings) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        this.uniqueWeddingList.setWeddings(weddings);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Sets multiple weddings from a UniqueWeddingList.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * @param uniqueWeddingList the UniqueWeddingList to set weddings from","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void setWeddings(UniqueWeddingList uniqueWeddingList) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.uniqueWeddingList.setWeddings(uniqueWeddingList);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Persons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * @param person the Person to check for","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * @return true if the person exists, false otherwise","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return personList.contains(person) \u0026\u0026 getCurrentWedding().hasPerson(person);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        if (hasPerson(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"josejhkim"},"content":"        getCurrentWedding().addPerson(person);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        personList.add(person);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * address book. The person identity of {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        getCurrentWedding().setPerson(target, editedPerson);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"josejhkim"},"content":"        personList.setPerson(target, editedPerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"josejhkim"},"content":"        // Since switching tables isn\u0027t allowed with the edit command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"josejhkim"},"content":"        if (target.isSeated()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"josejhkim"},"content":"            int tid \u003d target.getTableId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"josejhkim"},"content":"            Table oldTable \u003d tableList.findTableById(tid);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"josejhkim"},"content":"            oldTable.setPerson(target, editedPerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"josejhkim"},"content":"            tableList.setTable(oldTable, tableList.findTableById(tid));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void deletePerson(Person key) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"josejhkim"},"content":"        requireNonNull(key);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"josejhkim"},"content":"        if (key.isSeated()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"josejhkim"},"content":"            deletePersonFromTable(key, key.getTableId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"josejhkim"},"content":"        getCurrentWedding().deletePerson(new Person(key, -1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        personList.delete(key);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Finds a person by their name.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * @param name the Name of the person to find","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * @return the Person with the matching name","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        return getCurrentWedding().findPersonByName(name);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tables \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * Checks if a table exists in the current wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * @param table the Table to check for","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * @return true if the table exists, false otherwise","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public boolean hasTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        return this.tableList.hasTable(table) \u0026\u0026 getCurrentWedding().hasTable(table);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"     * Checks if a table exists by its ID.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"     * @param tableId the ID of the table to check for","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * @return true if the table exists, false otherwise","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"    public boolean hasTable(int tableId) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return this.tableList.hasTableById(tableId) \u0026\u0026 getCurrentWedding().hasTableById(tableId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * Adds a table to the current wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * @param table the Table to add","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public void addTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        getCurrentWedding().addTable(table);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"josejhkim"},"content":"        tableList.addTable(table);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * Deletes a specified table from the current wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * @param table the Table to delete","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public void deleteTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"        for (Person p : table.getAllPersons()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"            Person removedFromTable \u003d new Person(p, -1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"josejhkim"},"content":"            getCurrentWedding().setPerson(p, removedFromTable);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"            this.personList.setPerson(p, removedFromTable);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"        getCurrentWedding().deleteTable(table);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"josejhkim"},"content":"        tableList.deleteTable(table);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"     * Deletes a table from the current wedding by its ID.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"     * @param tableId the ID of the table to delete","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"    public void deleteTableById(int tableId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"        Table tableWithId \u003d getTableById(tableId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"        deleteTable(tableWithId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"     * Sets a table in the current wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * @param target the Table to be replaced","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * @param editedTable the new Table to replace the target","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void setTable(Table target, Table editedTable) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"        requireNonNull(editedTable);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"        getCurrentWedding().setTable(target, editedTable);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"josejhkim"},"content":"        tableList.setTable(target, editedTable);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * Adds a person to a specified table.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * @param p the Person to add","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"     * @param table the Table to add the person to","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"    public void addPersonToTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"        int tableId \u003d table.getTableId();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"josejhkim"},"content":"        int oldTableId \u003d p.getTableId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"        getCurrentWedding().addPersonToTable(p, table);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        personList.setPerson(p, new Person(p, tableId));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"        tableList.setTable(table, getCurrentWedding().findTableById(tableId));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"josejhkim"},"content":"        if (oldTableId \u003e -1) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"josejhkim"},"content":"            tableList.setTable(getCurrentWedding().findTableById(oldTableId),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"josejhkim"},"content":"                getCurrentWedding().findTableById(oldTableId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"     * Adds a person to a specified table by its ID.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"     * @param p the Person to add","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"     * @param tableId the ID of the Table to add the person to","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void addPersonToTableById(Person p, int tableId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"        Table t \u003d this.tableList.findTableById(tableId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"        addPersonToTable(p, t);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"     * Deletes a person from a specified table.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * @param p the Person to delete","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * @param table the Table to delete the person from","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"        this.getCurrentWedding().deletePersonFromTable(p, table);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"josejhkim"},"content":"        personList.setPerson(p, new Person(p, -1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"josejhkim"},"content":"        tableList.setTable(table, this.getCurrentWedding().findTableById(table.getTableId()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"     * Deletes a person from a specified table by its ID.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"     * @param p the Person to delete","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"     * @param tableId the ID of the Table to delete the person from","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable(Person p, int tableId) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"        Table tableWithId \u003d this.getCurrentWedding().findTableById(tableId);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"        deletePersonFromTable(p, tableWithId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"     * Retrieves a table by its ID.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"     * @param tableId the ID of the table to retrieve","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"     * @return the Table with the matching ID","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"    public Table getTableById(int tableId) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"        return getCurrentWedding().findTableById(tableId);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"weddings\", uniqueWeddingList).add(\"current wedding\", currentWedding)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"        return this.personList.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTable\u003e getTableList() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"        return this.tableList.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"        return uniqueWeddingList.equals(otherAddressBook.uniqueWeddingList);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"        return uniqueWeddingList.hashCode();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":452,"josejhkim":51}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.beans.PropertyChangeListener;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.beans.PropertyChangeSupport;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableFullException;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableNotFoundException;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.exceptions.WeddingNotFoundException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cTable\u003e filteredTables;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final PropertyChangeSupport pcs \u003d new PropertyChangeSupport(this);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.filteredTables \u003d new FilteredList\u003c\u003e(this.addressBook.getTableList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a blank new ModelManager.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.filteredTables \u003d new FilteredList\u003c\u003e(this.addressBook.getTableList());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTable\u003e getFilteredTableList() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return filteredTables;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void updateFilteredTableList(Predicate\u003cTable\u003e predicate) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        filteredTables.setPredicate(predicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Persons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        addressBook.deletePerson(target);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public Person findPersonByName(Name name) throws CommandException {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return addressBook.findPersonByName(name);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Person \u0027\" + name.fullName + \"\u0027 not found in the guest list.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tables \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void addTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        addressBook.addTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void deleteTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        addressBook.deleteTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void deleteTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        addressBook.deleteTableById(tableId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void setTable(Table target, Table editedTable) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedTable);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        addressBook.setTable(target, editedTable);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public boolean hasTable(int tableId) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return addressBook.hasTable(tableId);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void addPersonToTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        addressBook.addPersonToTable(p, table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void addPersonToTableById(Person p, int tableId) throws CommandException {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            addressBook.addPersonToTableById(p, tableId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (TableNotFoundException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Table with ID \" + tableId + \" does not exist.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (TableFullException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Table with ID \" + tableId + \" is full.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        addressBook.deletePersonFromTable(p, table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void deletePersonFromTableById(Person person, int tableId) throws CommandException {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            Table table \u003d findTableById(tableId);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            table.findPerson(person); // throws PersonNotFoundException if not in table","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            addressBook.deletePersonFromTable(person, table);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } catch (TableNotFoundException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(\"Table with ID %d does not exist.\", tableId));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(\"Person \u0027%s\u0027 is not assigned to Table %d.\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    person.getName().fullName, tableId));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public Table findTableById(int tableId) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return addressBook.getTableById(tableId);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public boolean hasCurrentWedding() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return addressBook.hasCurrentWedding();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wedding \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Adds a Wedding to the system. Only one Wedding can exist at a time.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void addWedding(Wedding wedding) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        //        if (addressBook.getWedding() !\u003d null) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        //            throw new IllegalStateException(\"A wedding already exists. Cannot create another.\");","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        //        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        addressBook.addWedding(wedding);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void deleteCurrentWedding() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        addressBook.deleteCurrentWedding();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void deleteWedding(Wedding wedding) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        addressBook.deleteWedding(wedding);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void deleteWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        addressBook.deleteWeddingByName(weddingName);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Returns the current Wedding.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public Wedding getCurrentWedding() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        return addressBook.getCurrentWedding();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public Wedding findWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return addressBook.getWeddingByName(weddingName);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void setCurrentWedding(Wedding wedding) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"josejhkim"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"            Wedding oldWedding \u003d addressBook.getCurrentWedding();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"            addressBook.setCurrentWedding(wedding);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            pcs.firePropertyChange(\"currentWedding\", oldWedding, wedding);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"josejhkim"},"content":"        } catch (NoCurrentWeddingException ncwe) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"josejhkim"},"content":"            addressBook.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"josejhkim"},"content":"            pcs.firePropertyChange(\"currentWedding\", null, wedding);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void setCurrentWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"josejhkim"},"content":"        requireNonNull(weddingName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"josejhkim"},"content":"        Wedding weddingWithName \u003d findWeddingByName(weddingName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"josejhkim"},"content":"        setCurrentWedding(weddingWithName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    public void addPropertyChangeListener(PropertyChangeListener listener) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        this.pcs.addPropertyChangeListener(listener);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void removePropertyChangeListener(PropertyChangeListener listener) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"        this.pcs.removePropertyChangeListener(listener);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public boolean hasWeddingWithName(String weddingName) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"            Wedding weddingWithName \u003d findWeddingByName(weddingName);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        } catch (WeddingNotFoundException wnfe) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Other Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":337,"josejhkim":10}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josejhkim"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"weddinghero.json\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":87,"josejhkim":1}},{"path":"src/main/java/seedu/address/model/table/Table.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.table;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableFullException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a seating table in a wedding.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Each table has a unique ID, a seating capacity, and a list of assigned persons.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * This class is immutable, meaning once a table is created, its properties cannot be modified.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public final class Table {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String ID_CONSTRAINTS \u003d \"The table ID should be a positive integer\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String CAPACITY_CONSTRAINTS \u003d \"The table capacity should be a positive integer\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josejhkim"},"content":"    public static final int MAX_CAPACITY \u003d 100;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /** The unique identifier for the table. */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final int tableId;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /** The maximum seating capacity of the table. */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final int capacity;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a new {@code Table} with the given ID and capacity.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * This constructor initializes an empty person list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param tableId  The unique identifier for the table. Must be a positive integer.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param capacity The seating capacity of the table. Must be a positive integer.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code tableId} or {@code capacity} is not positive.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Table(int tableId, int capacity) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josejhkim"},"content":"        if (tableId \u003c 1 || tableId \u003e 100) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josejhkim"},"content":"            throw new IllegalArgumentException(Messages.MESSAGE_INVALID_TABLE_ID);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josejhkim"},"content":"        if (capacity \u003c 1 || capacity \u003e 100) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josejhkim"},"content":"            throw new IllegalArgumentException(Messages.MESSAGE_INVALID_TABLE_CAPACITY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.tableId \u003d tableId;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Constructs a new {@code Table} with the given ID, capacity, and assigned persons.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param tableId The unique identifier for the table. Must be a positive integer.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param capacity The seating capacity of the table. Must be a positive integer.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param uniquePersonList The list of persons assigned to this table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code tableId} or {@code capacity} is not positive.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Table(int tableId, int capacity, UniquePersonList uniquePersonList) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tableId \u003c\u003d 0) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(ID_CONSTRAINTS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (capacity \u003c\u003d 0) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(CAPACITY_CONSTRAINTS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.tableId \u003d tableId;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.uniquePersonList \u003d new UniquePersonList(uniquePersonList);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Copy constructor that creates a deep copy of the provided table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * All persons in the original table will be copied and assigned to this new table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param t The table to be copied. Cannot be null.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Table(Table t) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.tableId \u003d t.tableId;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.capacity \u003d t.capacity;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.uniquePersonList \u003d new UniquePersonList(t.uniquePersonList);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns the unique identifier for this table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @return The table ID.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int getTableId() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return tableId;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns the seating capacity of this table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @return The table\u0027s capacity.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int getCapacity() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return capacity;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Adds the given person to this table.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param p Person to add to this table","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person newPerson \u003d new Person(p, tableId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (uniquePersonList.contains(p)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            setPerson(p, newPerson);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (getSize() \u003d\u003d getCapacity()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                throw new TableFullException();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            this.uniquePersonList.add(p);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Deletes the given person from this table","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * if the person exists in this table.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @param p Person to delete from this table","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void deletePerson(Person p) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person newP \u003d new Person(p);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        boolean askfjlaksd \u003d uniquePersonList.contains(p);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        boolean aslkfjalskd2 \u003d askfjlaksd;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!uniquePersonList.contains(p)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Do a name check just in case","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        this.uniquePersonList.delete(p);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Finds the given person from this table\u0027s person list","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @param person","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @return The resulting person from this table\u0027s person list if exists","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public Person findPerson(Person person) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return this.uniquePersonList.findPersonByName(person.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Finds the person with the given name from this table\u0027s person list","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param name","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @return The resulting person from this table\u0027s person list if exists","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Person findPersonByName(Name name) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return this.uniquePersonList.findPersonByName(name);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Checks whether or not a person with the given name sits at this table.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param name","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @return Boolean value for whether a person with the given name sits here","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean hasPersonByName(Name name) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            findPersonByName(name);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getAllPersons() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return this.uniquePersonList.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(target, editedPerson);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with the contents of the given UniquePersonList.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @param replacement The UniquePersonList containing the replacement persons","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        this.uniquePersonList.setPersons(replacement);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        this.uniquePersonList.setPersons(persons);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public int getSize() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return this.uniquePersonList.size();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Returns an immutable list of persons\u0027 names assigned to this table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @return A list of all persons\u0027 names assigned to the table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public List\u003cName\u003e getAllPersonsNames() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return this.uniquePersonList.getAllPersonsNames();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Checks whether this table is the same as another table based on the table ID.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @param otherTable The table to compare.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @return {@code true} if both tables have the same ID, otherwise {@code false}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public boolean isSameTable(Table otherTable) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return otherTable !\u003d null \u0026\u0026 this.tableId \u003d\u003d otherTable.tableId \u0026\u0026 this.capacity \u003d\u003d otherTable.capacity;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Returns a string representation of this table, showing its ID, capacity, and assigned person names.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * @return A string representation of the table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return \"Table{ID\u003d\" + tableId + \", Capacity\u003d\" + capacity + \", Person Names\u003d\"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            + uniquePersonList + \"}\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Compares this table to another object for equality.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Two tables are considered equal if they have the same table ID, capacity, and person list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * @param other The object to compare.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @return {@code true} if both tables are equal, otherwise {@code false}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!(other instanceof Table)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Table table \u003d (Table) other;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return tableId \u003d\u003d table.tableId \u0026\u0026 capacity \u003d\u003d table.capacity","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u0026\u0026 uniquePersonList.equals(table.uniquePersonList);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Returns a hash code for this table, based on its ID, capacity, and person list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @return The hash code.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return Objects.hash(tableId, capacity, uniquePersonList);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"-":257,"josejhkim":6}},{"path":"src/main/java/seedu/address/model/table/UniqueTableList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.table;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UniqueList;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.table.exceptions.DuplicateTableException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableNotFoundException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents a unique list of tables in a wedding.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * This class ensures that tables remain unique within the list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * It provides methods for adding, deleting, searching, and managing persons within tables.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * This list does not allow duplicate tables based on {@code Table#isSameTable(Table)}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniqueTableList implements Iterable\u003cTable\u003e, UniqueList\u003cTable\u003e {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cTable\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cTable\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new empty UniqueTableList.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UniqueTableList() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new UniqueTableList containing copies of the Tables in the given list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param other The UniqueTableList to copy tables from","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public UniqueTableList(UniqueTableList other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(other);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Table t : other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            addTable(new Table(t));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Checks if a table with the same identity as {@code toCheck} exists in the list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param toCheck The table to check.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return {@code true} if the table exists, otherwise {@code false}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean contains(Table toCheck) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTable);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an iterator over the tables in this list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @return An iterator over tables in this list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Iterator\u003cTable\u003e iterator() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds a new table to the list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Ensures that the table does not already exist in the list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param toAdd The table to add.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if a table with the same ID already exists.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void addTable(Table toAdd) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (hasTableById(toAdd.getTableId())) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"josejhkim"},"content":"            throw new DuplicateTableException();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Deletes a table from the list by its ID.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to be deleted.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException if the table does not exist.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void deleteTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Table table \u003d findTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (table !\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            internalList.remove(table);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        throw new TableNotFoundException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Deletes a table from the list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param table The table to be deleted.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deleteTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.remove(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Finds a table in the list by its ID.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to find.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return An {@code Optional} containing the table if found, otherwise an empty {@code Optional}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Table findTableById(int tableId) throws TableNotFoundException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return internalList.stream().filter(table -\u003e table.getTableId() \u003d\u003d tableId)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .findFirst().get();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException nsee) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Finds a table in the list with the same table ID as the provided table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @param table The table containing the ID to find.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @return The table if found, otherwise null.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public Table findTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return internalList.stream().filter(t -\u003e t.getTableId() \u003d\u003d table.getTableId())","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .findFirst().get();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException nsee) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns whether the given table is within this table list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param table to check if it exists","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @return boolean value for whether the given table exists in the list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean hasTable(Table table) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return internalList.contains(table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Checks whether a table with the given ID exists in the list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to check.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @return {@code true} if the table exists, otherwise {@code false}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean hasTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(table -\u003e table.getTableId() \u003d\u003d tableId);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Assigns a person to a table based on the table id.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @param tableId  The ID of the table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @param person The new person to be added in this table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException if the table does not exist.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void addPersonToTableById(Person person, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireAllNonNull(tableId, person);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Table table \u003d findTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (table \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        addPersonToTable(person, table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Assigns a person to a specified table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Updates the internal list as adding a person to a table should techincally","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * \u0027update\u0027 the table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @param table The table to assign the person to.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @param person The person to be assigned.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException if the table does not exist.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void addPersonToTable(Person person, Table table) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireAllNonNull(table, person);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (!hasTable(table)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Table updatedTable \u003d new Table(table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        updatedTable.addPerson(person);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        internalList.set(internalList.indexOf(table), updatedTable);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Removes a person from a table.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @param tableId  The ID of the table.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @param person  The person to be added.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException if the table does not exist.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void deletePersonFromTableById(Person person, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireAllNonNull(tableId, person);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Table table \u003d findTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (table \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        deletePersonFromTable(person, table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Deletes the given person from the given table","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * if the person exists in the given table.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * @param person to be deleted","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param table to be deleted from","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable(Person person, Table table) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        requireAllNonNull(table, person);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Table tableWithSameId \u003d findTableById(table.getTableId());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(tableWithSameId);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        tableWithSameId.deletePerson(person);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Table updatedTable \u003d new Table(tableWithSameId);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        internalList.set(index, updatedTable);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Sets a target table to an edited table with the same identity.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * The target table must exist in the list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @param target The table to be replaced.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * @param editedTable The edited version of the table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException if the target table is not found.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if the edited table is a duplicate of an existing table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void setTable(Table target, Table editedTable) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedTable);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        Table tableWithSameId \u003d findTableById(target.getTableId());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(tableWithSameId);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw new TableNotFoundException();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (!tableWithSameId.isSameTable(editedTable) \u0026\u0026 contains(editedTable)) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        internalList.set(index, editedTable);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code tables}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * {@code tables} must not contain duplicate persons.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void setTables(List\u003cTable\u003e tables) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        requireAllNonNull(tables);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (!tablesAreUnique(tables)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        internalList.setAll(tables);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Returns the list of tables as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * This ensures that the list cannot be modified externally.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * @return An unmodifiable list of tables.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTable\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniqueTableList)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        UniqueTableList otherUniqueTableList \u003d (UniqueTableList) other;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniqueTableList.internalList);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"     * Returns the number of tables in this list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * @return The number of tables in this list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        return internalList.size();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public Iterable\u003cTable\u003e getListItems() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void clear() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.internalList.clear();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        this.internalUnmodifiableList.clear();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public void loadData(UniqueList\u003cTable\u003e other) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"        this.clear();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"        for (Table t : other.getListItems()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"            this.addTable(t);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * Returns true if {@code tables} contains only unique persons.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    private boolean tablesAreUnique(List\u003cTable\u003e tables) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tables.size() - 1; i++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c tables.size(); j++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"                if (tables.get(i).isSameTable(tables.get(j))) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"-":349,"josejhkim":2}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.VEGETARIAN),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    new Rsvp(Rsvp.Status.NO_RESPONSE), -1),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.VEGETARIAN),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    new Rsvp(Rsvp.Status.YES), -1),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.HALAL), new Rsvp(Rsvp.Status.NO),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                -1),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getTagSet(\"family\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.PEANUTS),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    new Rsvp(Rsvp.Status.YES), -1),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), getTagSet(\"classmates\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.VEGAN),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Rsvp(Rsvp.Status.NO_RESPONSE), -1),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new DietaryRestriction(DietaryRestriction.TypicalRestriction.SHELLFISH),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    new Rsvp(Rsvp.Status.NO), -1) };","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josejhkim"},"content":"        Wedding sampleWedding \u003d new Wedding(\"John and Jane\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"josejhkim"},"content":"        sampleWedding.addTable(new Table(1, 20));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"josejhkim"},"content":"        sampleWedding.addTable(new Table(2, 20));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"josejhkim"},"content":"            sampleWedding.addPerson(samplePerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"josejhkim"},"content":"            sampleWedding.addPersonToTableById(samplePerson, 1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"josejhkim"},"content":"        sampleAb.addWedding(sampleWedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"josejhkim"},"content":"        sampleAb.setCurrentWeddingByName(\"John and Jane\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"-":67,"josejhkim":8}},{"path":"src/main/java/seedu/address/model/wedding/Wedding.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.table.UniqueTableList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableNotFoundException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Wedding in the address book.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Wedding {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniqueTableList tableList; // All tables for seating","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a new {@code Wedding} with the given name.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Initializes empty person and table lists.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name Name of the wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Wedding(String name) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.tableList \u003d new UniqueTableList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a deep copy of the given wedding.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param wedding The wedding to be copied.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Wedding(Wedding wedding) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d wedding.name;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.uniquePersonList \u003d new UniquePersonList(wedding.uniquePersonList);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tableList \u003d new UniqueTableList(wedding.tableList);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the name of the wedding.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return The name of the wedding.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getNameLower() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name.toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the list of unique persons in this wedding.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return The unique person list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public UniquePersonList getUniquePersonList() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return uniquePersonList;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the list of tables in this wedding.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return The unique table list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public UniqueTableList getTableList() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return tableList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Persons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds a person to the wedding\u0027s guest list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param person The person to add.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.add(person);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Removes a person from the wedding\u0027s guest list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param person The person to delete.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void deletePerson(Person person) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.delete(person);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"josejhkim"},"content":"        if (person.isSeated()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"josejhkim"},"content":"            deletePersonFromTableById(person, person.getTableId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the specified person with the edited person.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param target The person to be replaced.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param editedPerson The replacement person.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(target, editedPerson);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Replaces the existing person list with a new one.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param replacement The new person list to replace the existing one.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.uniquePersonList.setPersons(replacement);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Finds a person from the table with the matching name. Throws a PersonNotFoundException if there isn\u0027t any","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @param name Name of the person to find","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @return A Person object with the corresponding name","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Person findPersonByName(Name name) throws PersonNotFoundException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return uniquePersonList.findPersonByName(name);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Checks if the given person exists in the wedding\u0027s guest list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param person The person to check.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @return True if the person exists in the wedding\u0027s guest list, false otherwise.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return uniquePersonList.contains(person);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tables \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Adds a table to the wedding\u0027s seating arrangement.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @param table The table to add.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void addTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.tableList.addTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Removes a table from the wedding\u0027s seating arrangement.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param table The table to delete.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void deleteTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        tableList.deleteTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Removes a table with the specified ID from the wedding\u0027s seating arrangement.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to delete.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void deleteTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Table table \u003d tableList.findTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        deleteTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Finds a table that matches the given table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @param table The table to find.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @return The matching table if found.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public Table findTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return tableList.findTable(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Finds a table with the specified ID.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to find.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @return The table with the matching ID if found.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public Table findTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return tableList.findTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Checks if the given table exists in the wedding\u0027s seating arrangement.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @param table The table to check.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @return True if the table exists in the wedding\u0027s seating arrangement, false otherwise.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean hasTable(Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return tableList.contains(table);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Checks if a table with the specified ID exists in the wedding\u0027s seating arrangement.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to check.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @return True if a table with the specified ID exists, false otherwise.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean hasTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return tableList.hasTableById(tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Replaces the specified table with the edited table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @param target The table to be replaced.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @param editedPerson The replacement table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void setTable(Table target, Table editedPerson) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        tableList.setTable(target, editedPerson);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Assigns a person to a specific table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @param p The person to be assigned.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * @param table The table to assign the person to.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void addPersonToTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (!hasPerson(p)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (p.isSeated()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            deletePersonFromTableById(p, p.getTableId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Person seatedPerson \u003d new Person(p, table.getTableId());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        tableList.addPersonToTable(seatedPerson, table);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        this.uniquePersonList.setPerson(p, seatedPerson);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Assigns a person to a table with the specified ID.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * @param p The person to be assigned.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to assign the person to.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void addPersonToTableById(Person p, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Table t \u003d findTableById(tableId);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        addPersonToTable(p, t);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Removes a person from a specific table.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * @param p The person to be removed.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @param table The table to remove the person from.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException If the table does not exist.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable(Person p, Table table) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (!hasPerson(p)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        tableList.deletePersonFromTable(p, table);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.uniquePersonList.setPerson(p, new Person(p, -1));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Removes a person from a table with the specified ID.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @param p The person to be removed.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * @param tableId The ID of the table to remove the person from.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * @throws TableNotFoundException If no table with the specified ID exists.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void deletePersonFromTableById(Person p, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        tableList.deletePersonFromTableById(p, tableId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * Checks if two weddings are equal.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * @return True if equal, false otherwise.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (!(other instanceof Wedding)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Wedding otherWedding \u003d (Wedding) other;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        String weddingNameLower \u003d name.toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"        String otherWeddingNameLower \u003d otherWedding.name.toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return weddingNameLower.equals(otherWeddingNameLower)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"                \u0026\u0026 uniquePersonList.equals(otherWedding.uniquePersonList)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                \u0026\u0026 tableList.equals(otherWedding.tableList);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * Returns the hash code for the wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"     * @return Hash code integer.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        return Objects.hash(name, uniquePersonList, tableList);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * Returns a string representation of the wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * @return String describing the wedding.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return \"Wedding{name\u003d\u0027\" + name + \"\u0027, people\u003d \" + uniquePersonList + \u0027}\u0027;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Checks if this wedding is the same as another wedding. Two weddings are considered the same if they have the same","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * name.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * @param otherWedding The wedding to compare with.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * @return true if both weddings have the same name, false otherwise.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public boolean isSameWedding(Wedding otherWedding) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        if (otherWedding \u003d\u003d this) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        return otherWedding !\u003d null \u0026\u0026 otherWedding.getNameLower().equals(getNameLower());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":333,"josejhkim":3}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.beans.PropertyChangeListener;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"john and jane\"); // Create a new wedding","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding); // Set the current wedding","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(model);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson),","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson).toString(), model","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .getCurrentWedding().getUniquePersonList().toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(model));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noWedding_throwsCommandException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model \u003d new ModelStubWithoutWedding();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"josejhkim"},"content":"            Messages.MESSAGE_NO_CURRENT_WEDDING, () -\u003e addPersonCommand.execute(model));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private Wedding currentWedding;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Person findPersonByName(Name name) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void addTable(Table table) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void deleteTable(Table table) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void deleteTableById(int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void addPersonToTableById(Person p, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void addPersonToTable(Person p, Table table) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasTable(int id) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void deletePersonFromTableById(Person p, int tableId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void deletePersonFromTable(Person p, Table table) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setTable(Table target, Table editedTable) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Table findTableById(int tableId) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void deleteCurrentWedding() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public void deleteWedding(Wedding wedding) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void deleteWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setCurrentWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void setCurrentWedding(Wedding wedding) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.currentWedding \u003d wedding;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public ObservableList\u003cTable\u003e getFilteredTableList() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public void updateFilteredTableList(Predicate\u003cTable\u003e predicate) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public void addWedding(Wedding wedding) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public Wedding getCurrentWedding() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return currentWedding;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public Wedding findWeddingByName(String weddingName) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public boolean hasWeddingWithName(String weddingName) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public boolean hasCurrentWedding() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public void addPropertyChangeListener(PropertyChangeListener listener) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public void removePropertyChangeListener(PropertyChangeListener listener) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"            Wedding addingWedding \u003d new Wedding(\"john and jane\");","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"            addingWedding.addPerson(this.person); // Ensure a wedding is set","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"            setCurrentWedding(addingWedding); // Ensure a wedding is set","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"            if (hasPerson(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"                throw new DuplicatePersonException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"            getCurrentWedding().addPerson(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"            setCurrentWedding(new Wedding(\"john and jane\")); // Ensure a wedding is set","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"            getCurrentWedding().addPerson(person);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"    private class ModelStubWithoutWedding extends ModelStub {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"        private Wedding currentWedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"        private final Person person \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"            if (currentWedding \u003d\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"                throw new NoCurrentWeddingException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"            if (hasPerson(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"                throw new DuplicatePersonException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public void setCurrentWedding(Wedding wedding) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"            this.currentWedding \u003d wedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        public Wedding getCurrentWedding() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"            return currentWedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"        public boolean hasCurrentWedding() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"            return currentWedding !\u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"-":409,"josejhkim":2}},{"path":"src/test/java/seedu/address/logic/commands/AddTableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddTableCommandTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_noWeddingSet_throwsCommandException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(1, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josejhkim"},"content":"        assertEquals(Messages.MESSAGE_NO_CURRENT_WEDDING, exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_duplicateTableId_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Test Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        model.addTable(new Table(1, 6)); // add initial table","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(1, 8); // duplicate ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddTableCommand.MESSAGE_DUPLICATE_TABLE, 1), exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidCapacity_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Test Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(2, -5); // invalid capacity","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"josejhkim"},"content":"        assertEquals(\"Please input a number between 1 and 100, inclusive, for the table capacity!\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validInput_addsTableSuccessfully() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Valid Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(3, 10);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddTableCommand.MESSAGE_SUCCESS, 3, 10), result.getFeedbackToUser());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddTableCommand cmd1 \u003d new AddTableCommand(1, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddTableCommand cmd2 \u003d new AddTableCommand(1, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(cmd1, cmd2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals_differentValues_returnsFalse() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddTableCommand cmd1 \u003d new AddTableCommand(1, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddTableCommand cmd2 \u003d new AddTableCommand(2, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddTableCommand cmd3 \u003d new AddTableCommand(1, 4);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert (!cmd1.equals(cmd2));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assert (!cmd1.equals(cmd3));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_tableIdZero_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Zero ID Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(0, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"josejhkim"},"content":"        assertEquals(\"Please input a number between 1 and 100, inclusive, for the table id!\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_negativeTableId_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Negative ID Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(-2, 6);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"josejhkim"},"content":"        assertEquals(\"Please input a number between 1 and 100, inclusive, for the table id!\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_zeroCapacity_throwsCommandException() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Zero Capacity Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddTableCommand command \u003d new AddTableCommand(4, 0);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"josejhkim"},"content":"        assertEquals(\"Please input a number between 1 and 100, inclusive, for the table capacity!\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":117,"josejhkim":6}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josejhkim"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_TABLE_ID;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.table.Table;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Unit tests for DeleteTableCommand.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteTableCommandTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_noWeddingSet_throwsCommandException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        DeleteTableCommand command \u003d new DeleteTableCommand(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josejhkim"},"content":"        assertEquals(Messages.MESSAGE_NO_CURRENT_WEDDING, exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_invalidTableId_throwsCommandException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Test Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        DeleteTableCommand command \u003d new DeleteTableCommand(-2); // invalid table ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josejhkim"},"content":"        assertEquals(String.format(MESSAGE_UNKNOWN_TABLE_ID, -2), exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_tableNotFound_throwsCommandException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Test Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteTableCommand command \u003d new DeleteTableCommand(10); // table not added","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"josejhkim"},"content":"        assertEquals(String.format(Messages.MESSAGE_UNKNOWN_TABLE_ID, 10), exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_validTableId_deletesSuccessfully() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(\"Test Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(wedding);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Table table \u003d new Table(1, 5);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addTable(table);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DeleteTableCommand command \u003d new DeleteTableCommand(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(String.format(DeleteTableCommand.MESSAGE_SUCCESS, 1), result.getFeedbackToUser());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteTableCommand cmd1 \u003d new DeleteTableCommand(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteTableCommand cmd2 \u003d new DeleteTableCommand(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(cmd1, cmd2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals_differentValues_returnsFalse() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteTableCommand cmd1 \u003d new DeleteTableCommand(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteTableCommand cmd2 \u003d new DeleteTableCommand(2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert (!cmd1.equals(cmd2));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":84,"josejhkim":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.exceptions.NoCurrentWeddingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Unit tests for {@link DeleteWeddingCommand}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteWeddingCommandTest {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.addWedding(new Wedding(\"Test Wedding\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.setCurrentWeddingByName(\"Test Wedding\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_deleteExistingWedding_success() throws CommandException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand command \u003d new DeleteWeddingCommand(\"Test Wedding\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteWeddingCommand.MESSAGE_SUCCESS, \"Test Wedding\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Ensure wedding is deleted","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getAddressBook().getWeddingList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josejhkim"},"content":"        assertThrows(NoCurrentWeddingException.class, () -\u003e model.getAddressBook().getCurrentWedding());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // public void execute_noExistingWedding_throwsCommandException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //     model.setCurrentWedding(null); // Ensure no wedding exists","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //     DeleteWeddingCommand command \u003d new DeleteWeddingCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //     // Expect CommandException because no wedding exists","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //     assertThrows(CommandException.class, () -\u003e command.execute(model),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //             DeleteWeddingCommand.MESSAGE_NO_WEDDING);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":50,"josejhkim":2}},{"path":"src/test/java/seedu/address/logic/commands/FilterPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.DietaryRestriction.TypicalRestriction.EGGS;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.DietaryRestriction.TypicalRestriction.NONE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.DietaryRestriction.TypicalRestriction.VEGAN;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.Rsvp.Status.NO;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.Rsvp.Status.NO_RESPONSE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestrictionFilter;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RsvpFilter;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains unit tests for {@code FilterPersonsCommand}.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * The test structure is modeled after the DietaryRestrictionFilterTest.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class FilterPersonsCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Doesn\u0027t contain rsvp \u003d NO_RESPONSE and dietary_restriction \u003d EGGS","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBook typicalAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager(typicalAddressBook, new UserPrefs());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Model expectedModel \u003d new ModelManager(typicalAddressBook, new UserPrefs());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Predicates","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final DietaryRestrictionFilter veganPredicate \u003d new DietaryRestrictionFilter(new DietaryRestriction(VEGAN));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final DietaryRestrictionFilter nonePredicate \u003d new DietaryRestrictionFilter(new DietaryRestriction(NONE));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final DietaryRestrictionFilter eggPredicate \u003d new DietaryRestrictionFilter(new DietaryRestriction(EGGS));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final RsvpFilter noPredicate \u003d new RsvpFilter(new Rsvp(NO));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final RsvpFilter noResponsePredicate \u003d new RsvpFilter(new Rsvp(NO_RESPONSE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DietaryRestrictionFilter dietaryFilter \u003d new DietaryRestrictionFilter(new DietaryRestriction(VEGAN));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        RsvpFilter rsvpFilter \u003d new RsvpFilter(new Rsvp(NO));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command1 \u003d new FilterPersonsCommand(dietaryFilter, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command2 \u003d new FilterPersonsCommand(dietaryFilter, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command3 \u003d new FilterPersonsCommand(null, rsvpFilter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(command1, command1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values (constructed with the same predicate instance) -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotEquals(1, command1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNotEquals(null, command1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNotEquals(command1, command3);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"    public void execute_bothFiltersNull_throwsAssertionError() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"            new FilterPersonsCommand(null, null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filterOnRsvp_noPersonFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(null, noResponsePredicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(noResponsePredicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(List.of(), model.getFilteredPersonList());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filterOnRsvp_multiplePersonsFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(null, noPredicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(noPredicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(List.of(BENSON, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_filterOnDietaryRestriction_noPersonFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(eggPredicate, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(eggPredicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(List.of(), model.getFilteredPersonList());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_filterOnDietaryRestriction_multiplePersonsFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(veganPredicate, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(veganPredicate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(List.of(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_filterOn2Conditions_noPersonFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(veganPredicate, noPredicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(veganPredicate.and(noPredicate));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(List.of(), model.getFilteredPersonList());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_filterOnDietaryRestrictionAndRsvp_multiplePersonsFound() throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(nonePredicate, noPredicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(nonePredicate.and(noPredicate));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(List.of(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        FilterPersonsCommand command \u003d new FilterPersonsCommand(nonePredicate, noPredicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expected \u003d new ToStringBuilder(command)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"combined predicate\", command.combinedPredicate)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":8,"-":137}},{"path":"src/test/java/seedu/address/logic/commands/SetWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josejhkim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SetWeddingCommandTest {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_setWedding_success() throws Exception {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    //        // No need to set it to null, as the logic already allows setting a new wedding","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //        Wedding currentWedding \u003d new Wedding(\"John and Jane\u0027s Wedding\");","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //        SetWeddingCommand command \u003d new SetWeddingCommand(currentWedding.getName());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    //","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    //        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    //","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    //        assertEquals(String.format(SetWeddingCommand.MESSAGE_SUCCESS, currentWedding.getName()),","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //                result.getFeedbackToUser());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //        // Verify the wedding was set successfully","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //        assertEquals(currentWedding.getName(), model.getCurrentWedding().getName());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_setWedding_failure() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josejhkim"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Wedding existingWedding \u003d new Wedding(\"Existing Wedding\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            model.addWedding(existingWedding);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            model.setCurrentWedding(existingWedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            // Then, attempt to set a **different** wedding, which should fail","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            SetWeddingCommand command \u003d new SetWeddingCommand(\"New Wedding\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josejhkim"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josejhkim"},"content":"            assertEquals(ce.getMessage(), String.format(Messages.MESSAGE_UNKNOWN_WEDDING_NAME, \"New Wedding\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josejhkim"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"-":44,"josejhkim":6}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CreateWeddingCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteWeddingCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FilterPersonsCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"import seedu.address.model.person.RsvpFilter;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_createWedding() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String weddingName \u003d \"John and Jane\u0027s Wedding\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CreateWeddingCommand command \u003d (CreateWeddingCommand) parser.parseCommand(","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            CreateWeddingCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \" + weddingName);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new CreateWeddingCommand(weddingName), command);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_deleteWedding() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand command \u003d (DeleteWeddingCommand) parser.parseCommand(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            DeleteWeddingCommand.COMMAND_WORD + \" n/ Default Wedding\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteWeddingCommand(\"Default Wedding\"), command);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // public void parseCommand_setWedding() throws Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //     String weddingName \u003d \"John and Jane\u0027s Wedding\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //     SetWeddingCommand command \u003d (SetWeddingCommand) parser.parseCommand(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //         SetWeddingCommand.COMMAND_WORD + \" \" + weddingName);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //     assertEquals(new SetWeddingCommand(weddingName), command);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Existing tests..","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_filterPersons() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FilterPersonsCommand expectedCommand \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jonzyyyy"},"content":"                (FilterPersonsCommand) parser.parseCommand(FilterPersonsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jonzyyyy"},"content":"                        + PREFIX_RSVP + Rsvp.Status.NO);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jonzyyyy"},"content":"        RsvpFilter rsvpFilter \u003d new RsvpFilter(new Rsvp(Rsvp.Status.NO));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(new FilterPersonsCommand(null, rsvpFilter), expectedCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":7,"-":136}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTableCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteTableCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteTableCommandParserTest {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final DeleteTableCommandParser parser \u003d new DeleteTableCommandParser();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void parse_validRaw_success() throws Exception {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        DeleteTableCommand command \u003d parser.parse(\"4\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteTableCommand(4), command);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_missingValuePrefixed_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"tid/\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_nonIntegerPrefixed_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"tid/abc\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_negativeIntegerPrefixed_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"tid/-1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josejhkim"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josejhkim"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josejhkim"},"content":"    public void parse_outOfBoundsIntegerPrefixed_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"tid/1000\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josejhkim"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josejhkim"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josejhkim"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josejhkim"},"content":"    public void parse_zeroPrefixed_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"tid/0\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_zeroTableIdRaw_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_negativeTableIdRaw_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-5\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_nonIntegerRaw_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"abc\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_extraArguments_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"2 3\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"-":56,"josejhkim":13}},{"path":"src/test/java/seedu/address/logic/parser/FilterPersonsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIETARY_DESC_AMY;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RSVP_DESC_AMY;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RSVP_DESC_BOB;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FilterPersonsCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction.TypicalRestriction;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestrictionFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp.Status;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RsvpFilter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FilterPersonsCommandParserTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final FilterPersonsCommandParser parser \u003d new FilterPersonsCommandParser();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Rsvp rsvpYes \u003d new Rsvp(Status.YES);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final RsvpFilter rsvpYesFilter \u003d new RsvpFilter(rsvpYes);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final DietaryRestriction dietaryRestrictionNone \u003d new DietaryRestriction(TypicalRestriction.NONE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final DietaryRestrictionFilter dietaryRestrictionFilter \u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new DietaryRestrictionFilter(dietaryRestrictionNone);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"                FilterPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        assertParseFailure(parser, \"n/Alice\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"                        FilterPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    public void parse_multipleRsvp_failure() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        assertParseFailure(parser, RSVP_DESC_BOB + RSVP_DESC_AMY , String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"                        FilterPersonsCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_validRsvpFilter_returnsFilterCommand() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Rsvp filter - r/Yes","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FilterPersonsCommand expectedCommand \u003d new FilterPersonsCommand(null, rsvpYesFilter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, RSVP_DESC_AMY, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"    public void parse_validDietaryRestrictionFilter() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Dietary restriction filter - d/None","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        FilterPersonsCommand expectedCommand \u003d new FilterPersonsCommand(dietaryRestrictionFilter, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, DIETARY_DESC_AMY, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_bothFilter_returnsFilterCommand() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Both filters","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FilterPersonsCommand expectedCommand \u003d new FilterPersonsCommand(dietaryRestrictionFilter, rsvpYesFilter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, DIETARY_DESC_AMY + RSVP_DESC_AMY, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":15,"-":47}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DietaryRestriction;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rsvp;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseRsvp_withValidRsvpYes_returnsEqual() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseRsvp(\"yes\"), new Rsvp(Rsvp.Status.YES));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseRsvp_withValidRsvpNo_returnsEqual() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseRsvp(\"no\"), new Rsvp(Rsvp.Status.NO));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseRsvp_withValidRsvpNoResponse_returnsEqual() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseRsvp(\"no_response\"), new Rsvp(Rsvp.Status.NO_RESPONSE));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseRsvp_withInvalidRsvp_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRsvp(\"maybe\"));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseDietaryRestriction_none_returnsNone() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseDietaryRestriction(\"None\"),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            new DietaryRestriction(DietaryRestriction.TypicalRestriction.NONE));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseDietaryRestriction_halal_returnsHalal() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseDietaryRestriction(\"Halal\"),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            new DietaryRestriction(DietaryRestriction.TypicalRestriction.HALAL));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseDietaryRestriction_vegetarian_returnsVegetarian() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseDietaryRestriction(\"Vegetarian\"),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            new DietaryRestriction(DietaryRestriction.TypicalRestriction.VEGETARIAN));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseDietaryRestriction_vegan_returnsVegan() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertEquals(ParserUtil.parseDietaryRestriction(\"Vegan\"),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            new DietaryRestriction(DietaryRestriction.TypicalRestriction.VEGAN));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parseDietaryRestriction_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDietaryRestriction(\"invalid\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTableId_validValue_returnsInt() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertEquals(1, ParserUtil.parseTableId(\"1\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertEquals(5, ParserUtil.parseTableId(\"   5   \"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parseTableId_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTableId(\"0\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTableId(\"-1\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTableId(\"abc\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseWeddingName_validValue_returnsTrimmed() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertEquals(\"Eva\u0027s Wedding\", ParserUtil.parseWeddingName(\"   Eva\u0027s Wedding \"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"josejhkim"},"content":"    public void parseWeddingName_empty_throwsParserException() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"josejhkim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeddingName(\"   \"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void parseCapacity_validValue_returnsInt() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(10, ParserUtil.parseCapacity(\"10\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertEquals(25, ParserUtil.parseCapacity(\"   25   \"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void parseCapacity_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCapacity(\"zero\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCapacity(\"-5\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCapacity(\"0\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"-":282,"josejhkim":2}},{"path":"src/test/java/seedu/address/logic/parser/SetWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SetWeddingCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SetWeddingCommandParserTest {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final SetWeddingCommandParser parser \u003d new SetWeddingCommandParser();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsSetWeddingCommand() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josejhkim"},"content":"        String validArgs \u003d \"setWedding n/John and Jane\u0027s Wedding\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        SetWeddingCommand command \u003d parser.parse(validArgs);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josejhkim"},"content":"        assertEquals(new SetWeddingCommand(\"John and Jane\u0027s Wedding\"), command);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String emptyArgs \u003d \"\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(emptyArgs));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"-":25,"josejhkim":2}},{"path":"src/test/java/seedu/address/model/table/UniqueTableListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.table;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josejhkim"},"content":"import seedu.address.model.table.exceptions.DuplicateTableException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.table.exceptions.TableNotFoundException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniqueTableListTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UniqueTableList uniqueTableList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Table table1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Table table2;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Person alice;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Person bob;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        uniqueTableList \u003d new UniqueTableList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        table1 \u003d new Table(1, 2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        table2 \u003d new Table(2, 3);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        bob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void addTable_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(1, uniqueTableList.size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniqueTableList.hasTable(table1));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void addTable_duplicateTable_throwsException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josejhkim"},"content":"        assertThrows(DuplicateTableException.class, () -\u003e uniqueTableList.addTable(new Table(1, 5)));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void deleteTable_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniqueTableList.deleteTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(uniqueTableList.hasTable(table1));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void deleteTableById_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        uniqueTableList.deleteTableById(1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(uniqueTableList.hasTableById(1));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void deleteTableById_tableNotFound_throwsException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(TableNotFoundException.class, () -\u003e uniqueTableList.deleteTableById(99));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void findTableById_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(table1, uniqueTableList.findTableById(1));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void findTableById_notFound_throwsException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(TableNotFoundException.class, () -\u003e uniqueTableList.findTableById(100));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void addPersonToTable_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniqueTableList.addPersonToTable(alice, table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Table updated \u003d uniqueTableList.findTableById(1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(1, updated.getSize());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(updated.getAllPersons().contains(alice));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void deletePersonFromTable_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniqueTableList.addPersonToTable(alice, table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniqueTableList.deletePersonFromTable(alice, table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(0, uniqueTableList.findTableById(1).getSize());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setTable_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Table edited \u003d new Table(1, 10);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniqueTableList.setTable(table1, edited);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(10, uniqueTableList.findTableById(1).getCapacity());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setTables_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniqueTableList.setTables(Arrays.asList(table1, table2));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(2, uniqueTableList.size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setTables_duplicateTables_throwsException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cTable\u003e listWithDuplicates \u003d Arrays.asList(table1, new Table(1, 2));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueTableList.setTables(listWithDuplicates));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void equals_sameContent_returnsTrue() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UniqueTableList otherList \u003d new UniqueTableList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        otherList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(uniqueTableList, otherList);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void equals_differentContent_returnsFalse() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UniqueTableList otherList \u003d new UniqueTableList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        otherList.addTable(table2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        uniqueTableList.addTable(table1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertNotEquals(uniqueTableList, otherList);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"-":132,"josejhkim":2}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"josejhkim"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"weddinghero.json\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24","isFullCredit":false}],"authorContributionMap":{"-":122,"josejhkim":1}}]
