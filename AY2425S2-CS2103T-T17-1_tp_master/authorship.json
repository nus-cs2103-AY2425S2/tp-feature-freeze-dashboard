[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Notarius is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts such as `CommandBox`, `ResultDisplay`, `PersonListPanel`, ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"`PersonDetailPanel`, `StatusBarFooter` and `HelpWindow`. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores states of the model in the ModelState in order to undo/redo the states.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"### List feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The `list` command enables users to view all existing contacts from Notarius.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/ListCommandSequenceDiagram.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"1. The user inputs the command to list all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"2. A `LogicManager` object invokes the `execute` method of a `ListCommand` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"3. The `execute` method of the `ListCommand` object invokes the `updateFilteredPersonList` and","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"`commit` method of its `Model` to update and show all contacts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"4. The `execute` method of the `ListCommand` object returns a `CommandResult` object which stores the data regarding","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"the completion of the `list` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Help feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"The `help` command allows users to view general application usage instructions or specific details about a command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/HelpCommandSequenceDiagram.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `HelpCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. The user inputs the command to request help, either as help for general help or help COMMAND_NAME for details on a specific command. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"2. A `HelpCommandParser` object invokes its `parse` method, which parses the user input:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"   1. If no argument is provided, it returns a `HelpCommand` object for general help. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"   2. If a valid command name is provided, it returns a `HelpCommand` object with that command name. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"3. A `LogicManager` object invokes the `execute` method of the `HelpCommand` object. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"4. The execute method of the HelpCommand object checks if a command name was specified:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"   1. If no command name is provided, it returns a `CommandResult` containing general help instructions. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"   2. If a valid command name is provided, it retrieves the corresponding help message from a predefined command-help mapping (`COMMAND_HELP`). ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"   3. If an invalid command name is provided, it returns an error message stating that the command is unknown. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"5. The `execute` method of the `HelpCommand` object returns a `CommandResult` object that stores the help message or error message. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"6. The application displays the help message to the user, either in a popup window (for general help) or in the main interface (for specific commands).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Clear feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `clear` command enables users to remove all existing contacts from Notarius.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/ClearCommandSequenceDiagram.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"1. The user inputs the command to clear all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"2. A `LogicManager` object invokes the `execute` method of a `ClearCommand` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"3. The `execute` method of the `ClearCommand` object invokes the `setAddressBook` and `commit` method ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"of its `Model` argument with a new `AddressBook` object which contains an empty `UniquePersonList` property.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"4. The `execute` method of the `ClearCommand` object returns a `CommandResult` object which stores the data regarding ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"the completion of the `clear` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Sort feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"The `sort` command enables users to sort contacts in Notarius by prefix in lexicographical order.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/SortCommandSequenceDiagram.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SortCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. The user inputs the command to sort contacts with the specified prefix.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"2. A `SortCommandParser` object invokes its `parse` method which parses the user input.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"3. The `SortCommand` object is created with the parsed prefix.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"4. A `LogicManager` object invokes the `execute` method of the `SortCommand` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"5. The `execute` method of the `SortCommand` object invokes the `updateSortedPersonList`, ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"`updateSortedFilteredPersonList` and `commit` methods of its `Model` argument to update and sort ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"all contacts by the target prefix.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"6. The `execute` method of the `SortCommand` object returns a `CommandResult` object which stores the data regarding ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"the completion of the `sort` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Find feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"The `find` command allows users to search for contacts in Notarius based on specified fields: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"name, phone, email, address, and tags. The search is case-insensitive and supports multiple keywords. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"Additionally, for name, email, and address fields, the search is tolerant of minor typos, allowing matches within a Levenshtein distance of 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/FindCommandSequenceDiagram.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"1. The user enters the `find` command with the desired search criteria. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"2. The `LogicManager` invokes the parseCommand method of AddressBookParser to identify the command type. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"3. If the command is recognized as `find`, the `FindCommandParser` is instantiated. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"4. The `FindCommandParser` extracts the search parameters and keywords, ensuring correct parsing of multi-word inputs enclosed in double quotes (\"\"). ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"5. A new `FindCommand` object is created using the parsed search fields and keywords. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"6. The `LogicManager` executes the `FindCommand` object, which:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"   1. Calls `updateFilteredPersonList` and `commit` method in `Model` to filter contacts based on the search fields and keywords. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"   2. Uses a case-insensitive check for all fields. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"   3. Applies Levenshtein distance ≤ 2 matching for `name`, `email`, and `address`. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"7. The `FindCommand` returns a `CommandResult`, displaying the filtered list of contacts matching the search criteria.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Delete feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"The `delete` command allows the user to delete specified client contact(s) from Notarius.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"The sequence diagram below models the different components of the application that are involved","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"when the user executes the `delete` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"![DeleteSequenceDiagram](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"1. The user executes a command to delete a contact by specifying the contact\u0027s index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"2. The `LogicManager` receives the command and calls `AddressBookParser#parseCommand` to parse the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"3. The `AddressBookParser` creates a `DeleteCommandParser` object, which creates a `MassOpsIndexParser` object for parsing multiple indexes.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"4. The `AddressBookParser` then calls the `parse` method of the newly created `DeleteCommandParser` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"5. If the delete method specifies the `i/` prefix with the corresponding value being either a ranged format (`startIndex-endIndex`) or spaced format (`index1 index2 ... indexN`), the `parse` method of `MassOpsIndexParser` will be called to parse the indexes.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"6. A new `DeleteCommand` object is created with the returned set of unique indexes from the parser, and gets returned back to the `LogicManager`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"7. The `LogicManager` calls the `execute` method of the `DeleteCommand` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"8. The `DeleteCommand` object calls the `Model#deletePerson` method for each of the set of unique indexes in decreasing order of the index\u0027s `zeroBasedIndex`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"9. After all `indexes` specified have been deleted, `Model#commitAddressBook` is called on the `Model` argument to save the changes made to the list of persons in the addressbook.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"#### Usage Examples","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"1. User starts Notarius","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"2. User executes `delete i/1-3`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"3. The client contacts with indexes 1, 2 and 3 will be deleted from Notarius. This change should be reflected in the client contact list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Aspect: How to implement the delete command**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Support deletion of multiple client contacts with intuitive delete formats","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"    * Pros: Intuitive to use, and improved user-friendliness. Users do not have to repeatedly type the same command to delete clients one-by-one.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    * Cons: More complicated to implement, due to the need of parsing multiple indexes, ignoring duplicates, and ensuring valid parsing according to the multiple specified formats.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"* **Alternative 2:** Support deletion of only one client contact at a time using a single format","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"    * Pros: Simpler to implement, as the command will only need to parse one index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    * Cons: Less user-friendly, as users will have to spend more time and trouble to repeatedly type the same command to delete potentially many clients one-by-one.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Command history","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"The command history allows the user to re-access previously entered commands quickly.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"The following sequence diagram models the interaction within the `Model` component called by `LogicManager#execute`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"when the user executes a command to **save command inputs**.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"![AddCommandHistorySequenceDiagram](images/AddCommandHistorySequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"#### Implementation Details: Saving commands to command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"1. When a user enters a non-empty command, the `ModelManager#addPastCommandInput` method will be called when the command text in `LogicManager` component is non-empty.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"2. The `ModelManager` calls `CommandHistory#addInput` and passes the non-empty command text as argument.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"3. If the command history\u0027s most recently added command is `equal` to the command text argument, the command text is not re-added again.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"4. Otherwise, if the command history is currently full, with `MAX_HISTORY_SIZE` entries (set to 20), the earliest added command entry will be removed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"5. The `CommandHistory` object will add the command to `pastCommands`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"Note that `pastCommands` is an `ObservableList` sorted from most to least recent at the tail of the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"The following sequence diagram models the main components involved when a user moves up the command history selection","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"using the `Ctrl + Up` key combinations on Windows (or `Ctrl + Opt + Up` on macOS), to **re-access previous commands**.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"![CommandHistorySequenceDiagram](images/CommandHistorySequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"#### Implementation Details: Re-accessing command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"1. When the user presses `Ctrl + Up`, the subscribed for the `EventHandler\u003cKeyEvent\u003e` JavaFX listener will be called.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"2. The listener then calls `handleMovementUp` method of the `CommandHistoryMenu` in the Ui module.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"3. The `CommandHistoryMenu` object calls the `moveUp` method of an internal `CommandHistoryMenuController` object to handle the logic","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"   of decrementing the index.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"4. In `moveUp` then sets the current input of the `CommandBox` object through a call to `CommandBox#setCommandTextField` with the selected previous command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"5. The `CommandHistoryMenu` object then gets a result of this selection update by calling `CommandHistoryMenuController#getCommandSelectionIndex`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"6. If the index is present within this result, the `CommandHistoryMenu` object gets the `SelectionModel` for rendering the given list cell of `ListView`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"7. The `select` method of the `SelectionModel` object is then called with the index passed as argument.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"#### Usage Examples","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"1. User launches Notarius","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"2. User enters a non-empty command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"3. User re-accesses the previously entered command using the command history shortcuts:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    * Windows/Linux: `Ctrl + Up`/`Ctrl + Down` to move up/down the selection.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    * macOS: `Ctrl + Opt + Up`/ `Ctrl + Opt + Down` similarly.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Note feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"The note feature allows the user to change and view notes. \\","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"The user changes notes via the `note` command and the user views notes via the `viewnote` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"This is how a user changes their note via the `note` command:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"1. The user inputs the command to change their note of a contact of a specific index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"2. A `NoteCommandParser` object invokes its `parse` method which parses the user input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"3. The `NoteCommand` object is created with the parsed prefix and specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"4. A `LogicManager` object invokes the `execute` method of the `NoteCommand` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"5. The `execute` method of the `NoteCommand` object modifies the specified clientContact with a new note invokes the `setPerson`,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"and `commit` methods of its `Model` argument to change the note of the person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"6. The `execute` method of the `NoteCommand` object returns a `CommandResult` object which stores the data regarding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"   the completion of the `note` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"This is how a user views their note via the `viewnote` command:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"1. The user inputs the command to view a note of a contact of a specific index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"2. A `ViewNoteCommandParser` object invokes its `parse` method which parses the user input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"3. The `ViewNoteCommand` object is created with the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"4. A `LogicManager` object invokes the `execute` method of the `ViewNoteCommand` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"5. The `execute` method of the `ViewNoteCommand` object invokes the getFilteredPersonList of the `Model` and gets the note of the clientContact as the specified index and","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"   does the `commit` method of the `Model` as well.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"6. The `execute` method of the `ViewNoteCommand` object returns a `CommandResult` object which stores the data regarding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"   the completion of the `viewnote` command, if successful includes the note of the client contact at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Undo/redo feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"The `undo` and `redo` commands undoes and redoes other commands respectively. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"#### Implementation Details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"* The proposed undo/redo mechanism is facilitated by `ModelState`. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"* The `ModelState` is a save state of the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"* The `ModelState` saves the `ReadOnlyAddressBook` and `Predicate\u003cPerson\u003e` of the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"* \u0027ModelState\u0027 objects are stored in the `Model` as `stateHistory` which is an `ArrayList\u003cModelState\u003e`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"* Undo/redo is facilitated by a `currentStatePointer` which points to the current `ModelState` in the `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"Additionally, the `Model` implements and exposes the following operations to facilitate the undo/redo process:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"* `Model#commit()` — Saves the current `ModelState` in the `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"* `Model#undo()` — Restores the previous `ModelState` from its `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"* `Model#redo()` — Restores a previously undone `ModelState` from its `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `stateHistory` will be initialised with the initial `ModelState` of the newly initialised `Model`, and the `currentStatePointer` pointing to that single `ModelState`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book of the `Model`. The `delete` command calls `Model#commit()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `stateHistory` as a `ModelState`, and the `currentStatePointer` is shifted to the newly inserted `ModelState`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commit()`, causing another modified address book state in the newly created `ModelState` to be saved into the `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commit()`, so the `ModelState` will not be saved into the `stateHistory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undo()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous `ModelState`, and restores the `Model` to that state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0 pointing to the initial `ModelState`, then there are no previous `ModelState` states to restore. The `undo` command uses `Model#hasUndo()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redo()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone `ModelState`, and restores the `Model` to that state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `stateHistory.size() - 1`, pointing to the latest `ModelState` state, then there are no undone `ModelState` to restore. The `redo` command uses `Model#hasRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"Step 5. The user executes `clear`, which calls `Model#commit()`. Since the `currentStatePointer` is not pointing at the end of the `stateHistory`, all `ModelState` states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Target user profile**: Lawyers","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                      | I want to …​                                                                                              | So that I can…​                                                                            |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"carineang"},"content":"|----------|--------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | list all contacts with their relevant details                                                             | easily peruse them                                                                         |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | add a contact\u0027s name                                                                                      | identify the individual easily                                                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | add a contact\u0027s phone number                                                                              | contact them when needed                                                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | add a contact\u0027s email                                                                                     | find an alternative way to contact them                                                    |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | add a contact\u0027s address                                                                                   | find a way to send them _case_ details                                                     |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | save my contacts to my _local system_                                                                     | access them later after reopening the application                                          |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | delete contacts                                                                                           | remove contacts that I no longer need                                                      |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer                                                       | have access to my contacts even without internet                                                          | access my contacts offline                                                                 |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"| `* * *`  | lawyer who can type fast and prefers typing over clicking over a GUI | type everything over a command line interface that minimizes my use of mouse                              | enjoy the convenience of the application                                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"| `* *`    | busy lawyer who is working multiple cases and clients at the same time | add notes to contacts                                                                                     | keep track of relevant case-related details, their preferences, and their personal details |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"| `* *`    | forgetful lawyer                                             | star/pin important clients                                                                                | look up their information faster                                                           |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"carineang"},"content":"| `* *`    | lawyer                                                       | sort the contacts                                                                                         | improve the organisation of contacts                                                       |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"| `* *`    | lawyer who can type fast                                     | re-access previously entered commands quickly                                                             | save time by not typing them again                                                         |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | set reminders to follow up with contacts                                                                  | make sure to not miss an important check-in                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"| `* *`    | lawyer with many clients                                     | delete multiple client contacts at once                                                                   | clear clients of past cases faster and more conveniently                                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | tag contacts (e.g., \"Client,\" \"Judge,\" \"Opposing Counsel\")                                                | remember their roles easily                                                                |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | tag multiple contacts at once                                                                             | categorise them for my needs more efficiently and conveniently                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | add multiple tags to a contact                                                                            | organise my contacts neatly and not have to keep tagging the same contact multiple time    |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"| `* *`    | impatient lawyer                                             | get the output of my commands quickly and responsively                                                    | not waste time on waiting for the output                                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | have a user-friendly and not cluttered interface to navigate around                                       | focus on my legal work without getting distracted by complicated tools                     |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | edit contact details                                                                                      | update information when needed                                                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"| `* *`    | lawyer                                                       | be able to lookup help/guide for the application locally in case i do not know forgot how to use the application | figure out how to use it conveniently                                                      |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"| `* *`    | lawyer handling _crucial client information_                 | not be able to add duplicate contacts by phone number                                                     | ensure that there is no redundant client data                                              |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"| `* *`    | lawyer trying the application for the first time             | clear all the contact data when necessary                                                                 | facilitate the population of new data                                                      |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | have my notes be automatically time-stamped                                                               | keep track of when notes were created                                                      |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"| `*`      | busy lawyer                                                  | use command aliases to enter commands faster                                                              | save time and improve efficiency                                                           |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | have the application be personalised for me                                                               | feel more connected and engaged while using it                                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | add general notes (e.g. Post-its)                                                                         | store information that is not related to any case or contact                               |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | assign contacts to specific cases                                                                         | keep track of all people involved in a legal matter                                        |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"| `*`      | busy lawyer                                                  | view all contacts to specific cases                                                                       | quickly access their details when needed                                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | unlink contacts related from cases                                                                        | update case information when necessary                                                     |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"| `*`      | lawyer                                                       | add notes to cases                                                                                        | view case information when needed                                                          |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is `Notarius` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"**Use Case**: `UC01 - Deleting client contacts`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 4, the requested client contact(s) will be deleted`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. User requests to list contacts.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"2. Notarius displays a list of contacts.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"3. User requests to delete specific contacts in the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"4. Notarius deletes the contacts and confirms that the contacts have been deleted.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"* 1a. Notarius detects an invalid list command from the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"  * Steps 1a-1a2 are repeated until the command format is valid.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"* 3a. Notarius is unable to find some of the specified contact(s).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"  * 3a1. Notarius alerts the user about the error.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"  * 3a2. User retypes the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"  * Steps 3a-3a2 are repeated until the specified contact(s) exist.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"  * Use case resumes from step 4.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"* 3b. Notarius uncovers a prefix with an empty value.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"  * 3b1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"  * 3b2. User retypes the command with a non-empty value for the specified prefix.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"  * Steps 3b-3b2 are repeated until the prefix is no longer empty.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"  * Use case resumes from step 4.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"* 3c. Notarius uncovers some invalid contact identifiers.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"  * 3c1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"  * 3c2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"  * Steps 3c-3c2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"  * Use case resumes from step 4.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"**Use Case**: `UC02 - Finding a particular contact by name`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 2, the contact will return a list of contacts whose names contain the keyword the user entered`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. User enters the keyword that the person’s name contains.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"2. Notarius shows the corresponding results.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"* 1a. Notarius uncovers that the user wrote an empty input.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user of the error.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"  * Steps 1a-1b are repeated until the user input is not empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"**Use Case**: `UC03 - Editing a contact`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 2, the contact will have the specified field updated correctly to the new value`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. User requests to edit field of a contact given by their id.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"2. Notarius updates that field to the new value and confirms the contact has been edited.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"* 1a. Notarius is unable to find the specified contact.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"  * Steps 1a-1a2 are repeated until the contact specified exists.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"* 1b. Notarius uncovers an empty field description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command with a non-empty value for the specified field.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"  * Steps 1b-1b2 are repeated until the field is no longer empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"* 1c. Notarius uncovers that the format of the field the user entered is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"  * 1c1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"  * 1c2. User retypes the command with a valid field format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"  * Steps 1c-1c2 are repeated until the field format is valid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"* 1d. Notarius uncovers an invalid contact identifier.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"  * 1d1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"  * 1d2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"  * Steps 1d-1d2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"**Use Case**: `UC04 - Adding a note to contact`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"**Guarantees**: `A new note is added to the contact.`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"1. User requests to add a note to a contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"2. Notarius adds the note to the contact’s list of notes and confirms the successful addition of the note.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"* 1a. Notarius uncovers a missing description field in the entered input.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"  * 1a1. Notarius displays the error message.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command with the description field.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"* 1b. Notarius is unable to find the specified contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"  * Steps 1b-1b2 are repeated until the contact specified exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"* 1c. Notarius uncovers an invalid note description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"  * 1c1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"  * 1c2. User retypes the command with a valid note description format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"  * Steps 1c-1c2 are repeated until the note description format is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"* 1d. Notarius uncovers an empty field description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"  * 1d1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"  * 1d2. User retypes the command with a non-empty value for the specified field.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"  * Steps 1d-1d2 are repeated until the field is no longer empty.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"* 1e. Notarius uncovers an invalid contact identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"  * 1e1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"  * 1e2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"  * Steps 1e-1e2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"**Use Case**: `UC05 - Editing a note of a contact`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"**Guarantees**: `The specified fields of the note are updated to the correct values.`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"1. User requests to edit a field of a specified note of a contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"2. Notarius updates the note and confirms the note has been successfully edited.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"* 1a. Notarius uncovers an invalid note identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command with a valid note identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"  * Steps 1a-1a2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"* 1b. Notarius is unable to find the specified contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"  * Steps 1b-1b2 are repeated until the contact specified exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"* 1c. Notarius is unable to find the specified note.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"  * 1c1. Notarius alerts the user of the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"  * 1c2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"  * Steps 1c-1c2 are repeated until the specified note exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"* 1d. Notarius uncovers an invalid note description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"  * 1d1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"  * 1d2. User retypes the command with a valid note description format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"  * Steps 1d-1d2 are repeated until the note description is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"* 1e. Notarius uncovers an empty field description.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"  * 1e1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"  * 1e2. User retypes the command with a non-empty value for the specified field.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"  * Steps 1e-1e2 are repeated until the field is no longer empty.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"* 1f. Notarius uncovers an invalid contact identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"  * 1f1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"  * 1f2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"  * Steps 1f-1f2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"**Use Case**: `UC06 - Deleting a note of a contact.`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"**Guarantees**: `The specified note is deleted successfully.`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. User specifies the note of a contact to delete.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"2. System deletes the note and confirms the successful deletion.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"* 1a. Notarius is unable to find the specified note.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user of the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"  * Steps 1a-1a2 are repeated until the specified note exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"* 1b. Notarius uncovers an invalid note identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command with a valid note identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"  * Steps 1b-1b2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"* 1c. Notarius is unable to find the specified contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"  * 1c1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"  * 1c2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"  * Steps 1c-1c2 are repeated until the contact specified exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"* 1d. Notarius uncovers an invalid contact identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"  * 1d1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"  * 1d2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"  * Steps 1d-1d2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"**Use Case**: `UC07 - Getting all notes belonging to a contact`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"**Guarantees**: `All notes belonging to the specified contact are displayed.`","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"1. User requests for the notes of a contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"2. Notarius displays all notes belonging to the contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"* 1a. Notarius is unable to find the specified contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"  * 1a1. Notarius alerts the user about the error.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"  * Steps 1a-1a2 are repeated until the contact specified exists.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"* 1b. Notarius uncovers an invalid contact identifier.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user about the issue.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command with a valid contact identifier format.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"  * Steps 1b-1b2 are repeated until the contact identifier is valid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"* 2a. Notarius cannot find any notes related to the contact.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"  * 2a1. Notarius displays a blank note.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"  * Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"**Use Case**: `UC08 - Accessing an input from the command history`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"**Preconditions**: `Command history is open.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"1. User selects a command input from the command history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"2. Notarius prepares the selected command to be entered.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"3. User enters the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"4. Notarius executes the command and closes the command history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"**extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"* 1a. Notarius is unable to find any command in the history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"    * 1a1. Notarius alerts the user with a message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"    * 1a2. User enters a new command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"    * Use case resumes from step 4.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"* 3a. User requests to edit the command input with a new value.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"    * 3a1. Notarius updates the selected command input with the new value.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"    * Use case resumes from step 3.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"* *a. At any time, user requests to close the command history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"    * *a1. Notarius closes the command history.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"    * Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"carineang"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"carineang"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"**Use Case**: `UC09 - Sorting the contacts list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 3, the user has successfully sorted the contacts list by a specified prefix.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"1. User requests to sort Notarius by a specified prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"2. Notarius updates the contacts list in the sorted order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"3. Notarius confirms that the contacts list has been successfully sorted.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"* 1a. Notarius detects a missing prefix in the entered input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"  * 1a1. Notarius displays the error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"  * 1a2. User re-enters a new command with a specified prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"  * Steps 1a1 - 1a2 are repeated until a valid prefix is input by the User.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"* 1b. Notarius detects an invalid prefix in the entered input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"  * 1b1. Notarius displays the error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"  * 1b2. User re-enters a new command with a specified prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"  * Steps 1b1 - 1b2 are repeated until a valid field is input by the User.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"carineang"},"content":"* 1c. User enters extra spaces or invalid format in the entered input.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"  * 1c1. Notarius displays an error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"  * 1c2. User re-enters a new command with properly formatted command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"  * Steps 1c1 - 1c2 are repeated until a valid command is input by the User.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"carineang"},"content":"* 1d. User enters duplicate prefixes in the entered input.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"carineang"},"content":"  * 1d1. Notarius displays an error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"carineang"},"content":"  * 1d2. User re-enters a new command with no duplicate prefixes.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"carineang"},"content":"  * Steps 1d1 - 1d2 are repeated until a valid command with no duplicate prefixes is input by the User.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"carineang"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"carineang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"**Use Case**: `UC10 - Clearing the contacts list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 3, the user has successfully cleared the contacts list.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"1. User requests to clear the data in the contacts list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"2. Notarius updates the data in the contacts list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"3. Notarius confirms that the data in the contacts list has been cleared.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"**Use Case**: `UC11 - Listing all contacts`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 3, the user has successfully listed all the contacts.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"1. User requests to list all contacts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"2. Notarius displays all relevant contacts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"3. Notarius confirms that all relevant contacts has been successfully listed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"**Use Case**: `UC12 - Displaying Help Information`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"xinniyee"},"content":"**Guarantees**: `If MSS reaches step 2, the requested help information will be displayed.`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"1. User requests help by entering the help command. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"2. Notarius displays a help window with general usage instructions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"* 1a. User requests help for a specific command. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"  * 1a1. Notarius displays detailed usage information for the specified command.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"* 1b.  User enters an invalid command name. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"  * 1b1. Notarius alerts the user with an error message: \"Unknown command! Use help to see available commands.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"  * 1b2. User retypes the command with a valid usgae.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"    Steps 1b1-1b2 are repeated until a valid command is entered.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"    Use case resumes from step 1a1.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"**System**: `Notarius`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"**Actor**: `User`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"**Use Case**: `UC13 - Finding a Contact`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"**Guarantees**: `If MSS reaches step 3, a list of matching contacts will be displayed.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"**MSS**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"1. User requests to find contacts by entering the find command with specified fields and keywords. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"xinniyee"},"content":"2. Notarius searches for contacts whose fields contain any of the given keywords, ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"allowing minor typos (up to a Levenshtein distance of 2) in the name, email, and address fields only. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"xinniyee"},"content":"3. Notarius displays a list of matching contacts with index numbers.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"**Extensions**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"* 1a. User enters an invalid search format. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"  * 1a1. Address Book alerts the user with an error message about the incorrect format. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"  * 1a2. User retypes the command following the correct format.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"    Steps 1a1-1a2 are repeated until the command format is valid.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"* 2a. No contacts match the search criteria. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"  * 2a1. Address Book displays a message indicating that no matching contacts were found.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"* 2b. User enters multiple search fields. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"  * 2b1. Address Book searches for contacts that match any of the ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"  specified fields (name, phone, email, address, or tags).\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"* 2c. User enters a keyword with minor typos in the phone or tag fields. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"  * 2c1. Address Book does not apply typo correction for phone numbers or tags. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"  * 2c2. If an exact match is not found, Address Book displays a message indicating no results were found.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"* 2d. User enters a keyword with minor typos in the name, email, or address fields. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"  * 2d1. Address Book applies fuzzy matching (Levenshtein distance of up to 2) for name, email, and address fields.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 contacts without a noticeable lag in user requests.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"3. A user with _above average typing speed_ for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"4. Data should be stored locally as human editable file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"5. Software should work without an installer.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"6. GUI should work well with standard screen resolutions 1920x1080 and higher, and for screen scales 100% and 125%.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"7. GUI should be usable for resolutions 1280x720 and higher, and for screen scales 150%.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"8. Application should come packaged as a single jar file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"9. The `.jar/.zip` file should not exceed 100 MB.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"10. Documents packaged with the application should each not exceed 15 MB per file.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"11. The application should respond within 5 seconds to any user request.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"| **Terms**                  | **Meaning**                                                                                                                                            |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"| Mainstream OS              | Windows, Linux, Unix, MacOS.                                                                                                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"| Above-average typing speed | ≥ 60 words per minute.                                                                                                                                 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"| Crucial client information | Important client information such as name, phone number, email, address, tags, as well as notes stored that could contain legal information for cases. |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"| Local system               | The user\u0027s computer that they are using to run the application.                                                                                        |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"| Cases (in law)             | The legal disputes that lawyers work on that involve many parties.                                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"| User Request               | The commands the user gives to Notarius via the command line interface.                                                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"| MSS                        | Main Success Scenario.                                                                                                                                 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"| API                        | Application Programming Interface.                                                                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"| GUI                        | Graphic User Interface.                                                                                                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"| CLI                        | Command Line Interface.                                                                                                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"| JAR                        | A packed file format used in Java that contains compiled Java code to enable easy distribution, portability, and execution.                            |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"| JSON                       | JavaScript Object Notation, a lightweight data format widely used for storing and exchanging structured data.                                          |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"### Deleting client contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"Each test case in this feature section (labelled \"Test case\") should be independent.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"1. Deleting a single client contact while all persons are being shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"   1. Prerequisites for each test case: List all persons using the `list` command. There should be **at least** 6 contacts in the list. Otherwise, use the `add` command to add more client contacts. Take note that duplicate names (ignoring letter casing) are not allowed in Notarius.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"-"},"content":"      Expected: First client contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"-"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"2. Deleting consecutive client contacts while all persons are being shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"   1. Prerequisites for each test case: List all persons using the `list` command, ensuring that there are **exactly** 6 contacts in the list. Otherwise, use the `add` command to add more client contacts. Take note that duplicate names (ignoring letter casing) are not allowed in Notarius.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/1-3`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"-"},"content":"      Expected: First three client contacts are deleted from the list. Details of the deleted contacts shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"-"},"content":"   1. Test case: `delete  i/1-1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      Expected: First client contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/0-2`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/1-9`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/6-1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"-"},"content":"3. Deleting the first and last client contact in the contact list while all client contacts are shown.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"-"},"content":"   1. Prerequisites for each test case: List all persons using the `list` command, ensuring that there are **exactly** 6 contacts in the list. Otherwise, use the `add` command to add more client contacts. Take note that duplicate names (ignoring letter casing) are not allowed in Notarius.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/1 6`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"-"},"content":"      Expected: First and last client contacts are deleted from the list. Details of the deleted contacts shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/1 1 6 6 6`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"-"},"content":"      Expected: First and last client contacts are deleted from the list. Details of the deleted contacts shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"-"},"content":"   1. Test case: `delete i/0 7`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"-"},"content":"### Command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"-"},"content":"Each test case in this feature section (labelled \"Test case\") should be independent.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"-"},"content":"**Important**: For the key combinations specified, macOS users should use `Ctrl + Opt + Up`/`Ctrl + Opt + Down` respectively instead of `Ctrl + Up`/`Ctrl + Down`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"-"},"content":"1. Saving command history","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"-"},"content":"   1. Prerequisites for each test case: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"-"},"content":"        * No command should be entered into the command box yet (and thus the command history should be empty). Otherwise, relaunch the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"-"},"content":"        * There should be **exactly** 6 contacts in the list. Otherwise, use the `add` command to add more client contacts. Take note that duplicate names (ignoring letter casing) are not allowed in Notarius.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        * **None** of the contacts should have a name equal to \"notarius\", **ignoring** letter casing. Otherwise, delete that contact using `delete` and add a new contact that does not have a duplicate name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"-"},"content":"      Expected: The command history is updated with the command text \"delete 1\". The command history is displayed when the user presses `Ctrl + Up` or `Ctrl + Down`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1` followed by `add n/notarius p/1231 e/test@email.com a/blk 123 abc`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"      Expected: The command history is updated with the command texts `add n/notarius p/1231 e/test@email.com a/blk 123 abc` at the top of the command history list and `delete 1` below it. The command history is displayed when the user presses `Ctrl + Up` or `Ctrl + Down`, and selection changes when pressing `Ctrl + Up` or `Ctrl + Down` again. When the selection changes, the command text in the command box is updated to the selected command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"   1. Test case: `list` followed by `list`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"      Expected: The command history is updated with the command text \"list\", but only once with no **consecutive** duplicates. The command history is displayed when the user presses `Ctrl + Up` or `Ctrl + Down`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"### Finding a person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"1. Finding a person while all persons are being shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using `list` command. Multiple persons in the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"   2. Test case: `find n/\"Alice\"` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"      Expected: Displays all contacts with names that match \"Alice\" (case-insensitive) or have a name with levenshtein distance \u003c\u003d 2 to \"ALICE\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"   3. Test case: `find n/\"Alice\" \"Bob\"` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"      Expected: Displays all contacts with names containing either \"Alice\" or \"Bob\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"   4. Test case: `find n/\"Alice\" e/\"alice@email.com\" a/\"Bedok Central\"` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"-"},"content":"      Expected: Displays all contacts where any of the fields match or have a levenshtein distance \u003c\u003d 2 from each keyword.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"   5. Test case: `find t/\"client\" p/\"12345678\"` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"      Expected: Displays contacts that exactly match either tag \"client\" or phone \"12345678\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"-"},"content":"   6. Test case: `find n/\"NonExistentName\"` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      Expected: \"0 persons listed!\" message is displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"-"},"content":"### Displaying help","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"-"},"content":"1. Showing help in Notarius","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"-"},"content":"   1. Prerequisites: Notarius is open and running","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"-"},"content":"   2. Test case: `help` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"-"},"content":"      Expected: A help window appears displaying instructions for using the application. The status message confirms that the help window has been opened.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"-"},"content":"   3. Test case: `help find` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"-"},"content":"      Expected: The application displays detailed instructions for the find command, including expected parameters and format. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"-"},"content":"   4. Test case: `help delete` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"-"},"content":"      Expected: The application displays detailed instructions for the delete command, including expected parameters and format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"-"},"content":"   5. Test case: `help meeee` (invalid command) \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"-"},"content":"      Expected: Error message: \"Unknown command! Use \u0027help\u0027 to see available commands.\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"-"},"content":"### Sorting contacts list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"carineang"},"content":"1. Sorting contacts list in Notarius","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"carineang"},"content":"   1. Prerequisites: Notarius contains a list of contacts.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1137,"author":{"gitId":"carineang"},"content":"   2. Test case: `sort n/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1138,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by names in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1140,"author":{"gitId":"carineang"},"content":"   3. Test case: `sort p/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1141,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by phone numbers in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1143,"author":{"gitId":"carineang"},"content":"   4. Test case: `sort e/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1144,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by email addresses in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1146,"author":{"gitId":"carineang"},"content":"   5. Test case: `sort a/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1147,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by addresses in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1149,"author":{"gitId":"carineang"},"content":"   6. Test case: `sort t/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1150,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by tags in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1152,"author":{"gitId":"carineang"},"content":"   7. Test case: `sort t/ n/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1153,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by tags, followed by names in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1155,"author":{"gitId":"carineang"},"content":"   8. Test case: `sort t/ p/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1156,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by tags, followed by phone numbers in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1158,"author":{"gitId":"carineang"},"content":"   9. Test case: `sort t/ e/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1159,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by tags, followed by email addresses in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1161,"author":{"gitId":"carineang"},"content":"   10. Test case: `sort t/ a/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1162,"author":{"gitId":"-"},"content":"   Expected: Displays all contacts sorted by tags, followed by addresses in ascending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1164,"author":{"gitId":"-"},"content":"### Listing all contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1166,"author":{"gitId":"-"},"content":"1. List all contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1168,"author":{"gitId":"-"},"content":"   1. Test case: `list`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1169,"author":{"gitId":"-"},"content":"      Expected: Displays the whole contacts list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1171,"author":{"gitId":"-"},"content":"### Clearing all contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1173,"author":{"gitId":"-"},"content":"1. Clear all contacts ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1175,"author":{"gitId":"-"},"content":"  1. Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1176,"author":{"gitId":"-"},"content":"     Expected: Clears the whole contacts list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1178,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1180,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1182,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1184,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1185,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1186,"author":{"gitId":"Wrongian"},"content":"## **Appendix: Planned Enhancements**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1187,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1188,"author":{"gitId":"Wrongian"},"content":"### 1. Allow for special characters in names","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1189,"author":{"gitId":"Wrongian"},"content":"#### Current:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1190,"author":{"gitId":"Wrongian"},"content":"Special characters are not allowed to be entered as part of a person\u0027s name such as via the add or edit command. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1191,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1192,"author":{"gitId":"Wrongian"},"content":"Valid names with special characters like: \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1193,"author":{"gitId":"Wrongian"},"content":"Sinéad O\u0027Connor, Nagaratnam s/o Suppiah, Tan Cheng Bok @ Adrian Tan, Anne-Marie, Beyoncé, J.R. Smith ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1194,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1195,"author":{"gitId":"Wrongian"},"content":"are not accepted.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1196,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1197,"author":{"gitId":"Wrongian"},"content":"#### Planned:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1198,"author":{"gitId":"Wrongian"},"content":"Allow for special characters in names. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1199,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1200,"author":{"gitId":"Wrongian"},"content":"### 2. Allow for international phone number format to be entered","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1201,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1202,"author":{"gitId":"Wrongian"},"content":"#### Current:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1203,"author":{"gitId":"Wrongian"},"content":"In phone input fields, user only can enter a number. This restricts the user from being able to enter country codes.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1204,"author":{"gitId":"Wrongian"},"content":"This would reduce the application\u0027s usefulness as a address book application due to its limitation of storing","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1205,"author":{"gitId":"Wrongian"},"content":"international client contacts. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1206,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1207,"author":{"gitId":"Wrongian"},"content":"#### Planned:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1208,"author":{"gitId":"Wrongian"},"content":"To enhance usability and global compatability. We should allow the user to enter the country code along with the phone number ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1209,"author":{"gitId":"Wrongian"},"content":"in phone input fields.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1210,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1211,"author":{"gitId":"Wrongian"},"content":"### 3. Bulk tag deletion capability","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1212,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1213,"author":{"gitId":"Wrongian"},"content":"#### Current:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1214,"author":{"gitId":"Wrongian"},"content":"Via the edit command, all tags can be deleted or tags can be replaced with new ones. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1215,"author":{"gitId":"Wrongian"},"content":"However, If a singular client contact has many tags and the ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1216,"author":{"gitId":"Wrongian"},"content":"user wants to delete a few tags from them, this would be decently cumbersome as the user has to retype in the tags","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1217,"author":{"gitId":"Wrongian"},"content":"they do not want to replace.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1218,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1219,"author":{"gitId":"Wrongian"},"content":"#### Planned:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1220,"author":{"gitId":"Wrongian"},"content":"Add a command to delete multiple tags from a client contact.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1221,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1222,"author":{"gitId":"Wrongian"},"content":"### 4. Support for longer notes.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1223,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1224,"author":{"gitId":"Wrongian"},"content":"#### Current:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1225,"author":{"gitId":"Wrongian"},"content":"Notes are entered through a command line and are designed to write short and simple notes. However, users may ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1226,"author":{"gitId":"Wrongian"},"content":"want to write longer notes with more formatting options. Longer notes may be cumbersome experience to view in the","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1227,"author":{"gitId":"Wrongian"},"content":"command output.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1228,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1229,"author":{"gitId":"Wrongian"},"content":"#### Planned:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1230,"author":{"gitId":"Wrongian"},"content":"If we want to stick fully to a CLI, we can add longer multi-line notes by using a prompt-based input technique where ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1231,"author":{"gitId":"Wrongian"},"content":"the user can enter line after line by using the `note` command. When the user wants to stop entering lines of the note","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1232,"author":{"gitId":"Wrongian"},"content":"they can type the command `donenote`. This can be enhanced by allowing formatting options such as bolding. Long notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1233,"author":{"gitId":"Wrongian"},"content":"can also be displayed better by making the command output collapsible.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1234,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1235,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"xinniyee":3,"Wrongian":63,"carineang":26,"-":1143}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Introducing Notarius","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wrongian"},"content":"\u003e __*Managing client contacts should not slow you down.*__","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wrongian"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wrongian"},"content":"**Notarius** is a desktop address book application","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"designed for **fast typing lawyers**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wrongian"},"content":"who need a **quick and efficient** way to manage client contacts. It comes with a **simple and intuitive** graphical interface","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"for a **clear and organised** view of your client contacts.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Features Overview","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wrongian"},"content":"**Notarius** comes with the expected features of an address book application in allowing you to","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"add, list, edit and delete client contacts.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wrongian"},"content":"Furthermore, **Notarius** also comes with **additional features** and **quality of life** to drive your **productivity** at work:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"| Feature         | Overview                                                                                                                                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wrongian"},"content":"|-----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wrongian"},"content":"| Notes           | Change and view notes of your client contacts to keep track of short snippets of specific information about your clients especially when reaching out to them. |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"| Pin/Unpin       | Pin and unpin client contacts to track important client contacts easier.                                                                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"| Sort            | Sort clients contacts using different criteria for greater organisation and quicker lookups.                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"| Find            | Find specific client contacts.                                                                                                                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"| Undo/Redo       | Undo your mistakes and use redo in case you did not want to undo.                                                                                              |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"| Command History | View and reaccess what you previously typed.                                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Glossary of terms","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"While exploring this user guide, you may come across some terms that you may not be familiar with.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"Here is a list of commonly used terminology to provide better clarity.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"| Terms                 | Meaning                                                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wrongian"},"content":"|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"| Prefix                | Prefixes are short markers that are used to specify the type of information following it. For instance, `n/` is a prefix that specifies that the data following it (up until another prefix) is the name of a client.                                                                                                         |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wrongian"},"content":"| Command/Command input | A command (input) is a specific instruction that you type into the input box to tell Notarius what to do. Commands help you interact with Notarius by performing actions like adding, searching, or deleting data. Commands that do not match actions that can be performed by Notarius will be considered invalid/unknown. |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"| Index                 | Index refers to the position of a client in the list of clients displayed by Notarius. For example, an `INDEX` of 1 refers to the first client in the displayed list.                                                                                                                                                         |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"| Operating System/OS   | The type of computer software that you are using, commonly referred to as OS. Examples include **Windows**, **macOS**, and **Linux**. Click \u003ca href\u003d\"https://en.wikipedia.org/wiki/Operating_system\"\u003ehere\u003c/a\u003e to learn more.                                                                                                  |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"| Whitespace Character  | Usually refer to characters entered by a user\u0027s keyboard that are not visible. Examples include spaces (by pressing space-bar), tabs (by pressing the tab key), and new lines (from pressing enter).                                                                                                                          |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wrongian"},"content":"| Blank Inputs          | Inputs entered by you that are either empty or only contain whitespace characters.                                                                                                                                                                                                                                            |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wrongian"},"content":"| GUI                   | Stands for graphical user interface. It is a visual way of interacting with Notarius via menus, lists, buttons, etc.                                                                                                                                                                                                          |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wrongian"},"content":"| Parameter             | A parameter is a piece of information you give to a command so Notarius knows what to do.                                                                                                                                                                                                                                     |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103T-T17-1/tp/releases).\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * Under `Assets` of the latest release, click on `Notarius.jar` to download it.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Copy the file to an empty folder where you want to store all your contact information for Notarius.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Follow the steps for your device:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinniyee"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003eWindows","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    1. Copy the path of the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        - Right-click the folder and select \"Copy as Path\".","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    2. Open a command terminal","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        - Press Win + X, then select Terminal.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    3. Navigate to the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        - Type \"cd\" and paste the copied path, then press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    4. Run the application","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        - Type \"java -jar Notarius.jar\" and press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinniyee"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinniyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinniyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinniyee"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003eMacOS","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinniyee"},"content":"    ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    1. Copy the path of the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        - Right-click the folder, hold Opt, then click \"Copy (folder name) as Pathname\".","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    2. Open a command terminal","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        - Press Cmd + Space to open Spotlight, type \"Terminal\", and press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    3. Navigate to the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        - Type \"cd\" and paste the copied path, then press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    4. Run the application","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        - Type \"java -jar Notarius.jar\" and press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinniyee"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinniyee"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003eLinux","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    1. Copy the path of the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        - Click the address bar of the folder (this might require pressing Ctrl + L).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        - Copy with Ctrl + C.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    2. Open a command terminal","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        - Press Ctrl + Alt + T.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    3. Navigate to the folder","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        - Type \"cd\" and paste the copied path, then press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    4. Run the application","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        - Type \"java -jar Notarius.jar\" and press Enter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xinniyee"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"## Navigating the GUI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Basic Orientation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/userinterface1.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Contact Card","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/userinterface2.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Contact Details","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/userinterface3.png\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/p\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wrongian"},"content":"### Understanding Command Formats","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wrongian"},"content":"#### Command Words","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Wrongian"},"content":"Each command starts with a command word, such as `add`, `list`, `exit`, etc.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Wrongian"},"content":"A command word tells Notarius what action you want to perform, like adding a client contact or listing all client contacts.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source: **Notes about command words:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Wrongian"},"content":"Commands words are case sensitive. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Wrongian"},"content":"Always type command words exactly as shown.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Wrongian"},"content":"Example:  `add` command word is different from `Add` or `ADD`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Wrongian"},"content":"#### Parameters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Wrongian"},"content":"Parameters are written in `UPPER_CASE`. These are placeholders you replace with your own info.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Wrongian"},"content":"Example: In `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source: **Notes about parameters:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Wrongian"},"content":"Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Wrongian"},"content":"Example: If the command specifies `n/NAME p/PHONE_NUMBER`,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Wrongian"},"content":"`p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Wrongian"},"content":"#### Optional Parameters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Wrongian"},"content":"Items in square brackets are optional. It means you do not have to include this piece of information","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Wrongian"},"content":"if you do not want to.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Wrongian"},"content":"Examples: `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Wrongian"},"content":"#### ... Parameters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Wrongian"},"content":"Items with `…`​ after them. You can use it once, multiple, or not at all.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Wrongian"},"content":"Examples: ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Wrongian"},"content":"`n/NAME [t/TAG]…​` can be used as","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Wrongian"},"content":"No Tag:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Wrongian"},"content":"`n/NAME`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Wrongian"},"content":"One Tag:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Wrongian"},"content":"`t/case44`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Wrongian"},"content":"Many Tags:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Wrongian"},"content":"`t/case44 t/personal injury`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Wrongian"},"content":"`t/case44 t/personal injury t/referred`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source: **Notes about parameters:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Wrongian"},"content":"Extraneous parameters for commands that do not take in parameters (such as `list`, `exit`, `undo` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Wrongian"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Wrongian"},"content":"Example: if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Wrongian"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Wrongian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Wrongian"},"content":"If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Basic Features","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"#### Viewing help : `help`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"The `help` command provides guidance on how to use the application, including available commands and their formats.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: `help [COMMAND]`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"xinniyee"},"content":"![help_Message.png](images/helpMessage.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"xinniyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"* Display general help message when used without arguments.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"* Provides specific command help with format and example of usage","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"  when a valid command name is specified.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* Case-insensitive command lookup (e.g.`help FiNd` works for `find`).","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* Handles unknown commands gracefully, informing the user if the command does not exist.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* `help add` displays the correct format and usage of the `add` command.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"* `help me` returns: `\"Unknown command! Use \u0027help\u0027 to see available commands.`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"#### Adding a client contact: `add`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"Adds a client contact to the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] [t/ADDITIONAL TAG]…​`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"xinniyee"},"content":"A client contact is considered a duplicate if another client contact has the same email (case-insensitive)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"xinniyee"},"content":"and this duplicate email will be rejected.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/DUI e/betsycrowe@example.com a/Newgate Prison p/1234567 t/case44`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"#### Listing all client contacts : `list`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"#### Editing a client contact : `edit`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"Updates an existing client contact in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [t/ADDITIONAL TAG]…​`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* Edits the client contact at the specified `INDEX`. The index refers to the index number shown in the displayed client contact list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* You must provide at least one of the optional details to update.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"* Any details you change will replace the old ones.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"* If you edit tags, the old tags are removed and replaced with the new ones.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"* To remove all tags, you can type t/ without adding any tag name after it.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"* A client contact is considered a duplicate if another client contact has the same name(case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    and this duplicate name will be rejected.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"xinniyee"},"content":"*  `edit 3 t/Custody t/Case45` Overwrite the currents tag(s) of the 3rd contact with `Custody` and `Case45`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"#### Locating client contacts by name: `find`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"The `find` command allows you to search for contacts based on their name,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"phone number, email, address, or tags.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"Format: `find [n/\"NAME\" \"MORE_NAMES\"] [p/\"PHONE\" \"MORE_PHONES\"]","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"[e/\"EMAIL\" \"MORE_EMAILS\"] [a/\"ADDRESS\" \"MORE_ADDRESSES\"]","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"[t/\"TAG\" \"MORE_TAGS\"] `","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"* Use double quotation marks (\") around each keyword to ensure correct parsing.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g the name `hans` will match `Hans`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* You can search by `name`, `phone number`, `email`, `address`, or `tags`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"* If no prefix (e.g. n/) is given, find by name is assumed.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    * e.g. `find Alice Bernice` is treated as `find n/\"Alice\" \"Bernice\"`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"* Supports OR search: At least one field must match any of the provided keywords.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"* Allows small typos for `name`, `email` and `address` fields:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    - e.g. Searching for `Alce` will match `Alice`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    - Searching for `Bbo@example.com` will match `Bob@example.com.`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* Supports multiple entries per field:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    - e.g. `find n/\"Alice\" \"Bob\" p/\"98765432\" \"91234567\"`,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"      matches contacts named `Alice` or `Bob`, or with phone numbers `98765432` or `91234567`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"* `find Alex` returns `Alex Yeoh`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* `find p/\"87438807\" \"91031282\"` returns `Alex Yeoh` and `David Li`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"* `find n/\"Alxe\" \"Davdi\"` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"#### Deleting client contact(s) : `delete`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"Deletes specified **client** contact(s) from your list of contacts in Notarius.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"clx3210"},"content":"To speed up clearing out your client contacts, **Notarius** allows deleting multiple client contacts quickly,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"clx3210"},"content":"depending on your needs: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"clx3210"},"content":"| Formats                                               | Purpose                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"clx3210"},"content":"|-------------------------------------------------------|-----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"clx3210"},"content":"| Single-delete: `delete INDEX`                         | Deletes a **single** client contact at the specified INDEX                                                |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"clx3210"},"content":"| Ranged-delete: `delete i/START_INDEX-END_INDEX`       | Deletes **consecutive** client contacts whose indexes are between `START_INDEX` to `END_INDEX` inclusive. |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"clx3210"},"content":"| Spaced-delete: `delete i/FIRST_INDEX [MORE_INDEXES]…` | Deletes multiple client contacts from **different** parts of the client contact list by their indexes     |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"clx3210"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tips:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"clx3210"},"content":"* When deleting contacts with same tags, consider using the **find command** followed by **ranged-delete** to speed things up.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"clx3210"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"clx3210"},"content":"* **Single-delete Format:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    * `list` followed by `delete 2`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"clx3210"},"content":"        * Deletes the 2nd client contact displayed in the list of client contacts from the top.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    * `find n/\"Betsy\"` followed by `delete 1`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"        * Deletes the 1st client contact in the displayed results of the `find` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"clx3210"},"content":"* **Ranged-delete Format:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"    * `list` followed by `delete i/1-2`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"clx3210"},"content":"        * Deletes the 1st and 2nd client contacts in the list of client contacts from the top.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    * `find n/\"Alex\"` followed by `delete i/1-2`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        * Deletes the 1st and 2nd client contacts in the displayed results of the `find` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"clx3210"},"content":"* **Spaced-delete Format:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"clx3210"},"content":"    * `list` followed by `delete i/1 2 3`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"clx3210"},"content":"        * Deletes the 1st, 2nd and 3rd client contacts in the list of client contacts from the top.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"![deleteIndexSpaced](images/deleteIndexSpaced.png)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003cspan style\u003d\"font-weight:bold;\"\u003eExample:\u003c/span\u003e Deleting the first 3 client contacts after \u003ccode\u003elist\u003c/code\u003e using","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"\u003ccode\u003edelete i/1-3\u003c/code\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"**:exclamation: Index constraints:**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"* The indexes must refer to the index numbers shown in the displayed client contacts list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"clx3210"},"content":"* The indexes **must be a positive integer** from 1, 2, 3, …","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"* All specified indexes must correspond to some index number shown in the displayed client contacts list, otherwise the command fails.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"* For ranged and spaced delete formats, duplicate indexes specified will be treated *as-if* that index was specified only once.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"clx3210"},"content":"* Up to 100 **unique** indexes (duplicates are not part of this count!) can be specified (either via spaced or ranged delete formats); beyond which the command will fail.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"* At least 1 index should be specified when using ranged or spaced delete formats.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"* For ranged-delete format, `START_INDEX` must be at most equal to `END_INDEX` (For e.g. `delete i/3-2` is invalid).","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Special Features","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"#### Sorting of client contacts : `sort`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"Sort the address book by specified prefix in lexicographical order.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"Format: `sort PREFIX`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"* `sort n/` sorts contacts by ascending names.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"* `sort p/` sorts contacts by ascending phone numbers.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* `sort e/` sorts contacts by ascending emails.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"* `sort a/` sorts contacts by ascending addresses.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"* `sort t/` sorts contacts by ascending tags.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* `sort t/ n/` sorts contacts by tags first, then names.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"* `sort t/ p/` sorts contacts by tags first, then phone numbers.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"* `sort t/ e/` sorts contacts by tags first, then emails.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"* `sort t/ a/` sorts contacts by tags first, the addresses.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"* `sort n/` returns contact by ascending names `Alex`, `Bernice`, `Charlotte`.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"* `sort p/` returns contact by ascending phone numbers `87438807`, `91031282`, `92492021`.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"**:information_source: Notes about sorting:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Adding New Contacts:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"  After performing a sort, newly added contacts will **not** automatically be inserted in the ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"correct sorted order. To maintain the sorted order, you will need to run the `sort` command again after adding the new contact.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Sorting Multiple Tags:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"  It sorts the **first tag** in **alphabetical order**.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"  e.g. `t/colleagues t/friends` will sort by `colleagues` tag first and followed by `friends` tag.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"  e.g. If `t/colleagues t/friends` and `t/lawyer t/colleagues` are sorted, `t/colleagues t/friends` will appear before","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"  `t/lawyer t/colleagues`, because `colleagues` tag comes first in the sorting order.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"#### Pinning a client contact : `pin`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"Pins the specified client contact to the top of the address book.\u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"Does nothing if they were already pinned.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"Format: `pin INDEX`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"* Pins the contact at the specified `INDEX` to the top of the list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2,3, …​","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"* `list` followed by `pin 2` pins the 2nd contact in the address book to the top.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"* `sort p/` followed by `pin 1` pins the 1st contact when sorted according to phone number.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"#### Unpinning a pinned client contact : `unpin`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"Unpins the specified contact from the top of the address book if they were previously pinned.\u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"Does nothing if they were not pinned.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"Format: `unpin INDEX`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"* Unpins the contact at the specified `INDEX` from the top of the list if they were previously pinned.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2,3, …​","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"* `list` followed by `unpin 1` unpins the 1st contact in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"* `sort p/` followed by `unpin 1` unpins the 1st contact when sorted according to phone number.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"Clears all client contacts in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"#### Adding/Changing a note : `note`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"Changes a note of a client contact in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"Format: `note INDEX [nt/NOTE]`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"* Changes the note of the client contact at the specified `INDEX`.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed client contact list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"* `note 3 nt/Away for a long time` changes the note of the 3rd client contact from the top","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"  in the address book into \"Away for a long time\".","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"* `sort n/` followed by `note 2` changes the note of the","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"  2nd client contact from the top listed in the sorted address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"* `note 1` changes the note of the 1st client contact from the top into a blank note.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"#### Viewing a note : `viewnote`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"Displays the contents of a note of a particular client contact in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"Format: `viewnote INDEX`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"* Displays the note of the client contact at the specified `INDEX`.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed client contact list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"* `viewnote 3` displays the note of the 3rd client contact from the top.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"* `viewnote 1` displays the note of the 1st client contact from the top.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"#### Undoing a command : `undo`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"Undoes a command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"Format: `undo`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"* There should be a previous command to undo.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"* `undo` undoes the last command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"* `pin 4` followed by `undo` undoes the pin on the 4th client contact from the top in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"#### Redoing a command : `redo`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"Redoes an undone command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"Format: `redo`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* An undone command is a previously typed command that was reversed by the `undo` command","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"* There should be an undone command to redo.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"* `redo` redoes the last undone command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"* `pin 4` followed by `undo` followed by `redo` results in","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"  there being a pin on the 4th client contact from the top in the address book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"#### Command history","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"clx3210"},"content":"We know it can be **very annoying** to re-type commands consisting of long client details, especially due to typos.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"As such, **Notarius** keeps a history of the command inputs you have entered. When the command history is open,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"the inputs shown are **ordered** from the **most recently** entered input at the **top** to the **least recently**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"entered input at the **bottom**. Furthermore, the **currently selected input** in the command history","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"is automatically entered into the input bar, as shown below:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"![[commandHistoryOrder]](images/commandHistoryOrder.png)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e\u003cspan style\u003d\"font-weight:bold;\"\u003eExample:\u003c/span\u003e Older and newer command inputs in the command history","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"The \u003cspan style\u003d\"font-weight:bold;\"\u003ecurrently selected input\u003c/span\u003e is \"more recently entered command input\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"You can open and navigate through this history by using various shortcuts below, depending on your operating system:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"clx3210"},"content":"**Windows/Linux users:** Use `Ctrl + Up` key combination to scroll up the command history, and `Ctrl + Down` arrow key combinations to scroll down.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"clx3210"},"content":"**macOS users:** Use `Ctrl + Opt + Up` and `Ctrl + Opt + Down` arrow key combinations to respectively scroll up and down instead.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tips:**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"* Pressing **either** of the key combinations above **based on** your operating system will **open** the command history.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"* You can **close** the command history by either pressing `Enter` to submit the command input, or the `Escape` key.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"clx3210"},"content":"* Don\u0027t worry if you typed an invalid command input, simply use the command history to re-access it again. **Notarius** saves them too.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"clx3210"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"clx3210"},"content":"**Scrolling up** or **down** the command history simply refers to moving the **currently selected input** of the command history ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"to a **more recent/newer** or **less recent/older** command input respectively.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":":information_source: **Important Notes:**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"clx3210"},"content":"* When the **currently selected input** is at the top of the command history, scrolling up another time will bring it down to the **oldest** input at the bottom of the command history.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"clx3210"},"content":"* Similarly, when the **currently selected input** is at the bottom of the command history, scrolling down another time brings it back to the **newest** input at the top of the command history.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":":exclamation: **Constraints:**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"* Blank inputs (including empty inputs) are not useful command inputs and won\u0027t be added.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"clx3210"},"content":"* Restarting or closing the application will clear the command history.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"* Inputs that are duplicates of the previously saved command history input will not be added another time.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"* Up to 20 of your most recently entered inputs will be saved in the command history.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"Data from Notarius is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"Notarius data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"**Q: How can I check my Java version?**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"A: You can open a command line and type `java -version`. If you do not have Java installed, you can install **Java 17**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"using the Oracle guide [here](https://www.oracle.com/java/technologies/downloads/#java17). Alternatively, you can install the OpenJDK version. For macOS users, you may wish to follow the instructions [here](https://nus-cs2103-ay2425s2.github.io/website/admin/programmingLanguages.html).","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"**Q: How do I save my data?**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"A: Data is saved in the hard disk automatically after any commands that changes the data.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"**Q: Do I need an internet connection to use Notarius?**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"A: All functionalities can be used offline, hence no internet connection is required.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"**Q: What are the available commands in Notarius?**\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"A: Please refer to the [Command Summary](#command-summary) for the list of available commands.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"| Action              | Formats and Examples                                                                                                                                                                                                                                                              |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"| **Add**             | Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] [t/ADDITIONAL TAG]…` \u003cbr\u003e \u003cbr\u003e Example: `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/plaintiff t/client`                                                                           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"| **Clear**           | Format: `clear` \u003cbr\u003e \u003cbr\u003e Example: `clear`                                                                                                                                                                                                                                        |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"| **Delete**          | Single-delete Format: `delete INDEX` \u003cbr\u003e \u003cbr\u003e Example: `delete 3` \u003cbr\u003e \u003cbr\u003e Ranged-delete Format: `delete i/START_INDEX-END_INDEX` \u003cbr\u003e \u003cbr\u003e Example: `delete i/1-2` \u003cbr\u003e \u003cbr\u003e Spaced-delete Format: `delete i/FIRST_INDEX [MORE_INDEXES]… ` \u003cbr\u003e \u003cbr\u003e Example: `delete i/1 3 5` |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"| **Edit**            | Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG] [t/ADDITIONAL TAG]…` \u003cbr\u003e \u003cbr\u003e Example: `edit 2 n/James Lee e/jameslee@example.com`                                                                                                                   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"| **Find**            | Format: `find [n/\"NAME\" \"MORE_NAMES\"] [p/\"PHONE\" \"MORE_PHONES\"] [e/\"EMAIL\" \"MORE_EMAILS\"] [a/\"ADDRESS\" \"MORE_ADDRESSES\"] [t/\"TAG\" \"MORE_TAGS\"]` \u003cbr\u003e \u003cbr\u003e Example: `find n/\"James\" \"Jake\"`                                                                                        |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"| **List**            | Format: `list` \u003cbr\u003e \u003cbr\u003e Example: `list`                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"| **Add/Change Note** | Format: `note INDEX [nt/NOTE]` \u003cbr\u003e \u003cbr\u003e Example: `note 3 nt/Currently in jail.`                                                                                                                                                                                                  |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"| **View Note**       | Format: `viewnote INDEX` \u003cbr\u003e \u003cbr\u003e Example: `viewnote 3`                                                                                                                                                                                                                          |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"| **Pin**             | Format: `pin INDEX` \u003cbr\u003e \u003cbr\u003e Example: `pin 2`                                                                                                                                                                                                                                    |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"| **Unpin**           | Format: `unpin INDEX` \u003cbr\u003e \u003cbr\u003e Example: `unpin 1`                                                                                                                                                                                                                                |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"| **Sort**            | Format: `sort ATTRIBUTE` \u003cbr\u003e \u003cbr\u003e Example: `sort n/`                                                                                                                                                                                                                             |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"| **Undo**            | Format: `undo` \u003cbr\u003e \u003cbr\u003e Example: `undo`                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"| **Redo**            | Format: `redo` \u003cbr\u003e \u003cbr\u003e Example: `redo`                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"| **Help**            | Format: `help [COMMAND]` \u003cbr\u003e \u003cbr\u003e Example: `help add`                                                                                                                                                                                                                            |","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"xinniyee"},"content":"| **Exit**            | Format: `exit` \u003cbr\u003e \u003cbr\u003e Example: `exit`                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"xinniyee":15,"Wrongian":68,"clx3210":29,"-":537}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class PersonDetailPanel","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class PersonDetailCard","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandHistoryMenu","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandHistoryMenu","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonDetailPanel","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"carineang"},"content":"PersonDetailPanel -down-\u003e \"0..1\" PersonDetailCard","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"CommandHistoryMenu --|\u003e UiPart","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonDetailPanel --|\u003e UiPart","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonDetailCard --|\u003e UiPart","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"PersonCard -[hidden]right- PersonDetailCard : \" \"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonCard ..down..\u003e Model","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonDetailCard ..down..\u003e Model","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"PersonDetailPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"StatusBarFooter -[hidden]left- CommandHistoryMenu","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"carineang":1,"-":74}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the person(s) identified by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.)\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"clx3210"},"content":"            + \"For deleting up to 100 persons at once:\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"1. (Spaced format) Parameters: i/INDEX1 INDEX2 INDEX3 ... INDEXN (Each INDEX must be positive \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"clx3210"},"content":"            + \"integers between 1 and 2147483647 inclusive, \\nat most 100 distinct indexes are allowed.)\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \" Example: \" + COMMAND_WORD + \" i/1 2 3 4 5\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"2. (Ranged format) Parameters: i/START_INDEX-END_INDEX (START_INDEX and END_INDEX \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"clx3210"},"content":"            + \"must be positive integers between 1 and 2147483647 inclusive \\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"clx3210"},"content":"            + \"that differ by at most 100, and START_INDEX is at most END_INDEX.)\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \" Example: \" + COMMAND_WORD + \" i/9-99\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person(s): \"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + System.lineSeparator()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"%1$s\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /** Specifies the highest index to be the element at the start of {@code targetIndexes}. */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Integer HIGHEST_TARGET_INDEX_POSITION \u003d 0;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * This instance variable must obey the following constraints:","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * 1. Unique","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * 2. decreasing order (by 0-based index)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * 3. Immutable","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * 4. Non-empty","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.targetIndexes \u003d Collections.singletonList(targetIndex);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a delete command specifying multiple unique indexes to delete.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param targetIndexes The indexes of persons to be deleted.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public DeleteCommand(Set\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.targetIndexes \u003d List.copyOf(targetIndexes","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted((index1, index2) -\u003e index2.getZeroBased() - index1.getZeroBased())","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toList());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert !targetIndexes.isEmpty();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Delete operation fails (uncommited) if at least 1 index is out of range","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (targetIndexes.get(HIGHEST_TARGET_INDEX_POSITION).getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e deletedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            deletedPersons.add(personToDelete);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collections.reverse(deletedPersons);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(deletedPersons)));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return targetIndexes.equals(otherDeleteCommand.targetIndexes);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            builder.add(\"targetIndex\", targetIndex);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"clx3210":5,"-":118}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.descriptors.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.descriptors.EditPersonDescriptor;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.) \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"ADDITIONAL TAG]...\\n\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":110}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Displays help information for the user.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_NOT_FOUND \u003d \"Unknown command! Use `help` to see available commands.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Usage: help [COMMAND]\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"  - `help` : Displays a list of available commands.\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"  - `help \u003ccommand\u003e` : Shows detailed usage instructions for the specified command.\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: help find\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, String\u003e COMMAND_HELP;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        COMMAND_HELP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(AddCommand.COMMAND_WORD, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(DeleteCommand.COMMAND_WORD, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(EditCommand.COMMAND_WORD, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(PinCommand.COMMAND_WORD, PinCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(UnpinCommand.COMMAND_WORD, UnpinCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(FindCommand.COMMAND_WORD, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(NoteCommand.COMMAND_WORD, NoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(ViewNoteCommand.COMMAND_WORD, ViewNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(SortCommand.COMMAND_WORD, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(ListCommand.COMMAND_WORD, \"Usage: list\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"Lists all contacts in the address book.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(ExitCommand.COMMAND_WORD, \"Usage: exit\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"Exits the program.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(UndoCommand.COMMAND_WORD, \"Usage: undo\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"Undoes the last command\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        COMMAND_HELP.put(RedoCommand.COMMAND_WORD, \"Usage: redo\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"Redoes the effect of last undo\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinniyee"},"content":"        COMMAND_HELP.put(ClearCommand.COMMAND_WORD, \"Usage: clear\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinniyee"},"content":"                + \"Clears all contacts in the address book.\\n\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final String commandName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a HelpCommand with no arguments (shows all commands).","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public HelpCommand() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.commandName \u003d null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a HelpCommand for a specific command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param commandName The name of the command to show help for.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public HelpCommand(String commandName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.commandName \u003d commandName.toLowerCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Executes the HelpCommand to display help information to the user.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If no specific command is provided, it displays a general help message with a list of available commands.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If a specific command is provided, it shows detailed help information for that command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If the command is not recognized, it informs the user that the command is unknown and suggests using `help`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * to see all available commands.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param model The model object which contains the data of the application.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @return A CommandResult containing the help message to be shown to the user.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         The message will either be the list of commands, the details for a specific command,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         or an error message for an unknown command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // position of the commit does not matter since help","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // command does not modify the address book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // so put the commit before all the statements","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // if in the future it does modify then, can put the commit to after its modified","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (commandName \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            String helpMessage \u003d COMMAND_HELP.get(commandName);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            if (helpMessage !\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                return new CommandResult(helpMessage);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                return new CommandResult(COMMAND_NOT_FOUND);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the command name for this HelpCommand.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * If no command name was specified, it returns null.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return The command name as a String.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String getCommandName() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return commandName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"xinniyee":2,"-":109}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.descriptors.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.descriptors.EditPersonDescriptor;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Changes a note of a {@code Person} identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By default, a {@code Person} always has a note even if they don\u0027t enter any, it is just an empty String.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Changes the note of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.) \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NOTE + \"Note]\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NOTE + \"Does not like to be called\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOTE_PERSON_SUCCESS \u003d \"Changed Note: %1$s\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String noteString;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param targetIndex of the person in the filtered person list to change notes","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param noteString new value of the note","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public NoteCommand(Index targetIndex, String noteString) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(targetIndex, noteString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.noteString \u003d noteString;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToNote \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor newDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Note newNote \u003d new Note(noteString);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        newDescriptor.setNote(newNote);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToNote, newDescriptor);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.setPerson(personToNote, editedPerson);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_NOTE_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        NoteCommand otherNoteCommand \u003d (NoteCommand) other;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherNoteCommand.targetIndex)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 noteString.equals(otherNoteCommand.noteString);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"noteString\", noteString)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":94}},{"path":"src/main/java/seedu/address/logic/commands/PinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.descriptors.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Pin;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.descriptors.EditPersonDescriptor;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Pins a person identified by the index number used in the last displayed person listing.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The pinned person will always appear at the top of the list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PinCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"pin\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Pins the person identified by the index number used in the last person listing.\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.)\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PIN_PERSON_SUCCESS \u003d \"Pinned %1$d\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PIN_PERSON_ALREADY_PINNED \u003d \"%1$d is already pinned\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Pin pin;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a PinCommand to pin the specified person at the given index.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param index The index of the person to be pinned.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PinCommand(Index index) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.pin \u003d new Pin(true);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Executes the pin command, moving the selected person to the top of the list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param model The model containing the list of persons.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return A CommandResult indicating the success of the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws CommandException If the index is out of bounds.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person personToPin \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (personToPin.getPin().isPinned()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_PIN_PERSON_ALREADY_PINNED, index.getOneBased()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor newDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Pin newPin \u003d new Pin(pin.isPinned());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        newDescriptor.setPin(newPin);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToPin, newDescriptor);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.setPerson(personToPin, editedPerson);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.pinPerson(editedPerson);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_PIN_PERSON_SUCCESS, index.getOneBased()));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof PinCommand)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PinCommand e \u003d (PinCommand) other;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return index.equals(e.index);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":97}},{"path":"src/main/java/seedu/address/logic/commands/UnpinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.descriptors.EditPersonDescriptor.createEditedPerson;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Pin;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.descriptors.EditPersonDescriptor;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Unpins a person identified by the index number used in the last displayed person listing if the person was","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * previously pinned.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UnpinCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"unpin\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Unpins the person identified by the index number used in the last person listing if they were pinned\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.)\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNPIN_PERSON_SUCCESS \u003d \"Unpinned %1$d\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNPIN_PERSON_NOT_PINNED \u003d \"%1$d is not pinned\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Boolean isPinned;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an UnpinCommand to unpin the specified person at the given index.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param index The index of the person to be unpinned.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public UnpinCommand(Index index) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.isPinned \u003d false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Executes the unpin command, removing the pin status from the person if they were previously pinned.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param model The model containing the list of persons.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return A CommandResult indicating the success of the command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws CommandException If the index is out of bounds.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person personToUnpin \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!personToUnpin.getPin().isPinned()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_UNPIN_PERSON_NOT_PINNED, index.getOneBased()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor newDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Pin unPin \u003d new Pin(isPinned);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        newDescriptor.setPin(unPin);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToUnpin, newDescriptor);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.setPerson(personToUnpin, editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.unpinPerson(editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_UNPIN_PERSON_SUCCESS, index.getOneBased()));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof UnpinCommand)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UnpinCommand e \u003d (UnpinCommand) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return index.equals(e.index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":97}},{"path":"src/main/java/seedu/address/logic/commands/ViewNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Displays the note of a {@code Person} identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ViewNoteCommand extends Command {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"viewnote\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Displays the note of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"clx3210"},"content":"            + \"Parameters: INDEX (must be a positive integer between 1 and 2147483647 inclusive.)\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_VIEW_NOTE_PERSON_SUCCESS \u003d \"Successfully displaying note: \\n %1$s\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param targetIndex of the person in the filtered person list to change notes","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ViewNoteCommand(Index targetIndex) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Note note \u003d personToView.getNote();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.commit();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_NOTE_PERSON_SUCCESS, note.toString()));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof ViewNoteCommand)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ViewNoteCommand otherViewNoteCommand \u003d (ViewNoteCommand) other;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherViewNoteCommand.targetIndex);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"clx3210":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wrongian"},"content":"            + \"A special character must be followed by at least one alphanumeric character.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinniyee"},"content":"        return value.toLowerCase().equals(otherEmail.value.toLowerCase());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"xinniyee":1,"Wrongian":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.person.Note.createDefaultNote;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Note note;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Pin pin;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every parameter must be present and not null.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(name, phone, email, address, tags, createDefaultNote());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Person constructor that includes notes.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Note note) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.note \u003d note;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.pin \u003d new Pin(false);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Person constructor that includes notes and pins.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Note note, Set\u003cTag\u003e tags, Pin pin) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, note, tags, pin);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.note \u003d note;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.pin \u003d pin;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Note getNote() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return note;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Pin getPin() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return pin;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xinniyee"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 note.equals(otherPerson.note)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 pin.equals(otherPerson.pin);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags, note, pin);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"note\", note)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"pin\", pin)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"xinniyee":1,"-":155}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinniyee"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.PinCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UnpinCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewNoteCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2425s2-cs2103t-t17-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Here are the available commands:\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"1. \u0027\" + AddCommand.COMMAND_WORD + \"\u0027: Add a person.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"2. \u0027\" + ExitCommand.COMMAND_WORD + \"\u0027: Exit the program.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"3. \u0027\" + FindCommand.COMMAND_WORD + \"\u0027: Find a person based on keyword.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"4. \u0027\" + SortCommand.COMMAND_WORD + \"\u0027: Sort the list of persons.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"5. \u0027\" + ListCommand.COMMAND_WORD + \"\u0027: List all persons.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"6. \u0027\" + DeleteCommand.COMMAND_WORD + \"\u0027: Delete a person.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"7. \u0027\" + EditCommand.COMMAND_WORD + \"\u0027: Edit a person\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"8. \u0027\" + PinCommand.COMMAND_WORD + \"\u0027: Pins a person.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"9. \u0027\" + UnpinCommand.COMMAND_WORD + \"\u0027: Unpins a person.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"10. \u0027\" + NoteCommand.COMMAND_WORD + \"\u0027: Change note of a person.\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"11. \u0027\" + ViewNoteCommand.COMMAND_WORD + \"\u0027: view note of a person\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"12. \u0027\" + UndoCommand.COMMAND_WORD + \"\u0027: Undoes the last command\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"13. \u0027\" + RedoCommand.COMMAND_WORD + \"\u0027: Redoes the effect of the last undo\\n\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinniyee"},"content":"            + \"14. \u0027\" + ClearCommand.COMMAND_WORD + \"\u0027: Clears all client contacts in the address book.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Use `help \u003ccommand\u003e` for detailed information about a specific command.\\n\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Use `Ctrl + Up` and `Ctrl + Down` arrow keys to cycle up and down the command history.\\n\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"MacOS users: Use `Ctrl + Opt + Up` and `Ctrl + Opt + Down` instead.\\n\\n\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Refer to the full user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow with a custom help message.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param message The custom message to be displayed in the help window.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root, String message) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpMessage.setText(message);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"xinniyee":2,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.descriptors.EditPersonDescriptor;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinniyee"},"content":"    public static final String VALID_EMAIL_ALICE \u003d \"alice@example.com\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NOTE_AMY \u003d \"\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_NOTE_BOB \u003d \"is overseas for a business trip\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"xinniyee":1,"-":134}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinniyee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinniyee"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinniyee"},"content":"        Person editedAlice \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinniyee"},"content":"        // different email, all other attributes same -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinniyee"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinniyee"},"content":"        // email differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinniyee"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB.toLowerCase()).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different Note -\u003e returns false","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", note\u003d\" + ALICE.getNote() + \", pin\u003d\" + ALICE.getPin() + \"}\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"xinniyee":7,"-":95}}]
