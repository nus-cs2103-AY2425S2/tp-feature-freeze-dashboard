[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# MedLogger Developer Guide","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DengTianle"},"content":"This project is based on [addressbook-level-3 (AB3)](https://github.com/se-edu/addressbook-level3).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DengTianle"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DengTianle"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts such as `CommandBox`, `ResultDisplay`, `PersonListPanel`, `VisitListPanel`, and `StatusBarFooter`. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures common behavior for JavaFX UI components.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DengTianle"},"content":"The `UI` component uses the JavaFX UI framework. The layout of these UI parts is defined in corresponding `.fxml` files located in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to the `Model` so that the UI can update automatically with the modified data.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* displays both a list of persons (`PersonListPanel`) and a list of visits (`VisitListPanel`), bound to the filtered and sorted lists provided by the `Model`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on classes in the `Model` component, as it displays `Person` and `Visit` objects stored in the `Model`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DengTianle"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `MedLoggerParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `MedLoggerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `MedLoggerParser` returns back as a `Command` object.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DengTianle"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the Med Logger data i.e., all `Person` and `Visit` objects (which are contained in `UniquePersonList` and `UniqueVisitList` respectively).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` and `Visit` objects (e.g., results of a search query) as separate _filtered_ lists which are exposed to outsiders as unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cVisit\u003e` that can be observed e.g. the UI can be bound to these lists so that the UI automatically updates when the data changes.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `SortedList\u003cVisit\u003e` that wraps around the filtered visit list to enable dynamic sorting based on user commands, such as sorting visits by date in ascending or descending order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `MedLogger`, which `Person` references. This allows `MedLogger` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DengTianle"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-W09-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both Med Logger data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `MedLoggerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"### AddVisit feature","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"![AddVisitCommand Sequence Diagram.png](images/AddVisitCommand%20Sequence%20Diagram.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"The current implementation of AddVisitCommand works as following: it will pass the visit to the model, and the model will then call","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"the addVisit command of Medlogger, which check if that visit belongs to someone already exists in Medlogger. The check is done using the NRIC of the person of visit,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"if NRIC exists as key of hashmap, then the person already exists in Medlogger and NRIC is used to retrieve the person, then","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"add the visit to Medlogger. Otherwise a CommandException is throw, and reject adding the visit. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedMedLogger`. It extends `MedLogger` with an undo/redo history, stored internally as an `medLoggerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `VersionedMedLogger#commit()` — Saves the current Med Logger state in its history.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `VersionedMedLogger#undo()` — Restores the previous Med Logger state from its history.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedMedLogger#redo()` — Restores a previously undone Med Logger state from its history.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitMedLogger()`, `Model#undoMedLogger()` and `Model#redoMedLogger()` respectively.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedMedLogger` will be initialized with the initial Med Logger state, and the `currentStatePointer` pointing to that single Med Logger state.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the Med Logger. The `delete` command calls `Model#commitMedLogger()`, causing the modified state of the Med Logger after the `delete 5` command executes to be saved in the `MedLoggerStateList`, and the `currentStatePointer` is shifted to the newly inserted Med Logger state.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitMedLogger()`, causing another modified Med Logger state to be saved into the `MedLoggerStateList`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitMedLogger()`, so the Med Logger state will not be saved into the `MedLoggerStateList`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoMedLogger()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous Med Logger state, and restores the Med Logger to that state.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial MedLogger state, then there are no previous MedLogger states to restore. The `undo` command uses `Model#canUndoMedLogger()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoMedLogger()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the Med Logger to that state.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `MedLoggerStateList.size() - 1`, pointing to the latest Med Logger state, then there are no undone MedLogger states to restore. The `redo` command uses `Model#canRedoMedLogger()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the Med Logger, such as `list`, will usually not call `Model#commitMedLogger()`, `Model#undoMedLogger()` or `Model#redoMedLogger()`. Thus, the `MedLoggerStateList` remains unchanged.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitMedLogger()`. Since the `currentStatePointer` is not pointing at the end of the `MedLoggerStateList`, all Med Logger states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"### SortVisits feature","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"DengTianle"},"content":"\u003cpuml src\u003d\"diagrams/SortVisitsDiagram.puml\" width\u003d\"1500\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"The `SortVisitsCommand` allows users to sort the current visit list based on the visit date and time. It supports both ascending and descending order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"This command uses a comparator to sort the list of visits by comparing the `DateTime` field. Internally, it calls the `model.sortFilteredVisitList(comparator)` method, which performs the sorting and updates the predicate of the `FilteredList` to reflect the new sorted order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"Due to the immutability of JavaFX’s `FilteredList`, direct sorting is not allowed. Instead, the list is copied and sorted separately, and then the model updates the predicate so that the UI reflects the sorted order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"The command uses the following logic:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"- If `isDescending` is `false`, the comparator sorts in natural ascending order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"- If `isDescending` is `true`, the comparator is reversed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"The visit panel (`VisitListPanel`) will reflect the sorted order immediately as it is bound to the filtered list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"### ListVisits Feature","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"The `listvisits` command displays a list of visit records currently stored in the MedLogger. Users can optionally limit the number of visits displayed using the `l/` prefix or filter by NRIC using `n/`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"The implementation follows a standard command-parsing-execution pipeline:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"DengTianle"},"content":"\u003cpuml src\u003d\"diagrams/ListVisitsCommandSequenceDiagram.puml\" width\u003d\"1300\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"1. User inputs the `listvisits` command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"2. The `MedLoggerParser` routes the command to the `ListVisitsCommandParser`, which optionally parses prefixes like `l/` (limit) and `n/` (NRIC).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"3. A `ListVisitsCommand` is constructed with the parsed arguments and executed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"4. It updates the filtered visit list in `ModelManager` using a custom predicate.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"5. The UI observes the updated list and reflects the changes immediately.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"This design reuses the filtered list mechanism also used for persons, allowing seamless display updates via JavaFX binding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"* Doctors or clinic assistants managing patient visit records in small private clinics","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"* Prefer fast, lightweight tools over complex, slow hospital systems","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"* Comfortable using command-line interfaces","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"* Need quick access to patient records during consultations","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* Prefer keyboard-based workflows to minimize disruptions during work","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Value proposition**:  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"A command-line tool for efficiently logging and retrieving patient visit records, symptoms, and treatments, enabling faster access to patient histories and smoother clinic operations compared to traditional GUI-based systems.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                               | So that I can…​                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"|----------|-------------------|-------------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"| `* * *` | doctor            | create a patient visit entry                                | log patient visits quickly                                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"| `* * *` | doctor            | record visit dateTime and time                                 | track when each visit happened                            |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"| `* * *` | doctor            | record symptoms and treatments for a visit                 | document medical details accurately                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"| `* * *` | doctor            | delete patient visit records                               | correct mistakes                                          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"| `* * *` | doctor            | view all patient visit information                         | review patient history                                    |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | retrieve a patient’s visit history                         | make informed treatment decisions                         |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | retrieve today’s patients                                  | check which patients I haven\u0027t seen                      |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | filter records based on severity                           | focus on critical cases                                   |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | filter patient records by symptoms                         | identify patterns in medical history                      |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | sort patient records by dateTime                               | find recent visits easily                                 |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"| `* *`   | doctor            | track patients who received specific medication            | ensure proper follow-up care                              |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"| `* *`   | clinic assistant  | edit patient records                                       | keep information accurate                                 |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"| `* *`   | clinic assistant  | generate a summary of a patient’s visit history            | prepare reports for doctors                               |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"| `* *`   | clinic assistant  | search for patients by partial name matches                | find records quickly                                      |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"| `* *`   | clinic assistant  | export patient visit records to CSV                        | share reports with external healthcare providers          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* *`   | clinic manager    | view all patients seen by a specific doctor                | evaluate doctor performance                               |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `*`     | clinic assistant  | sort visit dates                                           | schedule follow-ups easily                                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"| `*`     | doctor            | track recurring symptoms                                   | detect chronic conditions                                 |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"| `*`     | clinic assistant  | create backup copies of records                            | protect against data loss                                 |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"| `*`     | clinic assistant  | update patient contact information                         | maintain communication accuracy                           |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"| `*`     | clinic assistant  | view multiple patient records simultaneously               | compare patient statuses                                  |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"| `*`     | clinic assistant  | log patient complaints about visits                        | help the clinic improve service                           |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"| `*`     | doctor            | set reminders for follow-up visits                         | ensure patients return as needed                          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"| `*`     | doctor            | undo the previously executed command                       | correct recent actions easily                             |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `MedLogger` and the **Actor** is the user unless specified otherwise)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Use case: Add a symptom to a patient\u0027s visit**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"**MSS (Main Success Scenario)**  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"1. User requests to list visit records  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"2. MedLogger displays a list of visit records  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"3. User selects a visit by index and inputs the symptom  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"4. MedLogger adds the symptom to the visit record  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Extensions**  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"* 2a. The visit list is empty.  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"  - Use case ends.  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"* 3a. The selected index is invalid.  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"  - 3a1. MedLogger shows an error message.  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"  - Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"**Use case: Generate a summary of a patient’s visit history**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"**MSS (Main Success Scenario)**  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"1. User searches for a patient by name  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"2. MedLogger shows a list of matching patient records  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"3. User selects the correct patient  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"4. MedLogger generates and displays a summary of visit history  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Extensions**  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 1a. No matching patients found.  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"  - Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. Should work on any mainstream OS with Java 17 or higher installed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"2. Should handle up to 1000 patient records without noticeable performance degradation.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"3. Typing commands should be faster than using a mouse for users with average typing speed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"4. Every modification to patient records should be logged with a timestamp, user ID, and action performed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"5. System response time should be under 1 second for all typical operations.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"6. Should handle simultaneous access by multiple users without data corruption (future consideration).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"* **Visit record**: A log entry containing details of a patient\u0027s consultation, symptoms, and treatments","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"* **Symptom**: A medical complaint or issue reported by the patient","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Medication**: Any prescribed drug or treatment recorded in the system","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"* **CSV**: Comma-Separated Values, a file format used for exporting data","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"* **CLI**: Command-Line Interface, a text-based way to interact with the software","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"* **Partial name match**: A search that returns results even if only part of a patient’s name is entered","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Visiting a patient","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Adding a visit to a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Prerequisites: Person must exist in the contact list with valid NRIC.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Test case: `visit n/John Doe i/S1234567A r/Headache d/2025-04-04 10:00`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"      Expected: Visit is added. Confirmation message is shown.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Test case: `visit n/John Doe i/S1234567A r/Back pain`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"      Expected: Visit is added with current date and time. Confirmation message is shown.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"   1. Test case: `visit n/Someone i/S0000000X r/Cough`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"      Expected: Error message shown — person does not exist.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Listing visits","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. Listing all visits","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Test case: `listvisits`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"      Expected: All visits are shown in the visit panel.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Test case: `listvisits l/3`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Expected: Top 3 visits are shown.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Test case: `listvisits n/S1234567A`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"      Expected: All visits related to that NRIC are shown.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Test case: `listvisits n/S1234567A l/2`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"      Expected: 2 most recent visits of the patient are shown.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Sorting visits","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. Sorting visits by date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Test case: `sortvisits`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Expected: Visit list sorted in ascending date-time order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `sortvisits desc`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"      Expected: Visit list sorted in descending date-time order.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Editing a visit","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Editing visit information","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Prerequisites: `listvisits` must be used beforehand.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Test case: `editvisit 1 r/Updated remark`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"      Expected: The remark of the first visit in the list is updated.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Test case: `editvisit 1 d/2025-04-10 14:00`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"      Expected: Visit date is updated.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Clearing visit panel","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Clearing the visit list panel","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Test case: `clearvisits`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Expected: Visit panel is cleared.","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"-":541,"DengTianle":9}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DengTianle"},"content":"Person *--\u003e Nric","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DengTianle"},"content":"Person *--\u003e Remark","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"-":21,"DengTianle":2}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DengTianle"},"content":"Class Nric","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DengTianle"},"content":"Class Remark","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DengTianle"},"content":"Person *--\u003e Nric","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DengTianle"},"content":"Person *--\u003e Remark","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DengTianle"},"content":"Name -[hidden]right-\u003e Nric","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DengTianle"},"content":"Nric -[hidden]right-\u003e Phone","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"-":53,"DengTianle":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearVisitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Clears the VisitListPanel display by removing all visits from the filtered list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearVisitsCommand extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clearvisits\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Cleared all visits from the panel.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Taoseeker"},"content":"        model.clearVisits();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Taoseeker":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the Med Logger to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"list l/LIMIT\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Taoseeker"},"content":"    public static final String MESSAGE_LIMIT_CONSTRAINTS \u003d \"Limit must be non-negative integer\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Integer limit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ListCommand() {};","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ListCommand(int limit) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (this.limit \u003d\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            model.updateSubFilteredPersonList(this.limit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            int numOfPersons \u003d this.limit \u003e model.size() ? model.size() : this.limit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return new CommandResult(\"Listed \" + numOfPersons + \" persons\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"Taoseeker":2,"-":41}},{"path":"src/main/java/seedu/address/logic/parser/AddVisitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SYMPTOM;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddVisitCommand;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Medication;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddVisitCommand object","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddVisitCommandParser implements Parser\u003cAddVisitCommand\u003e {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddVisitCommand","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddVisitCommand object for execution.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * A dummy person instance is created to instantiate a visit","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddVisitCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                args,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DengTianle"},"content":"                PREFIX_NRIC, PREFIX_DATE, PREFIX_REMARK,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                PREFIX_SYMPTOM, PREFIX_DIAGNOSIS, PREFIX_MEDICATION, PREFIX_FOLLOWUP","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DengTianle"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVisitCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DengTianle"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_DATE,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Taoseeker"},"content":"                PREFIX_REMARK, PREFIX_SYMPTOM, PREFIX_DIAGNOSIS, PREFIX_MEDICATION, PREFIX_FOLLOWUP);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Optional date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DateTime dateTime;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String dateInput \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (!DateTime.isValidDate(dateInput)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            dateTime \u003d new DateTime(dateInput);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            dateTime \u003d DateTime.now(); // Use current time if not specified","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Optional visit fields","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Symptom symptom \u003d new Symptom(argMultimap.getValue(PREFIX_SYMPTOM).orElse(\"\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Diagnosis diagnosis \u003d new Diagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).orElse(\"\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Medication medication \u003d new Medication(argMultimap.getValue(PREFIX_MEDICATION).orElse(\"\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FollowUp followUp \u003d new FollowUp(argMultimap.getValue(PREFIX_FOLLOWUP).orElse(\"\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DengTianle"},"content":"        Person dummyPerson \u003d Person.createDummyPerson(nric);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Visit visit \u003d new Visit(dummyPerson, dateTime, remark, symptom, diagnosis, medication, followUp);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new AddVisitCommand(visit);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"Taoseeker":1,"-":76,"DengTianle":4}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIMIT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code ListCommand} object.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommandParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments and returns a {@code ListCommand}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param args Input string after command word.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return A {@code ListCommand} based on the parsed input.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LIMIT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Taoseeker"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_LIMIT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        int limit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            limit \u003d Integer.parseInt(argMultimap.getValue(PREFIX_LIMIT).orElse(\"\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Taoseeker"},"content":"            if (limit \u003c 0) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Taoseeker"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Taoseeker"},"content":"                    + \"\\n\" + ListCommand.MESSAGE_LIMIT_CONSTRAINTS)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Taoseeker"},"content":"                );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Taoseeker"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException ive) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ListCommand(limit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Taoseeker":6,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/ListVisitsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIMIT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SYMPTOM;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TODAY;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListVisitsCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Diagnosis;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Medication;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Symptom;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code ListVisitsCommand} object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ListVisitsCommandParser {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments and returns a {@code ListVisitsCommand}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param args Input string after command word.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return A {@code ListVisitsCommand} based on the parsed input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ListVisitsCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_LIMIT,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                PREFIX_FROM, PREFIX_TO, PREFIX_TODAY, PREFIX_SYMPTOM,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                PREFIX_DIAGNOSIS, PREFIX_MEDICATION);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Nric nric \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Integer limit \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        LocalDate from \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        LocalDate to \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Diagnosis diagnosis \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Symptom symptom \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Medication medication \u003d null;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Taoseeker"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_LIMIT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Taoseeker"},"content":"                PREFIX_FROM, PREFIX_TO, PREFIX_TODAY, PREFIX_SYMPTOM,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Taoseeker"},"content":"                PREFIX_DIAGNOSIS, PREFIX_MEDICATION);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_LIMIT).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                limit \u003d Integer.parseInt(argMultimap.getValue(PREFIX_LIMIT).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        ListVisitsCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_FROM).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            from \u003d LocalDate.parse(argMultimap.getValue(PREFIX_FROM).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TO).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            to \u003d LocalDate.parse(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        boolean isToday \u003d argMultimap.getValue(PREFIX_TODAY).isPresent();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if ((from !\u003d null || to !\u003d null) \u0026\u0026 isToday) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Cannot use both \u0027today/\u0027 and \u0027from/… to/…\u0027 together.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            diagnosis \u003d ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_SYMPTOM).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            symptom \u003d ParserUtil.parseSymptom(argMultimap.getValue(PREFIX_SYMPTOM).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_MEDICATION).isPresent()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            medication \u003d ParserUtil.parseMedication(argMultimap.getValue(PREFIX_MEDICATION).get());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ListVisitsCommand(nric, limit, from, to, isToday, symptom, diagnosis, medication);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Taoseeker":3,"-":87}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Taoseeker"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REMARK);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-08","isFullCredit":false}],"authorContributionMap":{"Taoseeker":1,"-":38}},{"path":"src/main/java/seedu/address/model/MedLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PersonVisitDictionary;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniqueVisitList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class MedLogger implements ReadOnlyMedLogger {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_PERSON_FOR_VISIT \u003d \"There is no person who have a matching profile to \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"this visit in the person list\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniqueVisitList visits;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final PersonVisitDictionary dictionary;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        visits \u003d new UniqueVisitList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        dictionary \u003d new PersonVisitDictionary();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public MedLogger() {}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an MedLogger using the Persons in the {@code toBeCopied}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public MedLogger(ReadOnlyMedLogger toBeCopied) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the contents of the visit list with {@code visits}.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code visits} must not contain duplicate persons.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setVisits(List\u003cVisit\u003e visits) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.visits.setVisits(visits);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Replaces the contents of the dictionary with {@code dictionary}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setDictionary(PersonVisitDictionary dictionary) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.dictionary.setDictionary(dictionary.getDictionary());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code MedLogger} with {@code newData}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyMedLogger newData) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setVisits(newData.getVisitList());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setDictionary(newData.getDictionary());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if  {@code visit} already exists in the list of visits.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasVisit(Visit visit) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this.visits.contains(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a visit to the list of visits.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The visit must not already exist in the list.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addVisit(Visit visit) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.visits.add(visit);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.dictionary.addVisit(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Replaces the given visit {@code target} in the list with {@code editedVisit}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the Med Logger.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The {@code editedVisit} must not be the same as another existing visit in the Med Logger.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setVisit(Visit target, Visit editedVisit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        visits.setVisit(target, editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        dictionary.setVisit(target, editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Removes {@code visit} from this {@code MedLogger}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the Med Logger.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void removeVisit(Visit target) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        visits.remove(target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        dictionary.removeVisit(target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Taoseeker"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Taoseeker"},"content":"     * Remove all visits from this {@code MedLogger}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Taoseeker"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Taoseeker"},"content":"    public void clearVisits() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Taoseeker"},"content":"        List\u003cVisit\u003e copy \u003d List.copyOf(this.getVisitList());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Taoseeker"},"content":"        for (Visit visit: copy) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Taoseeker"},"content":"            this.removeVisit(visit);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Taoseeker"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Taoseeker"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds a person to the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * The person must not already exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        dictionary.addPerson(p);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (Visit visit : dictionary.getVisitsForPerson(target)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            visits.setVisit(visit, visit.withPerson(editedPerson));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        dictionary.setPerson(target, editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code MedLogger}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        for (Visit visit : dictionary.getVisitsForPerson(key)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            visits.remove(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        dictionary.removePerson(key);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .add(\"visits\", visits)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public ObservableList\u003cVisit\u003e getVisitList() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return visits.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public PersonVisitDictionary getDictionary() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return dictionary;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (!(other instanceof MedLogger)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        MedLogger otherMedLogger \u003d (MedLogger) other;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return persons.equals(otherMedLogger.persons);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Retrieves a {@code Person} with the specified NRIC.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * If a {@code Person} is found, it is returned wrapped in an","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * {@code Optional}; otherwise, an empty {@code Optional} is returned.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public Optional\u003cPerson\u003e getPersonByNric(Nric nric) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return persons.getPersonByNric(nric);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"Taoseeker":10,"-":224}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cVisit\u003e PREDICATE_SHOW_ALL_VISITS \u003d unused -\u003e true;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 Med Logger file path.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getMedLoggerFilePath();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 Med Logger file path.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setMedLoggerFilePath(Path medLoggerFilePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces Med Logger data with the data in {@code medLogger}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setMedLogger(ReadOnlyMedLogger medLogger);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Taoseeker"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Taoseeker"},"content":"     * Clears visit data in Med logger","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Taoseeker"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Taoseeker"},"content":"    void clearVisits();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /** Returns the MedLogger */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ReadOnlyMedLogger getMedLogger();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Retrieves a {@code Person} with the specified NRIC.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If a {@code Person} is found, it is returned wrapped in an","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Optional}; otherwise, an empty {@code Optional} is returned.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    Optional\u003cPerson\u003e getPersonByNric(Nric nric);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if a vist with the same details as {@code vist} exists in the Med Logger.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    boolean hasVisit(Visit visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addVisit(Visit visit);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Deletes the given visit.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The visit must exist in the Medlogger","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void deleteVisit(Visit target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setVisit(Visit target, Visit editedVisit);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the filtered visit list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    ObservableList\u003cVisit\u003e getFilteredVisitList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered visit list to filter by the given {@code predicate}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void updateFilteredVisitList(Predicate\u003cVisit\u003e predicate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void sortFilteredVisitList(Comparator\u003cVisit\u003e comparator);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list up to the first n entries.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param n number of entries to show","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    void updateSubFilteredPersonList(int n);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered visit list up to the first n entries.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @param n number of entries to show","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    void updateSubFilteredVisitList(int n);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    ObservableList\u003cVisit\u003e getSortedVisitList();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    int size();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"Taoseeker":7,"-":143}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the Med Logger data.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final MedLogger medLogger;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cVisit\u003e filteredVisits;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final SortedList\u003cVisit\u003e sortedVisits;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given medLogger and userPrefs.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyMedLogger medLogger, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(medLogger, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with Med Logger: \" + medLogger + \" and user prefs \" + userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.medLogger \u003d new MedLogger(medLogger);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.medLogger.getPersonList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredVisits \u003d new FilteredList\u003c\u003e(this.medLogger.getVisitList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sortedVisits \u003d new SortedList\u003c\u003e(filteredVisits);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new MedLogger(), new UserPrefs());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getMedLoggerFilePath() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getMedLoggerFilePath();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setMedLoggerFilePath(Path medLoggerFilePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(medLoggerFilePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setMedLoggerFilePath(medLoggerFilePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MedLogger \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setMedLogger(ReadOnlyMedLogger medLogger) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.medLogger.resetData(medLogger);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Taoseeker"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Taoseeker"},"content":"    public void clearVisits() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Taoseeker"},"content":"        this.medLogger.clearVisits();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Taoseeker"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Taoseeker"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ReadOnlyMedLogger getMedLogger() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return medLogger;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return medLogger.hasPerson(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean hasVisit(Visit visit) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return medLogger.hasVisit(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Optional\u003cPerson\u003e getPersonByNric(Nric nric) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return medLogger.getPersonByNric(nric);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void addVisit(Visit visit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        medLogger.addVisit(visit);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Taoseeker"},"content":"        updateFilteredVisitList(PREDICATE_SHOW_ALL_VISITS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setVisit(Visit target, Visit editedVisit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        medLogger.setVisit(target, editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        medLogger.removePerson(target);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void deleteVisit(Visit target) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        medLogger.removeVisit(target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        medLogger.addPerson(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        medLogger.setPerson(target, editedPerson);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code versionedMedLogger}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public ObservableList\u003cVisit\u003e getFilteredVisitList() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return filteredVisits;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void updateFilteredVisitList(Predicate\u003cVisit\u003e predicate) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        filteredVisits.setPredicate(predicate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void updateSubFilteredPersonList(int n) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e limitedList \u003d filteredPersons.getSource().stream()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .filter(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .limit(n)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(limitedList::contains);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Sorts the filtered visit list based on the provided comparator.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * To force the filtered list to update, we create a new list and set the predicate to","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @param comparator The comparator to sort the visits.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void sortFilteredVisitList(Comparator\u003cVisit\u003e comparator) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        sortedVisits.setComparator(comparator);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void updateSubFilteredVisitList(int n) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        List\u003cVisit\u003e limitedList \u003d filteredVisits.getSource().stream()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .limit(n)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        filteredVisits.setPredicate(limitedList::contains);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return medLogger.equals(otherModelManager.medLogger)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredVisits.equals(otherModelManager.filteredVisits);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public ObservableList\u003cVisit\u003e getSortedVisitList() {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return sortedVisits;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return filteredPersons.size();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"Taoseeker":6,"-":241}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DengTianle"},"content":"    public static final Name DUMMY_NAME \u003d new Name(\"dummy\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":67,"DengTianle":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the Med Logger.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Nric nric;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Person(Name name, Nric nric, Phone phone, Email email, Address address,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                  Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, nric, phone, email, address, remark, tags);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Nric getNric() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns a dummy Person with default placeholder values for all fields","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * except name and nric.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DengTianle"},"content":"    public static Person createDummyPerson(Nric nric) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Person(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DengTianle"},"content":"                Name.DUMMY_NAME,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                nric,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Phone.DUMMY_PHONE,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Email.DUMMY_EMAIL,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Address.DUMMY_ADDRESS,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                new Remark(\"\"),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return Objects.hash(name, nric, phone, email, address, remark, tags);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"NRIC\", nric)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":146,"DengTianle":2}},{"path":"src/main/java/seedu/address/model/person/PersonVisitDictionary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicateVisitException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.VisitNotFoundException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A dictionary that maps each person to their visits.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonVisitDictionary {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPerson, List\u003cVisit\u003e\u003e personToVisits \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces the contents of this map with {@code personsToVisits}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setDictionary(Map\u003cPerson, List\u003cVisit\u003e\u003e personToVisits) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(personToVisits);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Taoseeker"},"content":"        this.personToVisits.clear();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cPerson, List\u003cVisit\u003e\u003e entry : personToVisits.entrySet()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            this.personToVisits.put(entry.getKey(), new ArrayList\u003c\u003e(entry.getValue()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Adds a new person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (personToVisits.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        personToVisits.put(person, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Adds a visit to its attached person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void addVisit(Visit visit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d visit.getPerson();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!personToVisits.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (personToVisits.get(person).contains(visit)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new DuplicateVisitException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        personToVisits.get(person).add(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setVisit(Visit target, Visit editedVisit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (target.getPerson().equals(editedVisit.getPerson())) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (!personToVisits.containsKey(target.getPerson())) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            personToVisits.get(target.getPerson()).add(editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            personToVisits.get(target.getPerson()).remove(target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (!personToVisits.containsKey(target.getPerson())","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    || !personToVisits.containsKey(editedVisit.getPerson())) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personToVisits.get(target.getPerson()).remove(target);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personToVisits.get(editedVisit.getPerson()).add(editedVisit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes a visit.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void removeVisit(Visit visit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person person \u003d visit.getPerson();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToVisits.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!personToVisits.get(person).contains(visit)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new VisitNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        personToVisits.get(person).remove(visit);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces a person with its edited version.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Migrates their visits to the edited version.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!personToVisits.containsKey(target)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Taoseeker"},"content":"        List\u003cVisit\u003e targetPersonVisits \u003d personToVisits.get(target);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        personToVisits.remove(target);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addPerson(editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Taoseeker"},"content":"        for (Visit visit : targetPersonVisits) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            personToVisits.get(editedPerson).add(visit.withPerson(editedPerson));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Removes a person together with their visits.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!personToVisits.containsKey(person)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personToVisits.remove(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public List\u003cVisit\u003e getVisitsForPerson(Person person) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableList(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                personToVisits.getOrDefault(person, Collections.emptyList())","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Map\u003cPerson, List\u003cVisit\u003e\u003e getDictionary() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableMap(this.personToVisits);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Taoseeker":3,"-":130}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final HashMap\u003cString, Person\u003e personMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        personMap.put(toAdd.getNric().toString(), toAdd);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        personMap.remove(target.getNric().toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        personMap.put(editedPerson.getNric().toString(), editedPerson);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        personMap.remove(toRemove.getNric().toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Taoseeker"},"content":"        personMap.clear();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        personMap.putAll(replacement.personMap);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Taoseeker"},"content":"        personMap.clear();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (Person person : persons) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            personMap.put(person.getNric().value, person);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Retrieves a {@code Person} with the specified NRIC.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * If a {@code Person} is found, it is returned wrapped in an","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code Optional}; otherwise, an empty {@code Optional} is returned.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public Optional\u003cPerson\u003e getPersonByNric(Nric nric) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(nric);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return Optional.ofNullable(personMap.get(nric.toString()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"Taoseeker":2,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.MedLogger;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyMedLogger;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddPersonCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getMedLoggerFilePath() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setMedLoggerFilePath(Path medLoggerFilePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void addVisit(Visit visit) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deleteVisit(Visit visit) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Taoseeker"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Taoseeker"},"content":"        public void clearVisits() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Taoseeker"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Taoseeker"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setMedLogger(ReadOnlyMedLogger newData) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ReadOnlyMedLogger getMedLogger() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cPerson\u003e getPersonByNric(Nric nric) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean hasVisit(Visit visit) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setVisit(Visit target, Visit editedPerson) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void updateSubFilteredPersonList(int n) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public ObservableList\u003cVisit\u003e getFilteredVisitList() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void updateFilteredVisitList(Predicate\u003cVisit\u003e predicate) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void updateSubFilteredVisitList(int n) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public int size() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void sortFilteredVisitList(Comparator\u003cVisit\u003e comparator) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public ObservableList\u003cVisit\u003e getSortedVisitList() {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public ReadOnlyMedLogger getMedLogger() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return new MedLogger();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"Taoseeker":4,"-":270}}]
