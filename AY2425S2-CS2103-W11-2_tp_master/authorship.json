[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Meeting` objects residing in the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JuhromeAlexander"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JuhromeAlexander"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a contact).\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JuhromeAlexander"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` and `Meeting` objects (which are contained in a `UniquePersonList` and `UniqueMeetingList` object respectively).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` and `Meeting` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th contact in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new contact. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the contact was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the contact being deleted).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* A Student that is looking for internships","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Has a need to manage a large number of contacts from their network","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts in their network faster than a typical mouse/GUI driven app","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                                    | So that I can…​                                             |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"|----------|-----------------|-------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `* * *`  | First-Time User | view the available commands and their format    | learn how to send commands                                  |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `* * *`  | User            | add a new contact                               | record a new contact in my network                          |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* * *`  | User            | delete a contact                                | remove a contact from my network                            |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `* * *`  | User            | view all contacts                               | view all the contacts in my network                         |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`  | User            | search for a specific contact by name           | look for a contact by their name                            |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `* * *`  | User            | view an individual contact                      | view an individual contact in my network                    |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `* * *`  | User            | sort my contacts by their importance            | view the contacts I\u0027m most interested in contacting         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`  | User            | filter my contacts by hiring tag                | view my contacts currently looking for interns              |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* * *`  | User            | assign a hiring tag to a specific contact       | indicate whether they are open to hiring                    |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* * *`  | User            | view list of all meetings                       | keep track of all my meetings                               |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* * *`  | User            | create a meeting item                           | record down an upcoming/occured meeting                     |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"| `* * *`  | User            | delete a meeting item                           | cancel a meeting                                            |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* * *`  | User            | update a meeting item                           | change details of a meeting                                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `* *`    | User            | edit a contact                                  | edit the details of a contact in my network                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"| `* *`    | User            | view number of contacts                         | view the size of my network                                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"| `* *`    | User            | sort my contacts by name in alphabetical order  | view the contacts in my network in alphabetical order       |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* *`    | User            | sort my contacts by ascending/descending order  | view the contact list in reverse order                      |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `* *`    | User            | search for a specific contact by company        | look for a contact by their company                         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"| `* *`    | User            | assign an importance tag for a specific contact | indicate their importance or relevance to me                |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| `* *`    | User            | record when my next meeting with them is        | keep track of future meeting date/time                      |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"| `* *`    | User            | record where my next meeting with them is       | keep track of future meeting locations                      |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"| `* *`    | User            | record notes about my meeting                   | keep track of what was mentioned during the meeting         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"| `* *`    | User            | view list of all previous meetings              | review all my past meetings                                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"| `* *`    | User            | view list of all upcoming meetings              | keep track of any upcoming meetings                         |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"| `* *`    | User            | add a contact to my meeting item                | keep track of who I meet during the meeting                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| `*`      | User            | sort my contacts by last meeting                | view contacts that I have recently met with                 |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"| `*`      | User            | filter my contacts by their tags                | view contacts relevant to my current interest               |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"| `*`      | User            | assign an industry tag to a specific contact    | create a custom tag with their industry                     |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"| `*`      | User            | record when I last met my contact               | update the last-seen status if meeting with contact again   |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"| `*`      | User            | record where I last met my contact              | update the last-seen location if meeting with contact again |","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Use case 1: Add a new contact**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"1.  User enters the command to add a contact into the input field, along with all details following the specified command syntax","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the details of the added contact","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* 1a. The name of the contact provided is an exact (case-insensitive) duplicate of a name already in the contact list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"   * 1a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"zephaniahong"},"content":" ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"* 1b. The name, email and/or phone number of the contact provided is invalid","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"zephaniahong"},"content":"   * 1b. AddressBook shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"zephaniahong"},"content":" ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Use case 2: Delete a contact**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"1.  User enters the command to delete a contact into the input field, along with the index of the specified contact","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the name of the deleted contact","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"* 1a. AddressBook detects invalid index number","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    * 1a1. AddressBook shows an error message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"* 1b. AddressBook detects index does not exist","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    * 1b1. AddressBook shows an error message","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Use case 3: View all contacts**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"1. User enters command to view all contacts","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"2. AddressBook shows all contacts that have been previously added by the user","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"* 2. Number of contacts exceeds the maximum number of contacts to be displayed","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"   * 2a1. AddressBook uses pagination to display contacts by batches","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"     Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Use case 4: Search for Specific Contact by Name**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"1. User requests to search for contact by name","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"2. AddressBook shows the results of the search","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"**Use case 5: Edit an existing contact**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"1.  From the page where contacts are listed, user enters the command to edit a contact into the input field, along with the index of the contact they would like to edit and all details to be edited following the specified command syntax","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing all details of the edited contact","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"* 1a. The edited name, email and/or phone number provided is invalid","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"   * 1a1. AddressBook shows an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"* 1b. AddressBook detects invalid index number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"    * 1b1. AddressBook shows an error message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"* 1c. AddressBook detects index does not exist","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"    * 1c1. AddressBook shows an error message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"**Use case 6: Add a meeting**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"1.  User enters the command to add a meeting into the input field, along with all details following the specified command syntax","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the details of the added meeting","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"* 1a. Any of the people\u0027s names listed do not exist in the AddressBook","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"   * 1a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* 1b. The command is missing datetime or contact fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"   * 1b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Use case 7: Delete a meeting**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"1.  User enters the command to delete a meeting into the input field, along with the index of the specified meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the name of the deleted meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Use case 8: Add a new meeting**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"1.  User enters the command to add a meeting into the input field, along with all details following the specified command syntax","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the details of the added meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"* 1a. AddressBook detects invalid index number","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"    * 1a1. AddressBook shows an error message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"* 1b. AddressBook detects index does not exist","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"    * 1b1. AddressBook shows an error message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Use case 9: List all meetings**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. User enters command to view all contacts","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"2. AddressBook shows all contacts that have been previously added by the user","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Use case 10: List all meetings**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"1.  User enters the command to list all meetings","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the details of the added meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Use case 11: Edit a new meeting**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"1.  User enters the command to edit a meeting into the input field, along with all details following the specified command syntax","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"2.  AddressBook shows a success message containing the details of the added meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"* 1a. Any of the people\u0027s names listed do not exist in the AddressBook","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"zephaniahong"},"content":"* 1b. AddressBook detects invalid index number","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"zephaniahong"},"content":"    * 1b1. AddressBook shows an error message","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"zephaniahong"},"content":"      Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"zephaniahong"},"content":"* 1c. AddressBook detects index does not exist","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"zephaniahong"},"content":"    * 1c1. AddressBook shows an error message","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"zephaniahong"},"content":"      Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"**Use case 11: View help for commands**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. User enters command or clicks the help tab to get help for command usage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"2. AddressBook opens a seperate window to display a snippet of the user guide","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"    with the commands and their usages","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"4. After entering a command, a user should be able to see a visible response message within 1 second","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"5. Should return search results for a network size of up to 100,000 within 1 second","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"zephaniahong"},"content":"6. Startup time should not exceed 2 seconds on a typical modern system","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"zephaniahong"},"content":"7. The system should gracefully handle and log errors without crashing","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"* **Contact**: An individual or entity whose details are stored in the application","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"* **Network**: Group of individuals connected through professional or personal relationships","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"* **Meeting**: Any interaction (past or upcoming) between the user and the contact","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"JuhromeAlexander"},"content":"   1a. Download the jar file and copy into an empty folder","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"JuhromeAlexander"},"content":"   1b. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"JuhromeAlexander"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"JuhromeAlexander"},"content":"   2a. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"JuhromeAlexander"},"content":"   2b. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Deleting a contact","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"JuhromeAlexander"},"content":"   1a. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list. Contact cannot have existing meetings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"JuhromeAlexander"},"content":"   1b. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"JuhromeAlexander"},"content":"   1c. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"JuhromeAlexander"},"content":"   1d. Test case: `delete 1` but contact at index 1 has existing meetings\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"zephaniahong"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"JuhromeAlexander"},"content":"   1e. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":13,"-":535,"zephaniahong":12}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zephaniahong"},"content":"InternHive (IH) is a **desktop app targeting students for managing your industry contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InternHive can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"2. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar InternHive.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/InternHiveUi.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `add n/John Doe e/johnd@example.com p/98765432 c/Apple j/Software Engineer i/High` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"\u003e [!Note]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"\u003e Notes about the command format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"Opens a separate window to show a snippet of the user guide detailing all the available commands, format and example usage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a contact: `add`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a contact to the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME e/EMAIL p/PHONE_NUMBER c/COMPANY j/POSITION [t/TAG]…​ i/IMPORTANCE`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"Duplicate contacts are identified by having the same (case-insensitive) name and the same phone number \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"A contact can have any number of tags (including 0). \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"Special tags: hiring - indicates that the contact is open to hiring; \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JuhromeAlexander"},"content":"**IMPORTANCE** Field can only be one of the following (Case-Insensitive): High, Medium, Low","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `add n/John Doe e/johnd@example.com p/98765432 c/Apple j/Software Engineer i/High`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com c/Google j/Software Designer p/1234567 t/criminal i/Low`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Listing all contacts : `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zephaniahong"},"content":"* Extraneous parameters are accepted but will be ignored","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zephaniahong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Editing a contacts : `edit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zephaniahong"},"content":"Edits an existing contact in the address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JuhromeAlexander"},"content":"Format: `edit INDEX [n/NAME] [e/EMAIL] [p/PHONE] [c/COMPANY] [j/POSITION] [t/TAG]…​ [i/IMPORTANCE]`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contact list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JuhromeAlexander"},"content":"* When editing tags, the existing tags of the contact will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"* You can remove all the contact’s tags by typing `t/` without","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Locating contacts by name: `find`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"Finds Contacts whose names contain any of the given keywords.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS] [c/COMPANY]`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JuhromeAlexander"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* The order of the keywords matters. e.g. `Hans Bo` will not match `Bo Hans`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Only the name is searched if no other options are provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Command will use Partial Search.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Only Contacts matching with the full keyword will be returned.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Bother`, `Hans Bo` and not `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* If the Company Parameter is provided, it will search for a contact that matches **BOTH** the `KEYWORD` provided and the `COMPANY` Provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JuhromeAlexander"},"content":"  * There can only be **ONE** `COMPANY` Parameter provided","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex David`, `Alex Davidson`.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JuhromeAlexander"},"content":"* `find alex david c/Google` returns `Alex Davidson` that works at `Google`.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c!-- TODO: Add the picture for the find command --\u003e","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Filtering contacts by tags: `filter`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"Finds Contacts with tags containing the search term.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"Format: `filter SEARCHTERM`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JuhromeAlexander"},"content":"* The search is case-insensitive. e.g. `Friend` will match `friend`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Only the exact search term is searched. e.g. `Hiring Friend` will not match `Hiring`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Command will use Partial Search.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Only contacts with tags matching with the full keyword will be returned.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"  e.g. `Fri` will return `Friend`, `Fridge` and not `Frail`, `Fragile`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `filter hiring` returns `John` and `John Doe` if John and John Doe both have `hiring` tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c!-- TODO: Add the picture for the filter command --\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Sort Contact List: `sort`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"Sorts Contacts in the AddressBook in ascending or descending order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"Format: `sort SORT_TERM ORDER`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JuhromeAlexander"},"content":"* The sort-term is case-sensitive. E.g. `importance` will not match `Importance`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Only 2 Current `SORT_TERM` is supported:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  * `name` \u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  * `importance`\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* Only 2 ways to specify `ORDER`:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  * `asc` : Sorts Contacts in Ascending Order","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"  * `desc` : Sorts Contacts in Descending Order","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `sort importance desc` returns contact list from the highest importance level to the lowest importance level.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Deleting a contact : `delete`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Deletes the specified contact from the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zephaniahong"},"content":"* In order to successfully delete a contact, ensure that the contact has no existing meetings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zephaniahong"},"content":"* Any attempt to delete a contact that has an existing meeting will result in an error being shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Add a meeting : `addmeeting`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"Adds a new meeting to the address book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `addmeeting dt/DATETIME mp/CONTACT_NAME... [mn/NOTES]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"* Adds a new meeting at `DATETIME` with `CONTACT_NAME`(s).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"* Multiple people can be at a meeting by specifying multiple people `mp/Alice mp/Bob`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* `CONTACT_NAME` must exist as a contact in the addressbook.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"* `NOTES` is not a required field and can be omited or left blank.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"* New meetings cannot have the same `DATETIME` with the same `CONTACT_NAME`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"* `DATETIME` can only be in the following formats: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"  * yyyy-MM-dd HH:mm (e.g., 2024-04-01 14:30)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"  * dd/MM/yyyy HH:mm (e.g., 01/04/2024 14:30)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"  * MM/dd/yyyy HH:mm (e.g., 04/01/2024 14:30)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"* `addmeeting dt/2025-03-21 06:00 mp/Irfan Ibrahim mn/Interview for summer internship`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gn07"},"content":"* `addmeeting dt/20/10/2020 21:00 mp/Roy Balakrishnan mp/David Li`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"gn07"},"content":"* `addmeeting dt/09/28/2024 14:00 mp/Roy Balakrishnan mp/David Li mn/Interview for Scholarship`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Edit a meeting : `editmeeting`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `editmeeting INDEX [dt/DATETIME] [mp/CONTACT_NAME]... [mn/NOTES]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Edits the meeting at the specified `INDEX`. The index refers to the index number shown in the displayed meeting list. The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"* When editing meeting contacts, the existing contact names will be replaced with the new list(s) of contact(s) in the input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"*  `editmeeting 1 dt/2025-10-10 08:00 mn/Discuss project` Edits the meeting datetime and notes of the 1st meeting to be `2025-10-10 08:00` and `Discuss project` respectively.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"*  `editmeeting 1 dt/2025-10-10 08:00 mp/Alice mp/Bob` Edits the meeting replaces all the contacts of the meeting with just `Alice` and `Bob`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zephaniahong"},"content":"### Deleting a meeting : `deletemeeting`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"Deletes the specified meeting from the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Format: `deletemeeting INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"* Deletes the meeting at the specified `INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Listing all meetings : `meetings`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zephaniahong"},"content":"Shows a list of all meetings in the address book. Currently, all meetings will be listed by default. This feature would be more useful in the future when other features such as filtering meetings have been implemented.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"Format: `meetings`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"## Usage information","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"JuhromeAlexander"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JuhromeAlexander"},"content":"**A**: Go into the directory of where your jar file is located at. Zip up the directory. Place the zipped directory in your other computer (Via Email,FTP etc.). Unzip the zipped folder and run the jar file on the other computer.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"JuhromeAlexander"},"content":"| Action             | Format, Examples                                                                                                                                                              |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"JuhromeAlexander"},"content":"|--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"JuhromeAlexander"},"content":"| **Add Contact**    | `add n/NAME e/EMAIL p/PHONE_NUMBER c/COMPANY j/POSITION [t/TAG]…​ i/IMPORTANCE` \u003cbr\u003e e.g., `add n/John Doe e/johnd@example.com p/98765432 c/Apple j/Software Engineer i/High` |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"JuhromeAlexander"},"content":"| **Clear**          | `clear`                                                                                                                                                                       |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"JuhromeAlexander"},"content":"| **Delete Contact** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                           |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"JuhromeAlexander"},"content":"| **Edit Contact**   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​ [i/IMPORTANCE]`\u003cbr\u003e e.g.,`edit 1 p/91234567 e/johndoe@example.com`                                             |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"JuhromeAlexander"},"content":"| **Find Contact**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                    |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"JuhromeAlexander"},"content":"| **Filter Contact** | `filter SEARCHTERM` \u003cbr\u003e e.g., `filter hiring`                                                                                                                                |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"JuhromeAlexander"},"content":"| **Sort Contact**   | `sort SORT_TERM ORDER` \u003cbr\u003e e.g., `sort importance desc`                                                                                                                      |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"JuhromeAlexander"},"content":"| **List Contacts**  | `list`                                                                                                                                                                        |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"JuhromeAlexander"},"content":"| **Add Meeting**    | `addmeeting dt/DATETIME mp/CONTACT_NAME... [mn/NOTES]` \u003cbr\u003e e.g., `addmeeting dt/2025-03-21 06:00 mp/Irfan Ibrahim mn/Interview for summer internship`                        |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"JuhromeAlexander"},"content":"| **Delete Meeting** | `deletemeeting INDEX`\u003cbr\u003e e.g., `deletemeeting 3`                                                                                                                             |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"JuhromeAlexander"},"content":"| **Edit Meeting**   | `editmeeting INDEX [dt/DATETIME] [mp/CONTACT_NAME]... [mn/NOTES]`\u003cbr\u003e e.g.,`editmeeting 1 dt/2025-10-10 08:00 mn/Discuss project`                                             |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JuhromeAlexander"},"content":"| **List meetings**  | `meetings`                                                                                                                                                                    |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"JuhromeAlexander"},"content":"| **Help**           | `help`                                                                                                                                                                        |","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"matthanfoo":1,"JuhromeAlexander":36,"-":255,"zephaniahong":8,"gn07":2}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zephaniahong"},"content":"    content: \"InternHive\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12","isFullCredit":false}],"authorContributionMap":{"-":294,"zephaniahong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_IMPORTANCE + \"IMPORTANCE \"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zephaniahong"},"content":"            + \"\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_COMPANY + \"Apple \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_POSITION + \"CTO \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_IMPORTANCE + \"HIGH\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":90,"zephaniahong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addmeeting\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_DATETIME + \"DATETIME \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PERSONS + \"CONTACTNAME...\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NOTES + \"NOTES] \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zephaniahong"},"content":"            + \"\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_DATETIME + \"03/12/2025 12:00 \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PERSONS + \"Alice \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PERSONS + \"Bob \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NOTES + \"Discuss about project\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (model.hasMeeting(toAdd)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            model.addMeeting(toAdd);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddMeetingCommand otherAddMeetingCommand \u003d (AddMeetingCommand) other;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddMeetingCommand.toAdd);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-22","isFullCredit":false}],"authorContributionMap":{"-":83,"zephaniahong":1}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSONS;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.Notes;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"editmeeting\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_DATETIME + \"DATETIME] \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PERSONS + \"CONTACT_NAME] \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zephaniahong"},"content":"            + \"[\" + PREFIX_NOTES + \"NOTES]\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_DATETIME + \"03-12-2025 12:00 \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PERSONS + \"Alice \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PERSONS + \"Bob \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_NOTES + \"Settle admin matters\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Contact: %1$s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMPTY_PERSONS \u003d \"Meeting requires at least one person\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editMeetingDescriptor details to edit the person with","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (editedMeeting.getPersonList().isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_EMPTY_PERSONS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedMeeting)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        MeetingTime updatedDt \u003d editMeetingDescriptor.getMeetingTime().orElse(meetingToEdit.getDateTime());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Notes updatedNotes \u003d editMeetingDescriptor.getNotes().orElse(meetingToEdit.getNotes());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e updatedPeople \u003d editMeetingDescriptor.getPeople().orElse(meetingToEdit.getPersonList());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Meeting(updatedDt, updatedPeople, updatedNotes);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditMeetingCommand otherEditCommand \u003d (EditMeetingCommand) other;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(otherEditCommand.editMeetingDescriptor);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"editMeetingDescriptor\", editMeetingDescriptor)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private MeetingTime meetingTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Notes notes;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cString\u003e people;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setMeetingTime(toCopy.meetingTime);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setPeople(toCopy.people);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(meetingTime, notes, people);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setMeetingTime(MeetingTime meetingTime) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.meetingTime \u003d meetingTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cMeetingTime\u003e getMeetingTime() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(meetingTime);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setNotes(Notes notes) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.notes \u003d notes;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cNotes\u003e getNotes() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(notes);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Sets {@code people} to this object\u0027s {@code people}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code people} is used internally.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPeople(Set\u003cString\u003e people) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.people \u003d (people !\u003d null) ? new HashSet\u003c\u003e(people) : null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable people set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code people} is null.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cString\u003e\u003e getPeople() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return (people !\u003d null) ? Optional.of(Collections.unmodifiableSet(people)) : Optional.empty();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            EditMeetingDescriptor otherEditMeetingDescriptor \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Objects.equals(meetingTime, otherEditMeetingDescriptor.meetingTime)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(notes, otherEditMeetingDescriptor.notes)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(people, otherEditMeetingDescriptor.people);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    .add(\"meeting time\", meetingTime)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    .add(\"notes\", notes)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"                    .add(\"people\", people)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"-":214,"zephaniahong":1}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Sorts and lists all persons in address book depending on keyword given.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all persons by %s in %s order.\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the list of students in the address book and \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"displays them as a list with index numbers.\\n\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"Parameters: FIELD (name/importance) ORDER (asc/desc)\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"Example: \" + COMMAND_WORD + \" importance asc\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String field;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String order;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code SortCommand} with the specified comparator, field, and order.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param comparator The comparator used to define the sorting order of the person list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param field The field by which the list will be sorted (e.g., name, age).","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param order The sorting order, typically \"asc\" for ascending or \"desc\" for descending.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator, String field, String order) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.field \u003d field;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.order \u003d order;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        model.sortFilteredPersonList(comparator);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, field, order));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 field.equals(((SortCommand) other).field)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 order.equals(((SortCommand) other).order));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":2,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMPANY);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String nameKeyword \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String companyKeyword \u003d argMultimap.getValue(PREFIX_COMPANY).orElse(\"\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        nameKeyword \u003d nameKeyword.replaceAll(\"\\\\s+\", \" \").trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (nameKeyword.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        if (argMultimap.getAllValues(PREFIX_COMPANY).size() \u003e 1) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new ParseException(\"Invalid Command Format! \\n There can only be one Company Field\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!argMultimap.getAllValues(PREFIX_COMPANY).isEmpty() \u0026\u0026 companyKeyword.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Company Field cannot be empty\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new FindCommand(nameKeyword.trim(), companyKeyword.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":3,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.Notes;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Importance;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(company);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String position} into an {@code Position}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(position);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Parses a {@code String notes} into an {@code Notes}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code notes} is invalid.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Notes parseNotes(String notes) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(notes);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String trimmedNotes \u003d notes.trim();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Notes.isValidNotes(trimmedNotes)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new Notes(trimmedNotes);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cString\u003e}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Parses a {@code String importance} into an {@code Importance}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code importance} is invalid.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Importance parseImportance(String importance) throws ParseException {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(importance);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String trimmedImportance \u003d importance.trim();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!Importance.isValidImportance(trimmedImportance)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new ParseException(Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new Importance(trimmedImportance);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Parses a {@code String dateTime} into a {@code MeetingTime}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static MeetingTime parseMeetingTime(String dateTime) throws ParseException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new MeetingTime(trimmedDateTime);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e personList} into a {@code Set\u003cString\u003e}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static Set\u003cString\u003e parsePersonList(Collection\u003cString\u003e personList) throws ParseException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        requireNonNull(personList);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        final Set\u003cString\u003e personSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        for (String personName : personList) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            personSet.add(personName.trim());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return personSet;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":3,"-":214}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Meeting\u0027s time in the address book.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMeetingTime(String)}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class MeetingTime {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \"Meeting time must be in one of the following formats:\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"                    + \"1. yyyy-MM-dd HH:mm (e.g., 2024-04-01 14:30)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    + \"2. dd/MM/yyyy HH:mm (e.g., 01/04/2024 14:30)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                    + \"3. MM/dd/yyyy HH:mm (e.g., 04/01/2024 14:30)\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter[] ACCEPTED_FORMATS \u003d {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"    private static final String[] FRIENDLY_FORMATS \u003d {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        \"yyyy-MM-dd HH:mm (e.g. 2024-04-01 14:30)\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        \"dd/MM/yyyy HH:mm (e.g. 01/04/2024 14:30)\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        \"MM/dd/yyyy HH:mm (e.g. 04/01/2024 14:30)\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    };","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final LocalDateTime meetingTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code MeetingTime}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param inputTime A valid time.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public MeetingTime(String inputTime) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(inputTime);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.meetingTime \u003d parseDateTime(inputTime);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static LocalDateTime parseDateTime(String inputTime) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"        for (int i \u003d 0; i \u003c ACCEPTED_FORMATS.length; i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"            DateTimeFormatter formatter \u003d ACCEPTED_FORMATS[i];","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"                LocalDateTime parsed \u003d LocalDateTime.parse(inputTime, formatter);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"                String reformatted \u003d parsed.format(formatter);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"                if (!reformatted.equals(inputTime)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"                    throw new IllegalArgumentException(\"Input \\\"\" + inputTime + \"\\\" is not in the correct format: \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"                            + FRIENDLY_FORMATS[i]);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"                return parsed;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"        throw new IllegalArgumentException(\"Input \\\"\" + inputTime + \"\\\" does not match any accepted date format\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Checks if a given string is a valid meeting time format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param test The string to check.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @return True if valid, false otherwise.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static boolean isValidMeetingTime(String test) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            parseDateTime(test);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return meetingTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof MeetingTime)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        MeetingTime otherTime \u003d (MeetingTime) other;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return meetingTime.equals(otherTime.meetingTime);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return meetingTime.hashCode();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-22","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":17,"-":87}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Meeting toAdd, ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String exists \u003d personsExist(toAdd, persons);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (exists !\u003d \"true\") {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            // add custom exception here","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(exists);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting, ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.equals(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String exists \u003d personsExist(editedMeeting, persons);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (exists !\u003d \"true\") {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            // add custom exception here","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(exists);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings, UniquePersonList persons) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (Meeting m : meetings) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            String exists \u003d personsExist(m, persons.asUnmodifiableObservableList());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (exists !\u003d \"true\") {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                // add custom exception here","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                throw new IllegalArgumentException(exists);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniqueMeetingList)) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniqueMeetingList otherUniqueMeetingList \u003d (UniqueMeetingList) other;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniqueMeetingList.internalList);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns \"true\" if {@code meeting} contains people who exist in the addressbook.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private String personsExist(Meeting meeting, ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        System.out.println(\"personsExist \" + meeting.getPersonList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // check if empty string in persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (meeting.getPersonList().isEmpty() || meeting.getPersonList().contains(\"\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gn07"},"content":"            return \"Contact name after mp/ prefix cannot be left empty. \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gn07"},"content":"                + \"Please retry the command without any empty contact name field(s) (e.g. mp/  )\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // check if every person in the meeting is in the address book","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (String p : meeting.getPersonList()) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            if (!persons.stream().anyMatch(person -\u003e person.getName().toString().equals(p))) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                return \"Contact \" + p + \" is not in the address book.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return \"true\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-22","isFullCredit":false}],"authorContributionMap":{"-":171,"gn07":2}},{"path":"src/main/java/seedu/address/model/person/Importance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s Importance in the address book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidImportance(String)}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Importance {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Importance should only contain one of the following: \\n\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"Low or Medium or High (Case-Insensitive) \\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the Importance Field must not be a whitespace,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String[] VALID_IMPORTANCE_VALUES \u003d {\"low\", \"medium\", \"high\"};","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Importance}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param importance A valid importance field.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Importance(String importance) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(importance);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidImportance(importance), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        value \u003d capitalizeFirst(importance.toLowerCase());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidImportance(String test) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String normalizedImportance \u003d test.trim().toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (String validImportance : VALID_IMPORTANCE_VALUES) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (validImportance.equalsIgnoreCase(normalizedImportance)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"    private static String capitalizeFirst(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"            return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"        return input.substring(0, 1).toUpperCase() + input.substring(1).toLowerCase();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof Importance)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Importance otherImportance \u003d (Importance) other;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.equals(otherImportance.value);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":10,"-":75}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Company company;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Position position;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Importance importance;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Email email, Phone phone, Company company, Position position, Set\u003cTag\u003e tags,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                  Importance importance) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, company, position, tags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Company getCompany() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return company;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Position getPosition() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return position;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Importance getImportance() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return importance;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 company.equals(otherPerson.company)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 position.equals(otherPerson.position)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Objects.hash(name, email, phone, company, position, tags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"company\", company)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"position\", position)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"importance\", importance)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"matthanfoo":2,"-":134}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric, and should not be blank\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"matthanfoo":1,"-":61}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Meeting meeting;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label meetingTime;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FlowPane people;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label notes;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code MeetingCode} with the given {@code Meeting} and index to display.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assert(displayedIndex \u003e\u003d 0);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        meetingTime.setText(meeting.getDateTime().toString());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        notes.setText(meeting.getNotes().value);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zephaniahong"},"content":"        meeting.getPersonList().stream().forEach(person -\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zephaniahong"},"content":"        {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zephaniahong"},"content":"            Label personLabel \u003d new Label(person);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zephaniahong"},"content":"            personLabel.setMaxWidth(300);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zephaniahong"},"content":"            personLabel.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zephaniahong"},"content":"            personLabel.setStyle(\"-fx-text-overflow: ellipsis;\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zephaniahong"},"content":"            people.getChildren().add(personLabel);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zephaniahong"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"-":49,"zephaniahong":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zephaniahong"},"content":"         title\u003d\"InternHive\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cLabel text\u003d\"Contacts\" styleClass\u003d\"pane-header\"/\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                              VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        \u003cLabel text\u003d\"Meetings\" styleClass\u003d\"pane-header\"/\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                              VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false}],"authorContributionMap":{"-":77,"zephaniahong":1}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalAddressBook.BOB;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"        // same name and phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withCompany(VALID_COMPANY_BOB).withPosition(VALID_POSITION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", company\u003d\" + ALICE.getCompany()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \", position\u003d\" + ALICE.getPosition() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                + \", importance\u003d\" + ALICE.getImportance() + \"}\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"matthanfoo":2,"-":100}}]
