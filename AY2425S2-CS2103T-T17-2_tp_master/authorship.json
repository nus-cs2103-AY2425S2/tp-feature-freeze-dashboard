[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Eun777"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eun777"},"content":"layout: page","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Liu-Jihan"},"content":"title: CareConnect Developer Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eun777"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Liu-Jihan"},"content":"## Table of Contents","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Liu-Jihan"},"content":"1. [Developer Guide](#developer-guide)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Liu-Jihan"},"content":"2. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Liu-Jihan"},"content":"3. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Liu-Jihan"},"content":"4. [Design](#design)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Liu-Jihan"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Liu-Jihan"},"content":"    - [UI component](#ui-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Liu-Jihan"},"content":"    - [Logic component](#logic-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Liu-Jihan"},"content":"    - [Special Case: ClearCommandParser](#special-case-clearcommandparser-)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Liu-Jihan"},"content":"    - [Model component](#model-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Liu-Jihan"},"content":"    - [Storage component](#storage-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Liu-Jihan"},"content":"    - [Common classes](#common-classes)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Liu-Jihan"},"content":"5. [Implementations of Key Features](#implementations-of-key-features)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Liu-Jihan"},"content":"    - [Add feature](#add-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Liu-Jihan"},"content":"6. [Proposed Enhancements](#proposed-enhancements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Liu-Jihan"},"content":"    - [Undo/redo feature](#undoredo-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Liu-Jihan"},"content":"        - [Proposed Implementation](#proposed-implementation)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Liu-Jihan"},"content":"        - [Design considerations](#design-considerations)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Liu-Jihan"},"content":"7. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Liu-Jihan"},"content":"8. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Liu-Jihan"},"content":"    - [Product scope](#product-scope)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Liu-Jihan"},"content":"    - [User stories](#user-stories)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Liu-Jihan"},"content":"    - [Use cases](#use-cases)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Liu-Jihan"},"content":"    - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Liu-Jihan"},"content":"    - [Glossary](#glossary)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Liu-Jihan"},"content":"9. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Liu-Jihan"},"content":"    - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Liu-Jihan"},"content":"    - [Deleting a patient](#deleting-a-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Liu-Jihan"},"content":"    - [Saving data](#saving-data)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Liu-Jihan"},"content":"    - [Editing a patient](#editing-a-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Liu-Jihan"},"content":"    - [Tagging and untagging a patient](#tagging-and-untagging-a-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Liu-Jihan"},"content":"    - [Prescribing and unprescribing medicine](#prescribing-and-unprescribing-medicine)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Liu-Jihan"},"content":"10. [Appendix: Planned Enhancements](#appendixplanned-enhancements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Liu-Jihan"},"content":"    - [1. Input Validation for find](#1-enhancement-input-validation-for-find)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Liu-Jihan"},"content":"    - [2. Duplicate Detection for add](#2-enhancement-duplicate-detection-for-add)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Liu-Jihan"},"content":"    - [3. Non-ambiguous untag t/all or unprescribe m/all](#3-enhancement-non-ambiguous-untag-tall-or-unprescribe-mall)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Liu-Jihan"},"content":"    - [4. Rename internal addressBook to careConnect](#4-enhancement-renaming-internal-uses-of-addressbook-to-careconnect)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Liu-Jihan"},"content":"11. [Appendix: Effort](#appendix-effort)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* We would like to acknowledge the following repository as the foundational starting point for our project:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"[nus-cs2103-AY2425S2/tp](https://github.com/nus-cs2103-AY2425S2/tp)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Liu-Jihan"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Liu-Jihan"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Liu-Jihan"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Liu-Jihan"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Liu-Jihan"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Liu-Jihan"},"content":"  \u003cimg src\u003d\"images/UiClassDiagram.png\" alt\u003d\"Structure of the UI Component\" /\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Liu-Jihan"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PatientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `patient` object residing in the `Model`.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003einformation_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Liu-Jihan"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Liu-Jihan"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a patient).\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Liu-Jihan"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Liu-Jihan"},"content":"* stores the patients\u0027 data i.e., all `patient` objects (which are contained in a `UniquePatientList` object).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `patient` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cpatient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `patient` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `patient` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"* can save both the patients\u0027 data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Luoq1-Xu"},"content":"## **Implementations of Key Features**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Luoq1-Xu"},"content":"This section describes detailed implementation notes for  the `add` feature","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Luoq1-Xu"},"content":"(A Patient Management Feature) to help you gain a ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Luoq1-Xu"},"content":"better understanding of CareConnect.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Luoq1-Xu"},"content":"### Add feature","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Luoq1-Xu"},"content":"The `add` feature enables users to add new patients to the patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Luoq1-Xu"},"content":"#### Execution flow","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Luoq1-Xu"},"content":"1. User inputs the command to create a new patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Bryce-3D"},"content":"1. A `LogicManager` object is called to execute the command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Bryce-3D"},"content":"1. The `LogicManager` object calls the `parseCommand` method of an `addressBookParser` object to parse the user\u0027s input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Bryce-3D"},"content":"1. The `addressBookParser` matches the command, identifying the `add` command\u0027s `Command Word` (which is `add`),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Luoq1-Xu"},"content":"   and thus creates an `addCommandParser`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Bryce-3D"},"content":"1. The `parse` method of that `addCommandParser` object is called, which parses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Bryce-3D"},"content":"   the user\u0027s arguments and returns an `addCommand` object to the `addressBookParser` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Bryce-3D"},"content":"1. This `addCommand` is then returned to the `LogicManager` object, which calls the `execute` method ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Luoq1-Xu"},"content":"   in the `addCommand` object, passing in a `model` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Bryce-3D"},"content":"1. In the `execute` method, the `hasPatient` method of the `model` is called to check if the patient already exists.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Bryce-3D"},"content":"1. If the patient does not already exist in the `model`, `addPatient` is called, which adds a patient to the `model`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Bryce-3D"},"content":"1. The command finishes executing, and a success message is displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Bryce-3D"},"content":"\u003cimg src\u003d\"images/AddSequenceDiagram.png\"/\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Luoq1-Xu"},"content":"### [Proposed] Undo/redo feature","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Luoq1-Xu"},"content":"* `VersionedAddressBook#commit()` — Saves the current AddressBook state in its history.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Luoq1-Xu"},"content":"* `VersionedAddressBook#undo()` — Restores the previous AddressBook state from its history.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Luoq1-Xu"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone AddressBook state from its history.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Luoq1-Xu"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial AddressBook state, and the `currentStatePointer` pointing to that single AddressBook state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th patient in the patient book. The ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Luoq1-Xu"},"content":"`delete` command calls `Model#commitAddressBook()`, causing the modified state of the AddressBook.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Luoq1-Xu"},"content":"after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted AddressBook state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Luoq1-Xu"},"content":"Step 3. The user executes `add n/David …​` to add a new patient. The `add` command also calls `Model#commitAddressBook()`, causing another modified AddressBook state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Luoq1-Xu"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the AddressBook state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Luoq1-Xu"},"content":"Step 4. The user now decides that adding the patient was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous AddressBook state, and restores the AddressBook to that state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Luoq1-Xu"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Luoq1-Xu"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the AddressBook to that state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Luoq1-Xu"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest AddressBook state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"patient book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Luoq1-Xu"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all AddressBook states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Luoq1-Xu"},"content":"* **Alternative 1 (current choice):** Saves the entire patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the patient being deleted).","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Luoq1-Xu"},"content":"  * Cons: We must ensure that the implementations of each command are correct.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"szelingtan"},"content":"### 5.) \\[Enhancement\\] Non-ambiguous Phone Number Handling","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"szelingtan"},"content":"Currently, the system only accepts plain numeric formats without hyphens or spaces (e.g., \"83218099\"). ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"szelingtan"},"content":"While this implementation is clear and unambiguous, it limits user flexibility when entering phone numbers.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"szelingtan"},"content":"It would be beneficial to expand the accepted formats to accommodate more common phone number patterns. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"szelingtan"},"content":"Users often prefer to enter phone numbers with formatting characters or country codes that align with standard conventions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"szelingtan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"szelingtan"},"content":"This enhancement would expand phone number support to accept multiple formats such as `+65-8321-8099`, `+65 8321 8099`, or `(65) 8321 8099` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"szelingtan"},"content":"while still maintaining a consistent internal representation. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"szelingtan"},"content":"The application could implement format normalization that removes non-numeric characters for ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"szelingtan"},"content":"storage while preserving the original format for display. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Target user profile**: Social Workers","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of patient contacts","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"* has a need to track patient visits","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"* decent but not exceptional typing speed","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"* may not be particularly comfortable using CLI apps","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Value proposition**: manage patient details and visits more efficiently than paper records","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"| Priority | As a …​       | I want to …​                 | So that I can…​                                         |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"| -------- |---------------|------------------------------|---------------------------------------------------------|","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* * *`  | social worker | add contacts of new patients | keep track of the new patients\u0027 details                 |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `* * *`  | social worker | delete patient contacts      | remove discharged / deceased patients from patient book |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"| `* * *`  | social worker | tag a patient                | identify the patient\u0027s condition                        |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"| `* * *`  | social worker | add patient medication       | keep track of medication taken by the patient           |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"| `* *`    | social worker | add last visit               | keep track of my last visit to the patient              |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"| `*`      | social worker | edit patient details         | update changes in patient information when necessary    |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"| `*`      | social worker | add remarks after each visit | document important information                          |","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Luoq1-Xu"},"content":"(For all use cases below, the **System** is the `CareConnect` and the **Actor** is the `user`, ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"unless specified otherwise)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Use case: Add a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"1.  User requests to add a patient","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect prompts for patient details","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"3.  User enters patient\u0027s name, phone number, email, and address","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect adds the patient and confirms the addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"* 3a. User enters an invalid phone number.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"  * 3a2. User enters a valid phone number.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 3b. User enters an invalid email.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"  * 3b2. User enters a valid email.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"* 3c. User omits one or more required fields.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3c1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"  * 3c2. User enters all required information.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"* 3d. User enters details for a patient with same name and phone number as an existing patient.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3d1. CareConnect alerts the user about the duplicate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"  * 3d2. User enters different information or cancels the operation.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific patient in the list","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect deletes the patient and confirms the deletion","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"* 3b. User does not specify an index.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Use case: Tag a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"3.  User requests to tag a specific patient with a category","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect adds the tag to the patient and confirms the addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"* 3b. User does not specify a tag name.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Use Case: Untag a patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"      Main Success Scenario (MSS)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"**Use case: Untag a patient**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. User requests to list patients","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Luoq1-Xu"},"content":"2. CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"3. User requests to remove tags from a specific patient using one of the following: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"untag to remove specific tags, or remove all tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Luoq1-Xu"},"content":"4. CareConnect removes the tags accordingly and confirms the removal","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"* 3b. No tags are specified with t/","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"      Use Case: Untag a patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"      Main Success Scenario (MSS)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"* 3c. The specified tags are not present in the patient’s tag list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3c1. CareConnect shows an error message","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"    * ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"* 3d. The patient has no tags, but the user uses untag INDEX t/all","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Luoq1-Xu"},"content":"    * CareConnect shows an error message indicating there are no tags to remove","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"    * Use case resumes at step 3.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"**Use case: Add medication to a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"3.  User requests to add medication for a specific patient","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect adds the medication to the patient\u0027s record and confirms the addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"* 3b. User does not specify medication details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"**Use case: Delete a medication for a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"3.  User requests to delete medication for a specific patient","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect removes the medication from the patient\u0027s record and confirms the deletion","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Luoq1-Xu"},"content":"  * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"* 3b. The patient has no medication records.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Luoq1-Xu"},"content":"  * CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"**Use case: Add medication to a patient**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"3.  User requests to add medication for a specific patient","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect adds the medication to the patient\u0027s record and confirms the addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"* 3b. User does not specify medication details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3b1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"**Use case: Delete last visit**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"Luoq1-Xu"},"content":"2.  CareConnect shows a list of patients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"3.  User requests to delete the last visit record of a specific patient","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"Luoq1-Xu"},"content":"4.  CareConnect removes the visit information and confirms the deletion","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"Luoq1-Xu"},"content":"    * 3a1. CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"* 3b. The patient has no visit records.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"Luoq1-Xu"},"content":"    * CareConnect shows an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"1. **Cross-Platform Compatibility**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"    - Should work on any mainstream OS (Windows, macOS, Linux) as long as it has Java 17 or above installed.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"2. **Performance**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"    - Should be able to hold up to **1000 patients** without noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"    - Should start up within **3 seconds** on a typical consumer laptop with at least **8GB RAM and an SSD**.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"3. **Scalability**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"    - Should maintain performance when handling up to **10000 patients**, though minor degradation is acceptable.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"    - Should allow for future expansion without requiring a complete system overhaul.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"4. **Usability**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"    - A user with **above-average typing speed** for regular English text (i.e., not code, not system admin commands) should be able to accomplish most tasks **faster using commands than using the mouse**.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"    - **Keyboard shortcuts** should be provided for power users to navigate the application efficiently.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"    - The UI should be **intuitive enough** for new users to accomplish basic tasks within **5 minutes of exploration**.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"5. **Accessibility**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"    - Should support **screen readers and keyboard navigation** to ensure usability for users with disabilities.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"    - Should have **sufficient contrast and text scaling options** to accommodate visually impaired users.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"6. **Portability**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"    - Should not require **installation beyond Java 17** (i.e., should work as a standalone JAR or similar distribution).","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"    - Should not require **administrative privileges** to run on Windows, macOS, or Linux.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"7. **Security**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"    - Should not require **internet access** for core functionality to ensure **data privacy**.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"    - Should prevent **unauthorized modification** of critical data without explicit user confirmation.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"8. **Reliability**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"    - Should not crash or lose user data due to **unexpected shutdowns** (e.g., power failure).","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"    - Should have **autosave functionality** to prevent accidental data loss.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"9. **Maintainability**","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"    - Codebase should follow **OOP principles** to ensure ease of maintenance.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"    - Should be **modular**, allowing for feature enhancements without major rewrites.","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-28","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"* **Social Workers**: The target demographic, specifically those who","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"  do patient visits for the elderly","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"* **Contacts**: Information such as phone number, address, and email that","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"  can be used to reach a patient in the application.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"* **Tag**: A label assigned to a patient in the application.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"* **Patient Details**: Details relating to a patient such as their illness,","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"  required medication, etc.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"* **Remarks**: Any special detail related to visits to the patient.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"Bryce-3D"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"Bryce-3D"},"content":"   1. Double-click the jar file \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimal.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"### Deleting a patient","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. Deleting a patient while all patients are being shown","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"Bryce-3D"},"content":"      Expected: The first patient is deleted from the list. Details of the deleted patient shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"      Expected: No patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size) \u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"Bryce-3D"},"content":"1. Dealing with missing data files","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"Bryce-3D"},"content":"    1. Find the JSON file with the data in the `data` folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"Bryce-3D"},"content":"    1. Delete it while CareConnect is closed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"Bryce-3D"},"content":"    1. Launch the app and see how it runs. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"Bryce-3D"},"content":"       Expected: Launch the app with the default sample data list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"Bryce-3D"},"content":"1. Dealing with corrupted data files","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"Bryce-3D"},"content":"    1. Prerequisites: The data folder exists with the JSON file storing the data.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"Bryce-3D"},"content":"    1. Find the JSON file with the data in the `data` folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"Bryce-3D"},"content":"    1. Modify it manually such that it is no longer a valid JSON file (e.g., by mismatching the curly braces).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"Bryce-3D"},"content":"    1. Launch the app and see how it runs.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"Bryce-3D"},"content":"   ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"Bryce-3D"},"content":"    Expected: Launch the app as normal with a blank list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"Bryce-3D"},"content":"### Editing a patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"Bryce-3D"},"content":"1. Editing a patient\u0027s name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 3 patients, none of which are named \"Akemi Homura\" or \"Kaname Madoka\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `edit 1 n/Akemi Homura` \u003cbr\u003e ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"Bryce-3D"},"content":"   Expected: The name of the 1st patient is successfully changed to \"Akemi Homura\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `edit 3 n/Kaname Madoka` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"Bryce-3D"},"content":"   Expected: The name of the 3rd patient is successfully changed to \"Kaname Madoka\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"Bryce-3D"},"content":"1. Editing a patient\u0027s address","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 2 patients.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `edit 2 a/Kamihama City` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"Bryce-3D"},"content":"   Expected: The address of the 2nd patient is successfully changed to \"Kamihama City\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"Bryce-3D"},"content":"### Tagging and untagging a patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"Bryce-3D"},"content":"1. Tagging patients","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 3 patients, all of which have no tags.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `tag 1 t/Dysphoria t/ASD` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully add *both* Dysphoria and ASD as tags to the 1st patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `tag 1 t/ASD` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Get an error saying that the 1st patient already has the ASD tag (due to the previous test).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `tag 3 t/Anxiety` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully add Anxiety as a tag to the 3rd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"Bryce-3D"},"content":"1. Untagging patients","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 2 patients, all of which have the tags \"Dysphoria\", \"ASD\", and \"Anxiety\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `untag 1 t/ASD` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully remove only the ASD tag from the 1st patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `untag 1 t/ASD` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Get an error saying that the 1st patient does not have the tag ASD (due to the previous test).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `untag 2 t/Dysphoria t/Anxiety` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully remove both the Dysphoria and Anxiety tags from the 2nd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"Bryce-3D"},"content":"1. Using the untag all feature","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 2 patients, all of which have at least 2 tags.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `untag 2 t/all` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully remove all tags from the 2nd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"Bryce-3D"},"content":"### Prescribing and unprescribing medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"Bryce-3D"},"content":"1. Prescribing medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 3 patients, all of which have no medicine.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `prescribe 1 m/Estrogen m/Anti-androgens` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully prescribe *both* Estrogen and Anti-androgens to the 1st patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `prescribe 1 m/Estrogen` \u003cbr\u003e ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Get an error saying that the 1st patient already has Estrogen prescribed (due to the previous test).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `prescribe 3 m/Testosterone` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully prescribe Testosterone to the 3rd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"Bryce-3D"},"content":"1. Unprescribing medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have at least 2 patients, all of which have Estrogen, Anti-androgens, and Ibuprofen prescribed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `unprescribe 2 m/Ibuprofen` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully unprescribe only Ibuprofen from the 2nd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `unprescribe 2 m/Estrogen m/Ibuprofen` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Get an error saying that the 2nd patient does not have Ibuprofen prescribed (due to the previous test).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"Bryce-3D"},"content":"1. Using the unprescribe all feature","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"Bryce-3D"},"content":"   1. Prerequisites: Have a list of at least 2 patients, all of which have at least 2 prescribed medicines.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"Bryce-3D"},"content":"   1. Test case: `unprescribe 2 m/all` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"Liu-Jihan"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully unprescribe all medicines from the 2nd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"Liu-Jihan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"Bryce-3D"},"content":"   Expected: Successfully unprescribe all medicines from the 2nd patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"Luoq1-Xu"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"Luoq1-Xu"},"content":"## **Appendix:Planned Enhancements**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"Luoq1-Xu"},"content":"### The team size is **5**.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"Luoq1-Xu"},"content":"### 1.) \\[Enhancement\\] Input Validation for `find`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"Luoq1-Xu"},"content":"Currently, there is no input validation for the `find` command. This means that an input such as","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"Luoq1-Xu"},"content":"\u003e `find \u0026^%$*\u0026!%$(*\u0026`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"Luoq1-Xu"},"content":"would be accepted despite it not being possibly part of any name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"Luoq1-Xu"},"content":"Another possible confusion is if the `/strict` prefix were mistyped as `strict/`, causing an input such as","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"Luoq1-Xu"},"content":"\u003e `find strict/ Homura`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"Luoq1-Xu"},"content":"to instead search for the names `strict/` and `Homura` not strictly rather than searching `Homura` strictly","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"Luoq1-Xu"},"content":"A future update could parse the input and give an error message to the user when an invalid search name is entered.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"Luoq1-Xu"},"content":"### 2.) \\[Enhancement\\] Duplicate Detection for `add`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"Luoq1-Xu"},"content":"Currently, CareConnect compares strings case insensitively. However, it still takes into account spaces.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"Luoq1-Xu"},"content":"This means that names such as \"Akemi Homura\" and \"Akemi \u0026nbsp;\u0026nbsp;\u0026nbsp; Homura\" count as different people","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"Luoq1-Xu"},"content":"even though they likely should refer to the same person.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"Luoq1-Xu"},"content":"We could add a check that splits the name by whitespace and compares the parts case-insensitively, then give a warning to the user if a potential duplicate is found.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"Luoq1-Xu"},"content":"### 3.) \\[Enhancement\\] Non-ambiguous `untag t/all` or `unprescribe m/all`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"Luoq1-Xu"},"content":"Currently, there is some slight ambiguity in these delete all functions. They could be interpreted as","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"Luoq1-Xu"},"content":"removing the tag \"all\" or removing the medicine \"all\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"Luoq1-Xu"},"content":"It is very unlikely that a user would create a tag named \"all\" or prescribe a medicine \"all\", since they don\u0027t","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"Luoq1-Xu"},"content":"mean anything in the context of a patient under the care of a social worker.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"Luoq1-Xu"},"content":"However, removing this ambiguity would still be preferable. This could be done by making them","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"Luoq1-Xu"},"content":"entirely separate commands like `untagAll` and `unprescribeAll`, or making the keyword to trigger","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"Luoq1-Xu"},"content":"the deletion not a valid tag/medicine so there is no ambiguity such as `untag t/[ALL]` and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"Luoq1-Xu"},"content":"`unprescribe m/[ALL]` since `[` and `]` are not valid characters for tags and medicines.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"Luoq1-Xu"},"content":"### 4.) \\[Enhancement\\] Renaming internal uses of `addressBook` to `careConnect`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"Luoq1-Xu"},"content":"Currently, many internal functions and classes still reference `addressBook`, which is why most of the Developer Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"Luoq1-Xu"},"content":"still references `addressBook`. In the future, we hope to replace instances of `addressBook` with `CareConnect`, to","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"Luoq1-Xu"},"content":"better reflect `CareConnect`\u0027s status as separate from `addressBook`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"Liu-Jihan"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"Liu-Jihan"},"content":"## Appendix: Effort","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"Liu-Jihan"},"content":"CareConnect is a significant extension of the AddressBook Level 3 (AB3) base project. While AB3 operates on a single `Person` entity, CareConnect supports a model involving multiple interconnected entities:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"Liu-Jihan"},"content":"`Patient`, `Tag`, `Medicine`, and `VisitHistory`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"Liu-Jihan"},"content":"The effort required to design, implement, and polish these features demanded considerably more design planning, code refactoring, testing, and documentation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"Liu-Jihan"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"Liu-Jihan"},"content":"### Difficulty Level \u0026 Challenges Faced","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"Liu-Jihan"},"content":"- **Multi-entity Data Model**: One of the biggest design shifts was moving from AB3\u0027s flat `Person` model to a relational structure. Each `Patient` could have multiple `Tags`, `Medicines`, and optionally a `Last Visit` date. This required the creation of `UniqueTagList`, bidirectional references, deduplication logic, and additional parsing and serialization layers.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"Liu-Jihan"},"content":"- **Feature Granularity \u0026 Complexity**: The team implemented granular commands such as `untag`, `unprescribe`, and `delLastVisit` — each with nuanced logic and edge cases. Features like `untag INDEX t/all` or `find /strict` needed custom parsing logic and well-defined behavioral constraints to avoid ambiguity.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"Liu-Jihan"},"content":"- **Robust CLI-Driven Input Design**: The command-line interface was not only feature-rich, but also robust against invalid inputs. Input requirements such as strictly formatted dates, unique (case-insensitive) names, and custom validation for phone/email/medicine/tag types ensured reliability and prevented user confusion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"Liu-Jihan"},"content":"- **Interactive JavaFX GUI**: The GUI was developed to provide a clean, informative interface while remaining reactive to CLI inputs. Changes in model state (e.g., tag removal, patient deletion) were automatically reflected in the UI through observable bindings.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"Liu-Jihan"},"content":"- **Undo/Redo with Entity State**: The inclusion of `Undo` and `Redo` required the development of a `VersionedAddressBook` that could store and restore complex model states. Given the expanded data relationships, the effort to correctly snapshot and rollback patient changes was substantial.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"Liu-Jihan"},"content":"- **User-Centered Design**: The app was designed with social workers in mind — users who are domain experts but not necessarily tech-savvy. Thus, the command syntax, field naming, help documentation, and error messages were all carefully written to be intuitive and context-appropriate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"Liu-Jihan"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"Liu-Jihan"},"content":"### Project Effort","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"Liu-Jihan"},"content":"This project went through several development phases:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"Liu-Jihan"},"content":"- **Architectural Planning**: Reorganizing the AB3 structure to support a multi-entity design while preserving modularity.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"Liu-Jihan"},"content":"- **Core Feature Implementation**: Creating commands like `prescribe`, `untag`, `lastVisit`, and `delLastVisit` required model changes, storage updates, and thorough command testing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"Liu-Jihan"},"content":"- **Refactoring and Encapsulation**: Efforts were made to encapsulate logic (e.g., duplicate tag detection, unprescribe-all behavior), improving maintainability and scalability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"Liu-Jihan"},"content":"- **Testing \u0026 QA**: Over 100 test cases were written to ensure command correctness, parser robustness, and GUI functionality. Stubs such as `ClearConfirmationWindowStub` were introduced for testability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"Liu-Jihan"},"content":"- **Documentation**: A comprehensive [User Guide](UserGuide.md) and [Developer Guide](DeveloperGuide.md) were produced, complete with usage examples, diagrams, and manual testing instructions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"Liu-Jihan"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"Liu-Jihan"},"content":"### Reuse and Adaptation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"Liu-Jihan"},"content":"About **8–10%** of the overall development effort was saved through reuse and adaptation:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"Liu-Jihan"},"content":"- **SE-EDU’s `VersionedAddressBook`** design was used as a conceptual base for implementing undo/redo, but was customized heavily to handle `Patient` and associated nested objects.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"Liu-Jihan"},"content":"- **JavaFX GUI classes** such as `UiPart`, `CommandBox`, and `MainWindow` were extended and customized to support contextual error messages and live-updating patient lists.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"Liu-Jihan"},"content":"- **Diagram generation tools** and markdown structuring conventions were borrowed from SE-EDU guides and adapted to our domain-specific components (e.g., UML for `Patient`–`Medicine`–`Tag` relationships).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"Liu-Jihan"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"Liu-Jihan"},"content":"### Summary","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"Liu-Jihan"},"content":"CareConnect stands as a well-engineered, user-centered, and extensible desktop application. Compared to AB3, this project presented:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"Liu-Jihan"},"content":"- A **higher degree of domain modeling**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"Liu-Jihan"},"content":"- A **wider range of commands** with real-world parallels","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"Liu-Jihan"},"content":"- A **more polished and testable GUI**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"Liu-Jihan"},"content":"- A **more rigorous input and error handling system**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"Liu-Jihan"},"content":"- And a **scalable architecture** designed for future extensions (e.g., support for scheduling, visit history tracking)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"Liu-Jihan"},"content":"The result is a feature-rich, production-quality CLI+GUI hybrid tailored for social workers — providing them with the tools to manage sensitive patient information efficiently and safely.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"Liu-Jihan"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Thank you!","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"szelingtan":10,"Eun777":3,"Liu-Jihan":110,"Luoq1-Xu":114,"Bryce-3D":91,"-":552}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# CareConnect User Guide","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"CareConnect is a **desktop app for managing patients,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)**.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Created for social workers, CareConnect allows you to not only **track patient contacts** but also their **diagnosis,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"prescriptions and last visit information** on a single app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"### Table of Contents","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* [Input Requirements](#input-requirements)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"* [Features](#features)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    * [Patient Management](#patient-management)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eun777"},"content":"        * [Adding a patient: `add`](#adding-a-patient--add)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        * [Editing a patient: `edit`](#editing-a-patient--edit)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        * [Deleting a patient: `delete`](#deleting-a-patient--delete)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        * [Listing all patients: `list`](#listing-all-patients--list)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        * [Clearing all entries: `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        * [Locating patients by name: `find`](#locating-patients-by-name-find)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    * [Patient Data Management](#patient-data-management)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        * [Tag a patient: `tag`](#tag-a-patient--tag)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        * [Untag a patient: `untag`](#untag-a-patient--untag)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        * [Adding medication to a patient: `prescribe`](#adding-medication-to-a-patient--prescribe)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        * [Removing medication from a patient: `unprescribe`](#removing-medication-from-a-patient--unprescribe)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        * [Adding last visit record to a patient: `lastVisit`](#adding-last-visit-record-to-a-patient--lastvisit)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        * [Deleting the last visit information: `delLastVisit`](#deleting-the-last-visit-information--dellastvisit)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * [App Navigation](#app-navigation)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        * [Viewing help: `help`](#viewing-help--help)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        * [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * [Data File Management](#data-file-management)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        * [Saving the data](#saving-the-data)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [FAQ](#faq)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [Known issues](#known-issues)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eun777"},"content":"1. Check your system compatibility:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eun777"},"content":"- Ensure you have **Java 17** or above installed on your computer.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eun777"},"content":"- A guide on how to install the required software can be found [here](https://se-education.org/guides/tutorials/javaInstallation.html).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eun777"},"content":"2. Download CareConnect:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eun777"},"content":"   1. Access the latest release of CareConnect from [here](https://github.com/AY2425S2-CS2103T-T17-2/tp/releases).\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"   2. Under **Assets**, click to download the file titled `CareConnect.jar`. ![Assets](images/quickstart.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"3. Set up CareConnect:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"   1. Move the downloaded `.jar` file into a folder where you would like to keep your app data. (You can also create a new folder!)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"   2. Open the **Command Prompt** (Windows) or **Terminal** (Mac/Linux) .","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"      - A guide to access Command Prompt (Windows) [here](https://www.dell.com/support/kbdoc/en-us/000130703/the-command-prompt-what-it-is-and-how-to-use-it-on-a-dell-system#:~:text\u003dPress%20the%20Windows%20key%20%2B%20r,opens%20the%20Command%20Prompt%20window.).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eun777"},"content":"      - A guide to access Terminal (Mac/Linux) [here](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eun777"},"content":"   3. In the Command Prompt or Terminal:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eun777"},"content":"      - Type `cd` followed by the folder path where your `CareConnect.jar` file is stored.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eun777"},"content":"      - Example: `cd Downloads/Work` where `CareConnect.jar` is stored in a folder named `Work` within `Downloads`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eun777"},"content":"   4. Run this command: `java -jar CareConnect.jar`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eun777"},"content":"4. Launch CareConnect:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eun777"},"content":"- Once launched, the CareConnect window should appear within a few seconds, as shown below (with sample data preloaded).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eun777"},"content":"![UI](images/Ui.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eun777"},"content":"- Refer to the [User Interface Layout](#user-interface-layout) below for a run-through of the user-interface of CareConnect.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eun777"},"content":"5. Get Started with Sample Commands:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eun777"},"content":"- Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eun777"},"content":"- Some example commands you can try:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    * `list` : Lists all patient contacts.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szelingtan"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/2025-01-12 m/Insulin` : Adds a contact named `John Doe` to the patient contact book.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the third contact shown in the current list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eun777"},"content":"6. Set up your own patient list:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eun777"},"content":"- When you are ready to start adding your own patient contacts, `clear` the list and add your own patients using the `add` command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eun777"},"content":"7. What\u0027s next:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eun777"},"content":"- Check out the [Features](#features) and [Command Summary](#command-summary) to explore what CareConnect can do.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eun777"},"content":"- Review the [Input Requirements](#input-requirements) to ensure your patient entries follow the correct format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eun777"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eun777"},"content":"## User-interface Layout","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eun777"},"content":"### CareConnect Overview","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eun777"},"content":"![UI](images/ui-layout-overall.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eun777"},"content":"### Patient Card","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eun777"},"content":"![UI](images/ui-layout-patient.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"| Action                | Format                                                                                   | Example                                                                                                         |","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"|-----------------------|------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"| **Add**               | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/LAST_VISIT_DATE] [t/TAG] [m/MEDICINE]…​` | `add n/James Ho p/98280482 e/jamesho@example.com a/123, Clementi Rd, 1234665 d/2025-01-25 t/diabetes m/Insulin` |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"| **Edit**              | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]…​`                           | `edit 2 n/James Lee e/jameslee@example.com`                                                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"| **Delete**            | `delete INDEX`                                                                           | `delete 3`                                                                                                      |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"| **List**              | `list`                                                                                   |","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"| **Clear**             | `clear`                                                                                  |                                                                                                                 |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"| **Find**              | `find KEYWORD [MORE_KEYWORDS]`  \u003cbr/\u003e `find /strict KEYWORD `                            | `find James Jake`     \u003cbr/\u003e `find /strict James Jake`                                                           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"| **Tag**               | `tag INDEX t/TAG [t/MORE_TAGS]...`                                                       | `tag 2 t/highBloodPressure`                                                                                     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"| **Untag**             | `untag INDEX t/TAG [t/MORE_TAGS]...`  \u003cbr/\u003e `untag INDEX t/all`                          | `untag 2 t/highBloodPressure`  \u003cbr/\u003e `untag 1 t/all`                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"| **Prescribe**         | `prescribe INDEX m/MEDICINE_NAME`                                                        | `prescribe 1 m/Insulin` \u003cbr/\u003e `prescribe 1 m/Insulin m/Panadol`                                                 |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"| **Unprescribe**       | `unprescribe INDEX m/MEDICINE_NAME`  \u003cbr/\u003e `unprescribe INDEX m/all`                     | `unprescribe 1 m/Insulin`  \u003cbr/\u003e `unprescribe 1 m/Insulin m/Panadol` \u003cbr\u003e `unprescribe 1 m/all`                 |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"| **Last Visit**        | `lastVisit INDEX d/LAST_VISIT_DATE`                                                      | `lastVisit 1 d/2025-03-15`                                                                                      |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"| **Delete Last Visit** | `delLastVisit INDEX`                                                                     | `delLastVisit 2`                                                                                                |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"| **Help**              | `help`                                                                                   |                                                                                                                 |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"| **Exit**              | `exit`                                                                                   |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Input Requirements","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"| Input               | Requirements                                                                                                                                                                                                                                                                        | Example                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eun777"},"content":"|---------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"| **NAME**            | Alphanumeric, can contain spaces, cannot be blank. Duplicate names are not allowed (case-insensitive). e.g. \"John Doe\" and \"JOHN DOE\" are considered the same name. Other non-specified formats such as special characters including @ are currently not supported.                 | Tan Ah Kow                          |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bryce-3D"},"content":"| **PHONE**           | Contains only numbers, minimum 3 and maximum 16 digits. Note that only one phone number input is allowed.                                                                                                                                                                           | 87874848                            |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"szelingtan"},"content":"| **EMAIL**           | Must follow `\u003clocal-part\u003e@\u003cdomain\u003e` format. The `\u003clocal-part\u003e` should only contain alphanumeric characters, except for `+`, `_`, `.` and `-` and cannot start or end with any special characters. The `\u003cdomain\u003e` should only contain alphanumeric characters and the `.` character. | tanahkow@yahoo.com                  |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"| **ADDRESS**         | No restrictions, cannot be blank.                                                                                                                                                                                                                                                   | Blk 519 Serangoon Avenue 1, #12-345 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Luoq1-Xu"},"content":"| **MEDICINE**        | Alphanumeric, \u0027-\u0027 and \u0027_\u0027 allowed, **but cannot start or end with a special character**. For example: `low-blood-pressure` is a valid tag but `low blood pressure` is invalid. **Medicines are case-insensitive**.                                                                  | Paracetamol, Insulin                |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bryce-3D"},"content":"| **TAG**             | Alphanumeric, \u0027-\u0027 and \u0027_\u0027 allowed. For example: `acetaminophen_codeine` is a valid medicine name but `acetaminophen codeine` is invalid. **Tags are case-sensitive**.                                                                                                               | Diabetes, Osteoporosis              |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Luoq1-Xu"},"content":"| **LAST_VISIT_DATE** | Must follow `YYYY-MM-DD` format. Cannot be more recent than today\u0027s date.                                                                                                                                                                                                           | 2025-01-01                          |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"| **INDEX**           | Index of patient in the displayed patient list to be edited. Must be a **positive integer** 1, 2, 3, …​                                                                                                                                                                             | 1                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Items with `…​` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. zero times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"szelingtan"},"content":"* Extraneous parameters for `exit` command and `clear` command will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"## Patient Management","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"A core set of commands for managing your patient records.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"These functions allow you to add new patients to the system, edit their basic contact information, remove patients, view all patients, and search for specific patients by name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"szelingtan"},"content":"## Handling Patient Details","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"szelingtan"},"content":"Note that multiple patients may have the same `phone number`, `email`, `address`, `last ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"szelingtan"},"content":"visit`, `tag`, `medicine`, but not the same **`name`**. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"szelingtan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Adding a patient : `add`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Adds a patient to the patient contact book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Format:** `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/LAST_VISIT_DATE] [t/TAG] [m/MEDICINE]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: Tip:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Eun777"},"content":"A patient can have any number of tags and medicine (including 0).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Eun777"},"content":"* For more information on the input requirements for each field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Eun777"},"content":"* Patients with the same name are not allowed, but you can add multiple","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Eun777"},"content":"  patients with the same phone number, email, address, last visit date, medicine and tags.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/2025-01-12 m/Insulin`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `add n/James Ho p/98280482 e/jamesho@example.com a/123, Clementi Rd, 1234665 d/2025-01-25 t/diabetes`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Editing a patient : `edit`","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Edits an existing patient at the specified index in the patient contact book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bryce-3D"},"content":"**Format:** `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]​`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for each field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Eun777"},"content":"* If the inputted edit command does not result in any changes to specified patient, it will not be allowed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Luoq1-Xu"},"content":"* The `edit` command can only modify **name, phone, email, and address.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Luoq1-Xu"},"content":"* The `edit` command **cannot** modify **tags, medicine and last visit date.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Eun777"},"content":"    * Use `tag` and `untag`to manage the patient\u0027s tags.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Eun777"},"content":"    * Use `prescribe` and `unprescribe` to manage the patient\u0027s medicine.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Eun777"},"content":"    * Use `lastVisit` and `delLastVisit` to manage the patient\u0027s last visit date.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the first patient to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Luoq1-Xu"},"content":"*  `edit 2 n/Betsy Crower` Edits the name of the second patient to be `Betsy Crower`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Deleting a patient : `delete`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Deletes the patient at the specified index from the patient contact book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the second patient in the patient contact book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the first patient in the results of the `find` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"### Listing all patients : `list`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"Shows a list of all patients in the patient contact book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Format:** `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"Clears all entries from the patient contact book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"**Format:** `clear`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Locating patients by name: `find`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Format:** `find KEYWORD [MORE_KEYWORDS]` or `find /strict KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"* find must be accompanied by a keyword","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* The search is case-insensitive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * e.g. `hans` will match `Hans`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* `find` patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `find John` returns `John` and `John Doe`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* `find /strict John` returns only if a patient with the exact name `John` exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* `find /strict Doe John` returns `0 patients listed` \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Luoq1-Xu"},"content":"*The result after executing the command `find alex david`.*","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## Patient Data Management","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"Specialized commands for tracking clinical information about your patients.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"These functions enable you to add and remove diagnostic tags, manage medication prescriptions,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"and record patient visit history.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"Use these commands to maintain comprehensive patient health records beyond basic contact information.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Tag a patient : `tag`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"Tag an existing patient in the patient contact book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Format:** `tag INDEX t/TAG [t/MORE_TAGS]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for the `TAG` field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"* Adds the specified tags to the patient at the specified `INDEX`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* At least one tag must be provided.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Luoq1-Xu"},"content":"* Tags are case-sensitive. This means that you can add the `Diabetes` tag and `diabetes`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Luoq1-Xu"},"content":"  tag to the same patient as they would not be considered as duplicate tags.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Eun777"},"content":"* Avoid using `all` as a tag.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Eun777"},"content":"    * The keyword `t/all` is reserved for removing all tags and **may cause unintended behaviour if used incorrectly**.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"*  `tag 1 t/diabetes` Add the tag `diabetes` to the first patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"*  `tag 2 t/dementia t/highBloodPressure` Add the tags `dementia` and `highBloodPressure` to the second patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Untag a patient : `untag`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"Untag an existing patient in the patient contact book.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"**Format:** `untag INDEX t/TAG [t/MORE_TAGS]…​` or `untag INDEX t/all`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for the `TAG` field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"* Removes the specified tags from the patient at the specified `INDEX`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* At least one tag must be provided.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"*  `untag 1 t/diabetes` Removes the tag `diabetes` from the first patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"*  `untag 2 t/dementia t/highBloodPressure` Remove the tags `dementia` and `highBloodPressure` from the second patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"*  `untag 3 t/all` Removes all tags from the third patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Adding medication to a patient : `prescribe`","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"szelingtan"},"content":"Add medication(s) to an existing patient in the patient contact book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Format:** `prescribe INDEX m/MEDICINE_NAME [m/MORE_MEDICINE_NAMES]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for the `MEDICINE_NAME` field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"szelingtan"},"content":"* Add the specified medication(s) to the patient at the specified `INDEX`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"* At least one medicine name must be provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"* The medication will be added on to existing medications, i.e. adding of medications is cumulative.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Luoq1-Xu"},"content":"* You may add multiple medications at once by including multiple medicine names.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"  * e.g. `prescribe INDEX m/MEDICINE_NAME_ONE m/MEDICINE_NAME_TWO`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Luoq1-Xu"},"content":"* Medicines are **case-insensitive**. This means that you cannot add the `Panadol` medication and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"  `panadol` medication to the same patient as they would be considered as duplicate medication.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Eun777"},"content":"* Avoid using `all` as a medicine name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Eun777"},"content":"  * The keyword `m/all` is reserved for removing all medications and **may cause unintended behaviour if used incorrectly**.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Luoq1-Xu"},"content":"* Preceding and/or trailing white spaces will be ignored when prescribing medication.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Luoq1-Xu"},"content":"*  `prescribe 1 m/Insulin` adds `Insulin` to the first patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"*  `prescribe 2 m/Insulin m/Acetaminophen_Codeine` adds `Insulin` and `Acetaminophen_Codeine` to","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Luoq1-Xu"},"content":"   the second patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Removing medication from a patient : `unprescribe`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"szelingtan"},"content":"Removes specific medication(s) or all medications from an existing patient in the patient contact ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"szelingtan"},"content":"book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Format:** `unprescribe INDEX m/MEDICINE_NAME [m/MORE_MEDICINE_NAMES]…​` or `unprescribe INDEX m/all`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for the `MEDICINE_NAME` field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* Removes medication from the patient at the specified `INDEX` in the displayed patient list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* `unprescribe INDEX m/all` removes all medications from the patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"  * If you include `m/all` in a valid `unprescribe` command along with other medicine names,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    (like `unprescribe 1 m/all m/paracetamol`), **all other medicine names specified will be ignored**, ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"    and **all medicines will be removed from the specified patient**.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Luoq1-Xu"},"content":"* You may remove multiple medications at once by including multiple medicine names.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"  * e.g. `unprescribe INDEX m/MEDICINE_NAME_ONE m/MEDICINE_NAME_TWO`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Luoq1-Xu"},"content":"* Preceding and/or trailing white spaces will be ignored when unprescribing medication.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"*  `unprescribe 1 m/all` Removes all medication from the first patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"*  `unprescribe 2 m/Insulin` Removes `Insulin` from the second patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"*  `unprescribe 3 m/Insulin m/Acetaminophen_Codeine` removes `Insulin` and","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"   `Acetaminophen_Codeine` from the third patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"### Adding last visit record to a patient : `lastVisit`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"Adds a last visit record to an existing patient in the patient contact book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Format:** `lastVisit INDEX d/LAST_VISIT_DATE`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Luoq1-Xu"},"content":"* For more information on the input requirements for the `LAST_VISIT_DATE` field, please refer to the [Input Requirements](#input-requirements).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"* Adds last visit record to the patient at the specified `INDEX` in the displayed patient list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Luoq1-Xu"},"content":"* The `LAST_VISIT_DATE` field must be provided.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Luoq1-Xu"},"content":"* `LAST_VISIT_DATE` must be a valid calendar date on or before today\u0027s date (as shown on your computer\u0027s system).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Luoq1-Xu"},"content":"  Future dates are not accepted.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Examples:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"*  `lastVisit 1 d/2025-03-15` Adds the last visited date `2025-03-15` to the first patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Deleting the last visit information : `delLastVisit`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"Deletes the last visit information of a patient","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Format:** `delLastVisit INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Eun777"},"content":"* Deletes the last visit record from the patient at the specified `INDEX` in the displayed patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Eun777"},"content":"*  `delLastVisit 1` deletes the last visit information of the first patient in the displayed patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"## App Navigation","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Format:** `help`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Format:** `exit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"## Data File Management","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"CareConnect data is saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"There is no need to save manually.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"CareConnect data are saved automatically as a JSON file `[JAR file location]/data/careconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, CareConnect will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the CareConnect to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CareConnect home folder.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Eun777"},"content":"## CareConnect Glossary","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Quick Start Terms","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"| Term                               | Definition                                                                                                                                             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"|------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"| **Java**                           | A programming language that CareConnect is built on. Version 17 or above is required to run the application.                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"| **JAR file**                       | Java ARchive file. This is the executable file format for CareConnect that contains all the compiled code and resources needed to run the application. |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"| **Home folder**                    | The directory where you choose to store and run the CareConnect application.                                                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"| **Command terminal**               | A text interface for running commands on your computer (also known as command prompt, console, or shell).                                              |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"| **CD command**                     | \"Change Directory\" command used in the terminal to navigate between folders.                                                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"| **GUI (Graphical User Interface)** | The visual elements of CareConnect that you can see and interact with, including buttons, text fields, and the patient list.                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"| **CLI (Command Line Interface)**   | Interface that allows users to interact with CareConnect by typing text commands rather than using graphical elements.                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Data Management Terms","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"| Term                 | Definition                                                                                     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"|----------------------|------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"| **JSON file**        | JavaScript Object Notation file format used to store CareConnect data.                         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"| **Data file**        | The file (careconnect.json) where all patient information is saved.                            |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"| **Preferences file** | A file (preferences.json) that stores application settings like window position.               |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"| **Saving the data**  | Process that occurs automatically after any command that changes data in CareConnect.          |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"| **Data backup**      | Recommended copy of the data file before manual editing to prevent data loss.                  |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Eun777"},"content":"### Other Terms","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Eun777"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Eun777"},"content":"| Term                 | Definition                                                                                                                                                     |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Eun777"},"content":"|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Eun777"},"content":"| **Case-sensitive**   | Uppercase and lowercase letters are treated as **different** characters. For example, `Diabetes` and `diabetes` would be treated as different tags.            |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Eun777"},"content":"| **Case-insensitive** | Uppercase and lowercase letters are treated as the **same** characters. For example, `insulin`, `Insulin` and `INSULIN` would be treated as the same medicine. |","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"szelingtan":11,"Eun777":63,"Luoq1-Xu":25,"Bryce-3D":3,"-":342}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Eun777"},"content":"    content: \"CareConnect\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12","isFullCredit":false}],"authorContributionMap":{"Eun777":1,"-":294}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bryce-3D"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bryce-3D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bryce-3D"},"content":"\u0027Referincing my TagSequenceDiagram.puml\u0027","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bryce-3D"},"content":"!include style.puml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bryce-3D"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bryce-3D"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bryce-3D"},"content":"participant \":LogicManager\" as LM LOGIC_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bryce-3D"},"content":"participant \":AddressBookParser\" as ABP LOGIC_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bryce-3D"},"content":"participant \":AddCommandParser\" as ACP LOGIC_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bryce-3D"},"content":"participant \"a:AddCommand\" as AC LOGIC_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bryce-3D"},"content":"end box","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bryce-3D"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bryce-3D"},"content":"participant \"m:Model\" as M MODEL_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bryce-3D"},"content":"end box","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bryce-3D"},"content":"-\u003e LM : execute(\"add n/Homura ...\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bryce-3D"},"content":"activate LM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bryce-3D"},"content":"LM -\u003e ABP : parseCommand(\"add n/Homura ...\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bryce-3D"},"content":"activate ABP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bryce-3D"},"content":"create ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bryce-3D"},"content":"ABP -\u003e ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bryce-3D"},"content":"activate ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bryce-3D"},"content":"ACP --\u003e ABP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bryce-3D"},"content":"deactivate ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bryce-3D"},"content":"ABP -\u003e ACP : parse(\"n/Homura ...\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bryce-3D"},"content":"activate ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bryce-3D"},"content":"create AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bryce-3D"},"content":"ACP -\u003e AC : new AddCommand(patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bryce-3D"},"content":"activate AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bryce-3D"},"content":"AC --\u003e ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bryce-3D"},"content":"deactivate AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bryce-3D"},"content":"ACP --\u003e ABP : a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bryce-3D"},"content":"deactivate ACP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bryce-3D"},"content":"ABP --\u003e LM : a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bryce-3D"},"content":"deactivate ABP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bryce-3D"},"content":"LM -\u003e AC : execute(m)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bryce-3D"},"content":"activate AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bryce-3D"},"content":"AC -\u003e M : hasPatient(toAdd)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bryce-3D"},"content":"activate M","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bryce-3D"},"content":"M --\u003e AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bryce-3D"},"content":"deactivate M","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bryce-3D"},"content":"AC -\u003e M : addPatient(toAdd)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bryce-3D"},"content":"activate M","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bryce-3D"},"content":"M --\u003e AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bryce-3D"},"content":"deactivate M","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bryce-3D"},"content":"AC --\u003e LM : new CommandResult()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bryce-3D"},"content":"deactivate AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bryce-3D"},"content":"LM -[hidden]-\u003e AC : filler text to move the X down","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bryce-3D"},"content":"destroy AC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bryce-3D"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bryce-3D"},"content":"[\u003c--LM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bryce-3D"},"content":"deactivate LM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bryce-3D"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"Bryce-3D":57}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Liu-Jihan"},"content":"\u0027 Core structure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Liu-Jihan"},"content":"AddressBook *-down-\u003e \"1\" UniquePatientList","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Liu-Jihan"},"content":"AddressBook *-right\u003e \"1\" UniqueTagList","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Liu-Jihan"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniquePatientList -right-\u003e Patient","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Liu-Jihan"},"content":"\u0027 Patient fields","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Patient *--\u003e Name","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Patient *--\u003e Email","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Patient *--\u003e Address","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bryce-3D"},"content":"Patient --\u003e LastVisit","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Liu-Jihan"},"content":"Patient -up-\u003e \"*\" Tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bryce-3D"},"content":"Patient --\u003e \"*\" Medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Liu-Jihan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"Liu-Jihan":7,"Bryce-3D":2,"-":14}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePatientList","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Patient","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Medicine","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class LastVisit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook *-\u003e \"1\" UniquePatientList","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"UniquePatientList --\u003e \"~* all\" Patient","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Patient *-\u003e Name","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Patient *--\u003e Email","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"Patient *--\u003e Address","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bryce-3D"},"content":"Patient -\u003e LastVisit","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bryce-3D"},"content":"Patient --\u003e \"*\" Tag","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bryce-3D"},"content":"Patient --\u003e \"*\" Medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"Patient -[hidden]up--\u003e I","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePatientList -[hidden]right-\u003e I","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Patient","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"Bryce-3D":3,"-":55}},{"path":"docs/diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u0027Referencing Sze Ling\u0027s UnprescribeSequenceDiagram-Logic.puml","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LM LOGIC_COLOR","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as ABP LOGIC_COLOR","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":TagCommandParser\" as TCP LOGIC_COLOR","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \"t:TagCommand\" as TC LOGIC_COLOR","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bryce-3D"},"content":"participant \"m:Model\" as M MODEL_COLOR","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"-\u003e LM : execute(\"tag 1 t/ASD\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate LM","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"LM -\u003e ABP : parseCommand(\"tag 1 t/ASD\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate ABP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"create TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"ABP -\u003e TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"TCP --\u003e ABP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"ABP -\u003e TCP : parse(\"1 t/ASD\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"create TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"TCP -\u003e TC : new TagCommand(1,{ASD})","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"TC --\u003e TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"TCP --\u003e ABP : t","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"deactivate TCP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ABP --\u003e LM : t","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ABP","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bryce-3D"},"content":"LM -\u003e TC : execute(m)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"activate TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"TC -\u003e M : getFilteredPatientList()","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"activate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"M --\u003e TC : lastShownList","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"TC -\u003e M : setPatient(patient, editedPatient)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"activate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"M --\u003e TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"TC -\u003e M : updateFilteredPatientList()","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"M --\u003e TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"deactivate M","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"TC --\u003e LM : new CommandResult()","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"LM -[hidden]-\u003e TC : filler text to move the X down","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"destroy TC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"[\u003c--LM","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"deactivate LM","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Bryce-3D":2,"-":64}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eun777"},"content":"    private static final String LOG_FILE \u003d \"careconnect.log\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"Eun777":1,"-":105}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a patient to the patient list.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Adds a patient to the CareConnect patient list. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \u0027\\n\u0027","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_DATE + \"LAST_VISIT_DATE] \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_MEDICINE + \"MEDICINE]... \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \u0027\\n\u0027","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"2025-03-25 \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"ASD \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"Dysphoria \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"Estrogen \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"Adderall\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szelingtan"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"A patient with the same name already \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szelingtan"},"content":"            + \"exists in the patient list. Multiple patients with the same name are currently not\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szelingtan"},"content":"            + \" allowed in the list. Please kindly refer to our user guide for more details. \";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Patient toAdd;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code patient}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(patient);","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getName()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"szelingtan":3,"-":92}},{"path":"src/main/java/seedu/address/logic/commands/DelLastVisitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes the last visit info of a patient by setting it to null.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DelLastVisitCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delLastVisit\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \": Deletes the last visit of the patient identified \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bryce-3D"},"content":"            + \"by the index number used in the last patient listing.\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \u0027\\n\u0027","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \u0027\\n\u0027","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_LAST_VISIT \u003d \"This patient does not currently have a last visit: %1$s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code DelLastVisitCommand}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param ind The index of the patient to modify.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DelLastVisitCommand(Index ind) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        index \u003d ind;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Generates the msg to send upon successful deletion.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param patient The newly modified patient.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return The msg to send upon successful deletion.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String generateSuccessMessage(Patient patient) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return \"Last visit date successfully deleted from \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + patient.getName();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Executes the stored `delLastVisit` cmd.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return The {@code CommandResult}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws CommandException if the index is out of range.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Create a new Patient with `null` last visit","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (patientToEdit.getLastVisit() \u003d\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_NO_LAST_VISIT, patientToEdit.getName()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                patientToEdit.getName(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                patientToEdit.getPhone(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                patientToEdit.getEmail(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                patientToEdit.getAddress(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                null,","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                patientToEdit.getTags(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                patientToEdit.getMedicines()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Update the patient in the model","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Checks for {@code DelLastVisitCommand} equality.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof DelLastVisitCommand)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DelLastVisitCommand o \u003d (DelLastVisitCommand) other;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return index.equals(o.index);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Bryce-3D":1,"-":103}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.LastVisit;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing patient in the patient list.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \u0027\\n\u0027","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited patient: %1$s\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient list.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"    public static final String MESSAGE_EDIT_NOT_ALLOWED \u003d \"Medicine, Tag and Last Visit cannot be edited with the edit \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"        + \"command.\\nUse the prescribe, unprescribe, tag, untag, lastVisit and delLastVisit commands respectively.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bryce-3D"},"content":"    public static final String MESSAGE_NO_RESULTING_CHANGE \u003d \"The inputted edit command does not result in any \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bryce-3D"},"content":"            + \"changes to the specified patient.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d createEditedpatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bryce-3D"},"content":"        if (patientToEdit.equals(editedPatient)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bryce-3D"},"content":"            throw new CommandException(MESSAGE_NO_RESULTING_CHANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bryce-3D"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient)));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code patient} with the details of {@code patientToEdit}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Patient createEditedpatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        LastVisit updatedLastVisit \u003d editPatientDescriptor.getLastVisit().orElse(patientToEdit.getLastVisit());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // edit command does not allow editing medicines","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e updatedMedicines \u003d editPatientDescriptor.getMeds().orElse(patientToEdit.getMedicines());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedLastVisit,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                updatedTags, updatedMedicines);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPatientDescriptor.equals(otherEditCommand.editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"editPatientDescriptor\", editPatientDescriptor)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private LastVisit lastVisit;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setLastVisit(toCopy.lastVisit);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setMedicines(toCopy.medicines);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, lastVisit, address, tags, medicines);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setLastVisit(LastVisit visit) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.lastVisit \u003d visit;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cLastVisit\u003e getLastVisit() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(lastVisit);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Sets {@code medicines} to this object\u0027s {@code medicines}.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code medicines} is used internally.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setMedicines(Set\u003cMedicine\u003e meds) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.medicines \u003d (meds !\u003d null) ? new HashSet\u003c\u003e(meds) : null;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * Returns the medicines set","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code medicines} is null.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cMedicine\u003e\u003e getMeds() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return (medicines !\u003d null) ? Optional.of(medicines) : Optional.empty();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPatientDescriptor.name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPatientDescriptor.phone)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPatientDescriptor.email)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPatientDescriptor.address)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPatientDescriptor.tags);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"lastVisit\", lastVisit)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .add(\"medicines\", medicines)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"Eun777":2,"Bryce-3D":5,"-":277}},{"path":"src/main/java/seedu/address/logic/commands/LastVisitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.LastVisit;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Changes the Last Visit of an existing patient in the patient list.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class LastVisitCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"lastVisit\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the last visit of the patient identified \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Existing last visit will be overwritten by the input.\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"[LAST-VISIT-DATE]\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"2025-05-01\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_LAST_VISIT_SUCCESS \u003d \"Set last visit of patient %1$s to %2$s\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final LastVisit lastVisit;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param index of the patient in the filtered patient list to edit the Last Visit","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param lastVisit of the patient to be updated to","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LastVisitCommand(Index index, LastVisit lastVisit) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, lastVisit);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.lastVisit \u003d lastVisit;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Patient editedpatient \u003d new Patient(patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                patientToEdit.getAddress(), lastVisit, patientToEdit.getTags(), patientToEdit.getMedicines());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedpatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Luoq1-Xu"},"content":"        String successMessage \u003d generateSuccessMessage(editedpatient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Luoq1-Xu"},"content":"        LastVisit prevLastVisit \u003d patientToEdit.getLastVisit();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Luoq1-Xu"},"content":"        if (prevLastVisit !\u003d null \u0026\u0026 lastVisit.lastVisitDate.isBefore(prevLastVisit.lastVisitDate)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Luoq1-Xu"},"content":"            successMessage \u003d successMessage + \"\\n\" + String.format(\"Warning: you have set the last visit date \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Luoq1-Xu"},"content":"                            + \"of patient %1$s to a date earlier than the previous last visit date of %2$s\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Luoq1-Xu"},"content":"                    patientToEdit.getName(), patientToEdit.getLastVisit().lastVisitDate);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Luoq1-Xu"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Luoq1-Xu"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Generates a command execution success message after setting the last visit date.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return String.format(MESSAGE_ADD_LAST_VISIT_SUCCESS,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                patientToEdit.getName(), lastVisit.lastVisitDate.toString());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof LastVisitCommand)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        LastVisitCommand e \u003d (LastVisitCommand) other;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 lastVisit.equals(e.lastVisit);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"Luoq1-Xu":8,"-":88}},{"path":"src/main/java/seedu/address/logic/commands/PrescribeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds one or more medications to an existing patient in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * This command takes an index representing a patient in the displayed list","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * and adds the specified medicine(s) to that patient\u0027s medical record.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PrescribeCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"prescribe\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_MED_SUCCESS \u003d \"Added medication(s) %1$s to patient: %2$s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_MED \u003d \"This patient already has medicine: %1$s\";","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Luoq1-Xu"},"content":"    public static final String REPEATED_MED_ERROR \u003d \"Medicine [%1$s] was entered multiple times.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Luoq1-Xu"},"content":"            + \"Duplicate inputs are not allowed.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \": adds new medication(s) to the patient specified \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"[medicine name]\\n\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"Paracetamol\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Set\u003cMedicine\u003e medicinesToAdd;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param index of the patient in the filtered patient list to add the medication","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param medicinesToAdd (A set of medicines to be added to the patient)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PrescribeCommand(Index index, Set\u003cMedicine\u003e medicinesToAdd) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, medicinesToAdd);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.medicinesToAdd \u003d medicinesToAdd;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e filteredPatientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d filteredPatientList.size()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Patient patientToEdit \u003d filteredPatientList.get(index.getZeroBased());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e currentMedicines \u003d patientToEdit.getMedicines();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assert currentMedicines !\u003d null;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Ensure no duplicates","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Medicine medicine : medicinesToAdd) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (currentMedicines.contains(medicine)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_MED, medicine.medName));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Create a new set of medicines","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e updatedMedicines \u003d new HashSet\u003c\u003e(currentMedicines);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        updatedMedicines.addAll(medicinesToAdd);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                patientToEdit.getName(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                patientToEdit.getPhone(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                patientToEdit.getEmail(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                patientToEdit.getAddress(),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                patientToEdit.getLastVisit(),","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                patientToEdit.getTags(),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                updatedMedicines);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Generates a command execution success message about the medication(s) being successfully","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * added to {@code patientToEdit}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        StringBuilder medicinesToAddStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (Medicine medicine : medicinesToAdd) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            medicinesToAddStringBuilder.append(medicine.toString()).append(\" \");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String medicinesToAddString \u003d medicinesToAddStringBuilder.toString().trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return String.format(MESSAGE_ADD_MED_SUCCESS,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                medicinesToAddString,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                patientToEdit.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof to check if other is also a PrescribeCommand","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof PrescribeCommand e)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index) \u0026\u0026 Objects.equals(medicinesToAdd, e.medicinesToAdd);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"Luoq1-Xu":2,"-":119}},{"path":"src/main/java/seedu/address/logic/commands/UnprescribeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Removes the specified medication from an existing patient in the patient list.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * This command takes an index representing a patient in the displayed list","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * and removes the specified medicine from that patient\u0027s medical record.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UnprescribeCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szelingtan"},"content":"    public static final Medicine REMOVE_ALL_PLACEHOLDER \u003d new Medicine(\"EunSLLQLuBry\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"unprescribe\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_REMOVE_MED_SUCCESS \u003d \"Removed medication(s) %1$s from patient: %2$s\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_REMOVE_ALL_MED_SUCCESS \u003d \"Removed all medication from patient: %1$s\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMPTY_MED_LIST \u003d \"Patient: %1$s currently has no prescribed medication\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_MED_NOT_FOUND \u003d \"Medication %1$s is not found in patient: \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"%2$s\u0027s prescription list\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": removes one or more medications \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"from the patient specified \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"[medicine name] OR \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"all\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"Paracetamol\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_MEDICINE + \"all\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Set\u003cMedicine\u003e medicinesToRemove;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param index of the patient in the filtered patient list to remove the medication from","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param medicinesToRemove the set of medicines to be removed from the patient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public UnprescribeCommand(Index index, Set\u003cMedicine\u003e medicinesToRemove) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireAllNonNull(medicinesToRemove);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.medicinesToRemove \u003d medicinesToRemove;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e currentMedicines \u003d patientToEdit.getMedicines();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Check if medicine list is already empty","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (currentMedicines.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_EMPTY_MED_LIST, patientToEdit.getName()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Special case for \"all\" to remove all medications","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (medicinesToRemove.contains(REMOVE_ALL_PLACEHOLDER)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return removeAllMedication(model, patientToEdit);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Else, remove specified medications","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return removeSpecifiedMedications(model, patientToEdit);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Removes all medication from the patient","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private CommandResult removeAllMedication(Model model, Patient patientToEdit) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessageForAll(editedPatient));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes a set of medications from the patient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private CommandResult removeSpecifiedMedications(Model model, Patient patientToEdit) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e currentMedicines \u003d patientToEdit.getMedicines();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e updatedMedicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Ensure that the patient has all medicines to be removed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (Medicine medicineToRemove : medicinesToRemove) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (!currentMedicines.contains(medicineToRemove)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(MESSAGE_MED_NOT_FOUND,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        medicineToRemove.getMedicineName(), patientToEdit.getName()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Create a new set of medicines","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        for (Medicine currentMedicine : currentMedicines) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (!medicinesToRemove.contains(currentMedicine)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                updatedMedicines.add(currentMedicine);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, updatedMedicines);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * with updated medicines.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private Patient createEditedPatient(Patient patientToEdit, Set\u003cMedicine\u003e medicines) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Patient(","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                patientToEdit.getName(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                patientToEdit.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                patientToEdit.getEmail(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                patientToEdit.getAddress(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                patientToEdit.getLastVisit(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                patientToEdit.getTags(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                medicines);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Generates a command execution success message when removing the specified medication(s) from","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        StringBuilder medStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        for (Medicine medicine : medicinesToRemove) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            medStringBuilder.append(medicine.toString()).append(\" \");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String medsString \u003d medStringBuilder.toString().trim();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return String.format(MESSAGE_REMOVE_MED_SUCCESS, medsString, patientToEdit.getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Generates a command execution success message when removing all medications from","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private String generateSuccessMessageForAll(Patient patientToEdit) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return String.format(MESSAGE_REMOVE_ALL_MED_SUCCESS, patientToEdit.getName());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof to check if other is also an UnprescribeCommand","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof UnprescribeCommand e)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return index.equals(e.index) \u0026\u0026 Objects.equals(medicinesToRemove, e.medicinesToRemove);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"szelingtan":1,"-":174}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eun777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eun777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eun777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eun777"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eun777"},"content":"                        PREFIX_DATE, PREFIX_MEDICINE, PREFIX_TAG);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eun777"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent() || argMultimap.getValue(PREFIX_MEDICINE).isPresent()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eun777"},"content":"            throw new ParseException(EditCommand.MESSAGE_EDIT_NOT_ALLOWED);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eun777"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eun777"},"content":"            throw new ParseException(EditCommand.MESSAGE_EDIT_NOT_ALLOWED);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eun777"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"Eun777":11,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_FUTURE_LAST_VISIT_DATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE_FORMAT;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.UnprescribeCommand.REMOVE_ALL_PLACEHOLDER;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Luoq1-Xu"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.LastVisit;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String lastVisitDate} into a {@code LastVisit}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code lastVisitDate} is invalid.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static LastVisit parseLastVisit(String lastVisitDateString) throws ParseException {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(lastVisitDateString);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedLastVisitDate \u003d lastVisitDateString.trim();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LocalDate lastVisitDate;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            lastVisitDate \u003d LocalDate.parse(trimmedLastVisitDate);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!LastVisit.isValidLastVisit(lastVisitDate)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_FUTURE_LAST_VISIT_DATE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new LastVisit(lastVisitDate);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Parses a {@code String medName} into a {@code Medicine}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code medName} is invalid.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Medicine parseMed(String medName) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(medName);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String trimmedMedName \u003d medName.trim();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Medicine.isValidMedName(trimmedMedName)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new ParseException(Medicine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new Medicine(trimmedMedName);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e medNames} into a {@code Set\u003cMedicine\u003e}.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Set\u003cMedicine\u003e parseMeds(Collection\u003cString\u003e medNames) throws ParseException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(medNames);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Set\u003cMedicine\u003e medSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (String medName : medNames) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            medSet.add(parseMed(medName));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return medSet;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e medNames} into a {@code Set\u003cMedicine\u003e}.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Set\u003cMedicine\u003e parseMedsUnprescribe(Collection\u003cString\u003e medNames) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(medNames);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cMedicine\u003e medSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (String medName : medNames) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            // If a user specifies \"all\" in any of the prefixes, then add placeholder to signal to remove all meds","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            if (medName.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                medSet.add(REMOVE_ALL_PLACEHOLDER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            medSet.add(parseMed(medName));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return medSet;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Luoq1-Xu"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Luoq1-Xu"},"content":"     * Finds and returns the first duplicate in a list of strings if it exists","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Luoq1-Xu"},"content":"     * @param listStrsToAdd List of strings to check","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Luoq1-Xu"},"content":"     * @return the duplicate input, if found","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Luoq1-Xu"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Luoq1-Xu"},"content":"    public static String findDuplicateInputs(List\u003cString\u003e listStrsToAdd) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Luoq1-Xu"},"content":"        Set\u003cString\u003e seen \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Luoq1-Xu"},"content":"        return listStrsToAdd.stream()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Luoq1-Xu"},"content":"                .filter(s -\u003e !seen.add(s.toLowerCase()))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Luoq1-Xu"},"content":"                .findFirst()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Luoq1-Xu"},"content":"                .orElse(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Luoq1-Xu"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Luoq1-Xu":14,"-":197}},{"path":"src/main/java/seedu/address/logic/parser/PrescribeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Luoq1-Xu"},"content":"import static seedu.address.logic.parser.ParserUtil.findDuplicateInputs;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Luoq1-Xu"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.PrescribeCommand;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code PrescribeCommand} object","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PrescribeCommandParser implements Parser\u003cPrescribeCommand\u003e {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code PrescribeCommand}","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a {@code PrescribeCommand} object for execution.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PrescribeCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEDICINE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // Check for medicine parameter","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!argMultimap.getValue(PREFIX_MEDICINE).isPresent()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    PrescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Parse and validate Index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String preamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Check specifically for negative numbers and zero (index issue)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        int indexValue \u003d Integer.parseInt(preamble);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (indexValue \u003c\u003d 0) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Luoq1-Xu"},"content":"        // Double check for duplicated inputs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Luoq1-Xu"},"content":"        List\u003cString\u003e listMedStrsToAdd \u003d argMultimap.getAllValues(PREFIX_MEDICINE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Luoq1-Xu"},"content":"        String duplicate \u003d findDuplicateInputs(listMedStrsToAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Luoq1-Xu"},"content":"        if (duplicate !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Luoq1-Xu"},"content":"            throw new ParseException(String.format(PrescribeCommand.REPEATED_MED_ERROR, duplicate));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Luoq1-Xu"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    PrescribeCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e medSet \u003d ParserUtil.parseMeds(argMultimap.getAllValues(PREFIX_MEDICINE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new PrescribeCommand(index, medSet);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"Luoq1-Xu":9,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/UnprescribeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Luoq1-Xu"},"content":"import static seedu.address.logic.parser.ParserUtil.findDuplicateInputs;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Luoq1-Xu"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Luoq1-Xu"},"content":"import seedu.address.logic.commands.PrescribeCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UnprescribeCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code UnprescribeCommand} object","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UnprescribeCommandParser implements Parser\u003cUnprescribeCommand\u003e {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UnprescribeCommand}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a {@code UnprescribeCommand} object for execution.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UnprescribeCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEDICINE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // Check for medicine parameter","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!argMultimap.getValue(PREFIX_MEDICINE).isPresent()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    UnprescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Parse and validate the index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String preamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Check if index is empty or contains non-digit characters (format issue)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (preamble.isEmpty() || !preamble.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnprescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Check specifically for negative numbers and zero (index issue)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        int indexValue \u003d Integer.parseInt(preamble);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (indexValue \u003c\u003d 0) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Luoq1-Xu"},"content":"        // Double check for duplicated inputs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Luoq1-Xu"},"content":"        List\u003cString\u003e listMedStrsToAdd \u003d argMultimap.getAllValues(PREFIX_MEDICINE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Luoq1-Xu"},"content":"        String duplicate \u003d findDuplicateInputs(listMedStrsToAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Luoq1-Xu"},"content":"        if (duplicate !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Luoq1-Xu"},"content":"            throw new ParseException(String.format(PrescribeCommand.REPEATED_MED_ERROR, duplicate));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Luoq1-Xu"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Luoq1-Xu"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cMedicine\u003e medsToRemove \u003d ParserUtil.parseMedsUnprescribe(argMultimap.getAllValues(PREFIX_MEDICINE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new UnprescribeCommand(index, medsToRemove);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            // For any other parsing issues (like too large numbers)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Luoq1-Xu":10,"-":58}},{"path":"src/main/java/seedu/address/model/medicine/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.medicine;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Medicine in the address book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidMedName(String)}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Medicine {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Medicine names should only contain letters, numbers, hyphens (-), and underscores (_).\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szelingtan"},"content":"            + \"Medicine names cannot start or end with a special character.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szelingtan"},"content":"            + \"Preceding and/or trailing whitespaces will be ignored.\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9](?:[A-Za-z0-9_-]*[A-Za-z0-9])?$\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String medName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Medicine}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param medName A valid medicine name.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Medicine(String medName) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(medName);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidMedName(medName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.medName \u003d medName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid medicine name.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidMedName(String test) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof Medicine)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Medicine otherMed \u003d (Medicine) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // ignore upper or lower case","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return medName.trim()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .equalsIgnoreCase(otherMed.medName.trim());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return medName.trim().toLowerCase().hashCode();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + medName + \u0027]\u0027;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Get medication name.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getMedicineName() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return medName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"szelingtan":2,"-":72}},{"path":"src/main/java/seedu/address/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a patient\u0027s phone number in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eun777"},"content":"            \"Phone numbers should only contain numbers, and it should be between 3 and 16 digits long.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eun777"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,16}\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"Eun777":2,"-":59}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPatient, descriptor);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bryce-3D"},"content":"    public void execute_noChanges_fail() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, new EditPatientDescriptor());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bryce-3D"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_RESULTING_CHANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.format(editedPatient));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PATIENT, descriptor);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePatientFilteredList_failure() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // edit patient in filtered list into a duplicate in address book","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(INDEX_SECOND_PATIENT.getZeroBased());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new EditPatientDescriptorBuilder(patientInList).build());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPatientDescriptor\u003d\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + editPatientDescriptor + \"}\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"Bryce-3D":2,"-":179}},{"path":"src/test/java/seedu/address/logic/parser/UnprescribeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.UnprescribeCommand.REMOVE_ALL_PLACEHOLDER;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UnprescribeCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Tests the UnprescribeCommandParser class","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UnprescribeCommandParserTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UnprescribeCommandParser parser \u003d new UnprescribeCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Valid index with specific medicine","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String medicineName \u003d \"Panadol\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MEDICINE + medicineName;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        UnprescribeCommand expectedCommand \u003d new UnprescribeCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new HashSet\u003c\u003e(List.of(new Medicine(medicineName))));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Valid index with \"all\" medicine to remove all medication","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MEDICINE + \"all\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new UnprescribeCommand(INDEX_FIRST_PATIENT, new HashSet\u003c\u003e(List.of(REMOVE_ALL_PLACEHOLDER)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingMedicineName_throwsParseException() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // No medicine name provided","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MEDICINE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szelingtan"},"content":"        assertParseFailure(parser, userInput, Medicine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingMedicinePrefix_throwsParseException() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Medicine name without prefix","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" Panadol\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnprescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidFormatArgs_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Non-numeric index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String userInput \u003d \"abc \" + PREFIX_MEDICINE + \"Panadol\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnprescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // No parameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnprescribeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidIndexArgs_throwsParseException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Negative index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String userInput \u003d \"-5 \" + PREFIX_MEDICINE + \"Panadol\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Zero index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userInput \u003d \"0 \" + PREFIX_MEDICINE + \"Panadol\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnprescribeCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // No parameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Empty index","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEDICINE + \"Panadol\", expectedMessage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Missing medicine parameter","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"szelingtan":1,"-":96}}]
