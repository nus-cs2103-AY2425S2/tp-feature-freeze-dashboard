[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# HappyEverAfter Developer Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/tree/master/src/main/java/seedu/address/ui)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"- listens for changes to `WeddingModel` data so that the UI can be updated with the modified data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"- In particular, it listens for changes to the `UniqueWeddingList`, as well as the `UniquePersonList` of","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    the currently open wedding.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `WeddingPlannerParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a wedding).\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"- When called upon to parse a user command, the `WeddingPlannerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddWeddingCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddWeddingCommand`) which the `WeddingPlannerParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"- All `XYZCommandParser` classes (e.g., `AddWeddingCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"soonami69"},"content":"- stores the wedding planner data i.e., all `Wedding` objects (which are contained in a `UniqueWeddingList` object) and all `Person` objects (which are contained in each `Wedding` object\u0027s `UniquePersonList`)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"- exposes the data to the outside as `ReadOnlyWeddingPlanner` objects that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that whe each wedding is selected, the UI updates to show the selected Wedding\u0027s data i.e., all the `Person` objects within it","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"soonami69"},"content":"- stores the currently \u0027selected\u0027 `Wedding` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cWedding\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"soonami69"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"#### Key Model Classes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"- **WeddingPlanner**: The central data structure that holds all weddings","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"- **Wedding**: Represents a wedding event with the following properties:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"  - `date`: The scheduled date for the wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"  - `title`: The name/title of the wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"  - `bride`: A reference to a Person representing the bride","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"soonami69"},"content":"  - `groom`: A reference to a Person representing the groom","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"soonami69"},"content":"  - `members`: A UniquePersonList of other people involved in the wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"soonami69"},"content":"- **WeddingModel**: Extends the base Model interface with wedding-specific operations","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"soonami69"},"content":"- **WeddingModelManager**: The implementation of the WeddingModel interface that:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"soonami69"},"content":"  - Manages the current wedding context (the active wedding being edited)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"soonami69"},"content":"  - Handles draft wedding creation and commitment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"soonami69"},"content":"  - Provides operations for adding, editing, and removing people from weddings","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `WeddingPlanner`, which `Person` references. This allows `WeddingPlanner` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"soonami69"},"content":"- can save both wedding planner data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"soonami69"},"content":"- inherits from both `WeddingPlannerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"soonami69"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"soonami69"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"soonami69"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"soonami69"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"soonami69"},"content":"#### Design considerations","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"soonami69"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"soonami69"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"soonami69"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"soonami69"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"soonami69"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"soonami69"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c!-- ### \\[Proposed\\] Data archiving","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_ --\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"soonami69"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"soonami69"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"soonami69"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"soonami69"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"soonami69"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"soonami69"},"content":"- has a need to manage a significant number of contacts over a variety of diferent weddings","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"soonami69"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"soonami69"},"content":"- can type fast","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"soonami69"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"soonami69"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Value proposition**: manage wedding tasks faster and clearer than a typical mouse/GUI driven app","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                      | So that I can…​                                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"soonami69"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------- | ------------------------------------------------------------------------- |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                            | refer to instructions when I forget how to use the App                    |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | create a new wedding folder with a unique name    | organize wedding details separately                                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"soonami69"},"content":"| `* * *`  | user                                       | delete a wedding    | remove unwanted weddings                                       |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"soonami69"},"content":"| `* * *`  | user                                       | open a wedding                        | manage its details                                                        |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | close an open wedding                             | open a different wedding                                                  |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | sort weddings by date                             | easily view upcoming weddings in chronological order and plan accordingly |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person’s contact details to a wedding   | track attendees and their information                                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | find a person by name                             | quickly locate their details                                              |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"| `*`      | user                                       | search using partial name matching                | find people even if I don’t remember their full name                      |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | filter search results by guests, staff, or couple | narrow down results                                                       |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person from a wedding                    | remove incorrect or outdated entries                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"| `*`      | user                                       | be asked for confirmation before deletion         | avoid deleting someone by mistake                                         |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | have my wedding data saved automatically          | avoid losing my progress                                                  |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | retrieve my saved data when restarting the app    | continue managing weddings from where I left off                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | have data persist even after closing the app      | ensure my information remains intact                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `HappyEverAfter` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Use case: Creating a new wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"1. User creates a new wedding","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"2. HappyEverAfter provides confirmation that the wedding has been created","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"soonami69"},"content":"- 1a. There exists a wedding with the same name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"soonami69"},"content":"    1ai.HappyEverAfter shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"soonami69"},"content":"- 1b. Wedding name provided is in an invalid format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"soonami69"},"content":"    1bi. HappyEverAfter shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Use case: Adding a person to a wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"1. User requests to list weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"2. HappyEverAfter shows a list of weddings","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"3. User opens the wedding they want","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"4. HappyEverAfter provides confirmation that the wedding has been opened","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"5. User adds contact information of person","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"6. HappyEverAfter acts the person to that wedding.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"soonami69"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"soonami69"},"content":"- 5a. Contact information provided is in an invalid format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"    5ai. HappyEverAfter shows an error message.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Use case: Delete a person from a wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"1. User requests to list weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"2. HappyEverAfter shows a list of weddings","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"3. User opens the wedding they want","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"4. HappyEverAfter provides confirmation that the wedding has been opened","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"5. User requests to list persons associated with that wedding","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"6. HappyEverAfter shows a list of persons","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"7. User requests to delete a specific person in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"8. HappyEverAfter deletes the person","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"soonami69"},"content":"- 2a. The list is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"soonami69"},"content":"- 5a. The list is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"soonami69"},"content":"- 7a. The given index is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"soonami69"},"content":"  - 7a1. HappyEverAfter shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"        Use case resumes at step 6.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"soonami69"},"content":"_{More to be added}_","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 weddings without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"4. Data loss should not occur even in the event of an unexpected shutdown (e.g., GUI crash).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"5. The system should be modular, allowing for easy addition or removal of features without affecting existing functionality.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"6. All data should be stored locally on the user\u0027s device, and users should be able to access and modify their data without any delays caused by network connectivity.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"7. The system should perform input validation and generate a response within 500 milliseconds for each user input to ensure a smooth and responsive user experience.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"soonami69"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"soonami69"},"content":"- **Client**: A couple or individual using the wedding planner’s services to organize their wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"soonami69"},"content":"- **Vendor**: A service provider (e.g., caterers, florists, photographers) who collaborates with the wedding planner","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"soonami69"},"content":"- **Invitation**: A digital or physical wedding invitation managed and tracked within the system","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"soonami69"},"content":"- **Event Timeline**: A structured schedule outlining key wedding milestones and deadlines","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"soonami69"},"content":"- **Vendor Coordination**: The process of managing communication and contracts with wedding vendors","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"soonami69"},"content":"- **Reminder Notifications**: Automated alerts to keep planners on schedule with tasks","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"soonami69"},"content":"- **Error Message**: A message displayed when an invalid operation occurs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"soonami69"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"soonami69"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Adding a wedding","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Adding a wedding to `HappyEverAfter`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"    1. Prerequisites: Application must be open","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"    1. Test case: `new n/NAME d/09092027`\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"       Expected: The application will prompt addition of the contact details of bride and groom.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Test case: `new NAME`\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"       Expected: No wedding is created. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"    1. Other incorrect `new` commands to try: `new`, `new n/NAME d/DATE`, `...` (where DATE is not a recognised date format)\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"soonami69":91,"-":397}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"HappyEverAfter User Guide\"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# HappyEverAfter User Guide","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Welcome to HappyEverAfter - a quick, robust, and intuitive Wedding Planner designed to help wedding organisers keep track of their weddings. HappyEverAfter provides a plethora of features, such as the creation of weddings, and the adding of members with roles to each wedding. Wedding Planning can get hectic, especially for a busy planner like you, and with just some typing commands, HappyEverAfter can help you get organised and sorted in no time!","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"## Table of Contents","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"2. [Command Formats](#feature-details)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. [Features](#features)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    - [Wedding Management](#wedding-management)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"        - [Creating a new wedding](#creating-a-wedding-new)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        - [Opening a wedding](#opening-a-wedding--open)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        - [Closing a wedding](#closing-the-current-wedding-close)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        - [Listing all weddings](#listing-all-weddings-list)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        - [Sorting weddings by date](#sorting-weddings-by-date-sort)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        - [Deleting a wedding](#deleting-a-wedding-delete)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        - [Deleting all weddings](#clearing-all-weddings-ca)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    - [Member Management](#member-management)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        - [Adding a person to a wedding](#adding-a-person-to-a-wedding-add)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        - [Searching for members of weddings](#finding-people-findperson)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        - [Filtering for members by tags](#filtering-by-tag-filter)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        - [Removing a person](#removing-a-person-remove)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        - [Editing a person](#editing-a-person-editperson)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    - [System Commands](#system-commands)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        - [Viewing help](#viewing-help--help)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        - [Exiting the program](#exiting-the-program-exit)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"4. [Data Storage](#data-storage)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"7. [Command Summary](#command-summary)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"   - [Java Installation](https://www.java.com/en/download/help/download_options.html)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"   - **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"2. Download the latest version of HappyEverAfter","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"   - Click the following link [here](https://github.com/AY2425S2-CS2103T-W09-4/tp/releases) and download the file `happyeverafter.jar`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"3. Move the file to the folder","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    - Copy the file to the folder you want to use as the _home folder_ for your HappyEverAfter.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"4. Running HappyEverAfter","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"   - Open the \"Command Prompt\" (for Windows) or \"Terminal\" (for Mac/Linux).","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"   - Enter `cd` followed by the folder location where you saved the HappyEverAfter file. For example:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     - On Windows: `cd C:\\Users\\JohnDoe\\Desktop\\HappyEverAfter`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     - On Mac/Linux: `cd /Users/JohnDoe/Desktop/HappyEverAfter`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"   - Then run this command to launch HappyEverAfter: `java -jar happyeverafter.jar`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"   - A Graphical User Interface (GUI) similar to the image below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"      ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"   - See [features](#features) for the comprehensive list of all possible commands to execute and [command summary](#command-summary) for a brief overview.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"## Feature-Details","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"**Notes about the command format:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"- Commands are case-insensitive.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"  - e.g. `Help` and `help` will run the same command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"  - However, parameters are not case-sensitive, unless stated otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by you, the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"  - e.g. in `new n/WEDDING_NAME`, you should replace `WEDDING_NAME` with the actual name, like `new n/John \u0026 Mary`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"  - e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or simply as `n/John Doe`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"- Items with `…`​ after them can be used multiple times including zero times.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"  - e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"- Parameters can be provided in any order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"  - e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"  - e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"- The `EMAIL` Parameter has to consist of two parts, `LOCAL_PART` and `DOMAIN` in the form `LOCAL_PART@DOMAIN`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"  - The `LOCAL_PART` should contain only alphanumeric characters and these special characters: `+_.-`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"  - The `LOCAL_PART` may not start or end with any special characters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"  - The `DOMAIN` is made up of 1 or more domain labels, separated by periods","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"  - Each domain label must","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"    - Have at least 2 characters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"    - Start and end with alphanumeric characters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"    - Consist of only alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"  - Examples of valid `EMAIL` parameters:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"    - `hrishikeshsathyian2002@gmail.com`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"    - `chaewon@hybe`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"    - `boris_johnson@happy-ever-after.gov.uk`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"- Special role tags to identify the bride and groom:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"soonami69"},"content":"  - Use `t/bride` to designate a person as the bride","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"  - Use `t/groom` to designate a person as the groom","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"  - A wedding must have both a bride and groom to be valid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"# Features","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"## Wedding Management","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Listing all weddings: `list`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"You can view a list of all weddings in the wedding planner.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"![sample result from the list command](images/listCommand.png)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"soonami69"},"content":"### Creating a wedding: `new`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hrishikeshsathyian"},"content":"You can create and add a new wedding to the wedding planner.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `new n/WEDDING_NAME d/DATE`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"- `new n/John \u0026 Mary d/25122025`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Note:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"soonami69"},"content":"- HappyEverAfter will prompt you immediately to enter the details of the bride and the groom to confirm","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"  the wedding.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"  - Each wedding must have exactly one bride and one groom.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"  - Use `t/bride` to designate a person as the bride.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"  - Use `t/groom` to designate a person as the groom.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"  - Other people added without these special tags will be considered as wedding party members.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"- See [Adding a person to a wedding](#adding-a-person-to-a-wedding-add) for more details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"soonami69"},"content":"- You cannot add a wedding with the exact same `WEDDING_NAME` and `DATE` as one that already exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"soonami69"},"content":"++**Restrictions on Parameters**++","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"soonami69"},"content":"**Names:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"soonami69"},"content":"- Are case-sensitive.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"soonami69"},"content":"- Can contain any amount of alphanumeric characters, spaces, and special characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"soonami69"},"content":"- Should not be blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"soonami69"},"content":"**Dates:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"soonami69"},"content":"- The `DATE` Parameter has to be in the format `DDMMYYYY`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"soonami69"},"content":"  - e.g `25122025` for the 25th December 2025","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"soonami69"},"content":"- `Can be any date, past, present or future.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Opening a wedding : `open`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"You can open a wedding from the Wedding Planner to view its people and edit its people.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `open INDEX`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"soonami69"},"content":"- `open 1` (Opens the first wedding in the list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"soonami69"},"content":"- `open 3` (Opens the third wedding in the list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"After a weddings is open, you will be able to see its members on the right:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"![An open wedding](images/openWedding.png)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"soonami69"},"content":"**Tip:** You can open a new wedding without closing the current one. HappyEverAfter will automatically close the current wedding and open the new one.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Closing the current wedding: `close`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"You can close the currently open wedding project to return to the main view.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Format: `close`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Sorting weddings by date: `sort`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"You can view the displayed weddings by chronological order - with the earliest wedding at the top.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"Format: `sort`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Deleting a wedding: `delete`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"You can delete a wedding from the wedding planner based on the provided index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"soonami69"},"content":"- `delete 1` (Deletes the first wedding in the list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"soonami69"},"content":"- `delete 3` (Deletes the third wedding in the list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"soonami69"},"content":"Note:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"soonami69"},"content":"- You can delete any wedding (even the active one) regardless if there is a wedding open or not.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"soonami69"},"content":"- When deleting the active wedding, you will still be able to run commands on it. However, no data will be saved.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"hrishikeshsathyian"},"content":"### Clearing all weddings: `ca`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"soonami69"},"content":"Deletes ALL weddings and associated contacts from the wedding planner. To prevent accidental deletions, there will be a secondary confirmation prompt issued after `clearallweddings` to","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"soonami69"},"content":"confirm the deletion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"Format:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"hrishikeshsathyian"},"content":"- `ca` followed by `y` will delete all weddings from the wedding planner.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"hrishikeshsathyian"},"content":"- `ca` followed by `n` will abort the delete operation, and it will not clear the weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"hrishikeshsathyian"},"content":"To prevent accidental deletions, there will be a secondary confirmation prompt issued after `ca` to","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"confirm the deletion.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"## Member Management","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Adding a person to a wedding: `add`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"soonami69"},"content":"You can add a person to the [opened](#opening-a-wedding--open) Wedding Planner.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"You can use tags to specify if the person is a bride, groom, or other wedding party member.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"soonami69"},"content":"Examples:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"soonami69"},"content":"- `add n/Mary Muller p/98765432 e/mary@example.com a/123 Kentridgr St t/bride`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"soonami69"},"content":"- `add n/John Danny p/89989788 e/john@example.com a/456 UTR Ave t/groom`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"soonami69"},"content":"- `add n/Harry Kane p/13701978 e/kane@example.com a/789 NUS Rd t/bridesmaid`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"soonami69"},"content":"++**Restrictions on Parameters**++","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"soonami69"},"content":"**Names:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"soonami69"},"content":"- Should not be blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"soonami69"},"content":"- Can be any length.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"soonami69"},"content":"- Can take any value.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"soonami69"},"content":"- Should not be identical to any person already in the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"soonami69"},"content":"  - e.g. If a person with the name of \"Ma Dong-Seok\" already exists in the wedding,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"soonami69"},"content":"    - A person by the name of \"ma Dong-Seok\" can be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"soonami69"},"content":"    - A person by the name of \"Ma  Dong-Seok\" (with two spaces between \"Ma\" and \"Dong-Seok\") can be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"soonami69"},"content":"    - A person by the name of \"Ma Dong-Seok\" cannot be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"soonami69"},"content":"**Phone numbers:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"soonami69"},"content":"- Should only contain numbers (no letters, spaces or special characters).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"soonami69"},"content":"- Should not be blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"soonami69"},"content":"- Can be any length.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"soonami69"},"content":"**Email addresses:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"soonami69"},"content":"- Should be of the format `LOCAL_PART@DOMAIN`, with the following constraints:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"soonami69"},"content":"- `LOCAL_PART` has the following constraints:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"soonami69"},"content":"  - Should only consist of alphanumeric characters and these special characters: `+_.-`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"soonami69"},"content":"  - Should not be blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"soonami69"},"content":"  - Should not start or end with any of the above special characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"soonami69"},"content":"- `DOMAIN` is a domain name, which is made up of domain labels separated by periods.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"soonami69"},"content":"- `DOMAIN` has the following constraints:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"soonami69"},"content":"  - Should end with a domain label at least 2 characters long.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"soonami69"},"content":"  - Each domain label should start and end with alphanumeric characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"soonami69"},"content":"  - Each domain label should consists only of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"soonami69"},"content":"**Addresses:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"soonami69"},"content":"- Can take any value.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"soonami69"},"content":"- Should not be blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"soonami69"},"content":"**Tags:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"soonami69"},"content":"- Should consist only alphanumeric characters, with no spaces","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"soonami69"},"content":"- Are case-sensitive: A tag \"Brother\" is considered different from \"brother\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"soonami69"},"content":"  - The only exception to this are the `groom` and `bride` tags. Case-insensitive variations of them will not be permitted if the wedding already has a person with that corresponding tag.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"soonami69"},"content":"- Only one person in each wedding may have the `groom` and `bride` tag, specified with `t/groom` and `t/bride` respectively.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"soonami69"},"content":"  - However, a bride and groom may have other tags.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"soonami69"},"content":"- Can have any number of tags (including 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Finding people: `findperson`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"You can view all weddings with people that match the provided search terms and it is not case-sensitive.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"You can search for any number of search terms, and HappyEverAfter will show the information of ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"all weddings with members that match any of the terms provided. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"You can use open command to view a specific wedding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"Format: `findperson [SEARCH TERMS]`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"soonami69"},"content":"- `findperson Sun`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"soonami69"},"content":"- `findperson Sun Hrishi`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Filtering by tag: `filter`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"You can filter the list of the currently [opened](#opening-a-wedding--open) wedding to display all members with","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"the specified tag.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Format: `filter [TAGS}`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"soonami69"},"content":"- `filter bride` (Displays only the bride)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"soonami69"},"content":"- `filter groom` (Displays only the groom)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"soonami69"},"content":"- `filter` (Displays all members without filtering)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"soonami69"},"content":"++**Note:**++","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"soonami69"},"content":"- Tags are case-sensitive","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"soonami69"},"content":"**Tip:** If you want to remove the filters, use the filter command with no tags, i.e. `filter`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Removing a person: `remove`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"You can remove a person from the currently active wedding based on the provided index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"soonami69"},"content":"The index refers to the index number shown in the displayed list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"Format: `remove INDEX`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"soonami69"},"content":"- `remove 3` (Removes the third person in the list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"soonami69"},"content":"++**Note:**++","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"soonami69"},"content":"- You cannot remove a bride or groom from a wedding. Every wedding must maintain both roles.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"### Editing a person: `editperson`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"soonami69"},"content":"You can edit the details of a person in the currently [opened](#opening-a-wedding--open) wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"Format: `editperson INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"soonami69"},"content":"- `editperson 1 p/91234567 e/newemail@example.com` (Updates phone and email of the first person)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"soonami69"},"content":"- `editperson 2 n/New Name a/New Address` (Updates name and address of the second person)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"soonami69"},"content":"++**Note:**++","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"soonami69"},"content":"- You cannot edit the `bride/groom` tags of a person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"soonami69"},"content":"- At least one field must be provided for editing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"soonami69"},"content":"- When editing tags, the existing tags of the person will be removed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"soonami69"},"content":"  - e.g. if the person already has the tag `Brother`, and you want to add a new tag `Coming`, you will have to run the command `editperson INDEX t/Brother t/Coming`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"soonami69"},"content":"  - If you want to remove all tags from a person, you can enter `t/` with no tags behind. This will remove all tags from the person at the specified index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"soonami69"},"content":"**Restrictions on Parameters:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"soonami69"},"content":"- See **Restrictions on Parameters** in the [add command](#adding-a-person-to-a-wedding-add) for more details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"soonami69"},"content":"**Tip:** If you need to change the bride or groom of a wedding, use the edit commands to change their information instead of altering the tags of another member to make them bride/groom.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"soonami69"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"## System commands","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"You can view a message explaining how to access the User Guide.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"You can exit the HappyEverAfter application.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"## Data Storage","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"HappyEverAfter data is saved in the hard disk automatically after any command that changes the data. There","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"is no need to save manually.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"HappyEverAfter data is saved automatically as a JSON file `[JAR file location]/data/weddingplanner.json`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"soonami69"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"soonami69"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, HappyEverAfter will discard all data and start","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause HappyEverAfter to behave in unexpected ways (e.g., if a value entered is","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my wedding planner data to another computer?","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"**A**: Install HappyEverAfter on the other computer and replace the empty data file it creates with the file from your original installation (located at `/data/weddingplanner.json`).","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"**Q**: Can I add multiple weddings at once?","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"**A**: No, you need to create weddings one at a time using the `new` command. Alternatively, for advanced users: you may update the data file yourself. Look through the [\"Editing the data file\" section](#editing-the-data-file) for more support.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Q**: What happens if I try to add a second bride or groom to a wedding?","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**A**: The system will display an error message as the current implementation of HappyEverAfter supports only one bride and one groom per wedding.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"**Q**: How many people can I add to a wedding?","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"**A**: As of the most recent version, you can add at most 100 members for one wedding.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"soonami69"},"content":"**Q**: I renamed the bride and groom of a wedding. How do I change the wedding name?","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"soonami69"},"content":"**A**: The system currently does not support the editing of wedding names directly. However, you may update the data file yourself. Look through the [\"Editing the data file\" section](#editing-the-data-file) for more support.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"| Action                    | Format, Examples                                                                                                                     ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"hrishikeshsathyian"},"content":"|---------------------------|--------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"| **Help**                  | `help`                                                                                                                               |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"| **Create Wedding**        | `new n/WEDDING_NAME d/DATE`\u003cbr\u003ee.g., `new n/John \u0026 Mary d/25122025`                                                                  |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"| **Open Wedding**          | `open INDEX`\u003cbr\u003ee.g., `open 2`                                                                                                       |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"| **Close Wedding**         | `close`                                                                                                                              |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"| **List Weddings**         | `list`                                                                                                                               |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"hrishikeshsathyian"},"content":"| **Clear All Weddings**    | `ca`                                                                                                                                 |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"| **Sort Weddings by Date** | `sort`                                                                                                                               |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"| **Delete Wedding**        | `delete INDEX`\u003cbr\u003ee.g., `delete 2`                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"| **Add Person**            | `add n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...`\u003cbr\u003ee.g., `add n/Mary Smith p/98765432 e/mary@example.com a/123 Wedding St t/bride` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"| **Find Person**           | `findperson [SEARCH TERMS]`\u003cbr\u003ee.g., `findperson John Doe`                                                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"| **Filter Members by Tag** | `filter [TAG]`\u003cbr\u003ee.g., `filter groom`                                                                                               |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"| **Remove Person**         | `remove INDEX`\u003cbr\u003ee.g., `remove 3`                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"| **Edit Person**           | `editperson INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...`\u003cbr\u003ee.g., `editperson 1 p/91234567 e/newemail@example.com`     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"| **Exit**                  | `exit`                                                                                                                               |","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":7,"soonami69":189,"-":268}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.commands.NCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.WeddingPlannerParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final WeddingModel model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final WeddingPlannerParser weddingPlannerParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(WeddingModel model, Storage storage) { // Changed parameter type from Model to WeddingModel","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        weddingPlannerParser \u003d new WeddingPlannerParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"    private boolean isCommandAllowedInDrafting(Command command) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"        return command instanceof AddWeddingPersonCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"                || command instanceof ExitCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"                || command instanceof NCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Command command \u003d weddingPlannerParser.parseCommand(commandText);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"        if (LogicMemory.checkIfDrafting() \u0026\u0026 !isCommandAllowedInDrafting(command)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"            throw new CommandException(LogicMemory.getDraftingMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            storage.saveWeddingPlanner(model.getWeddingPlanner());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            System.out.println(\"dsljfskljdf\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ReadOnlyWeddingPlanner getWeddingPlanner() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getWeddingPlanner();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cWedding\u003e getFilteredWeddingList() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getFilteredWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return model.getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"zedonggg":7,"soonami69":7,"-":98}},{"path":"src/main/java/seedu/address/logic/LogicMemory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":" * LogicMemory keeps track of persistent states to enable actions that require multiple commands to run sequentially.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class LogicMemory {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"     * Keeps track of the 3 stages of adding a wedding -\u003e no wedding being added, waiting for bride, waiting for groom","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"    public enum DraftState {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"        NO_DRAFT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"        ADDING_BRIDE,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"        ADDING_GROOM","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"    private static final String MESSAGE_ADDING_BRIDE \u003d \"You have a wedding being created!\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":"            + \"Add the bride using : add n/NAME p/PHONE e/EMAIL a/ADDRESS t/bride\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":"    private static final String MESSAGE_ADDING_GROOM \u003d \"You have a wedding being created!\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"            + \"Add the groom using : add n/NAME p/PHONE e/EMAIL a/ADDRESS t/groom\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static boolean clearingWeddingPlanner \u003d false;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"    private static DraftState addWeddingStage \u003d DraftState.NO_DRAFT;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d New Wedding Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"    public static DraftState getDraftStage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"        return addWeddingStage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"    public static void setDraftStage(DraftState state) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"        addWeddingStage \u003d state;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zedonggg"},"content":"    public static boolean checkIfDrafting() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"        return addWeddingStage !\u003d DraftState.NO_DRAFT;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"    public static String getDraftingMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"        if (addWeddingStage \u003d\u003d DraftState.ADDING_BRIDE) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"            return MESSAGE_ADDING_BRIDE;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"        return MESSAGE_ADDING_GROOM;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Clear all Weddings Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean isClearingWeddingPlanner() {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return clearingWeddingPlanner;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void setClearingWeddingPlanner(boolean state) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        clearingWeddingPlanner \u003d state;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"     * Clears the logic memory states and resets all to their original fields","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void resetLogicMemory() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        clearingWeddingPlanner \u003d false;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"        addWeddingStage \u003d DraftState.NO_DRAFT;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"zedonggg":43,"-":19}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_COMMAND_NOT_IN_USE \u003d \"Command not in use!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"    public static final String MESSAGE_DRAFT_WEDDING \u003d \"You have a draft wedding in progress! \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"            + \"Add the bride/groom first!\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Formats the {@code Wedding} for display to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String formatWedding(Wedding wedding) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        builder.append(wedding.getTitle())","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(wedding.getDate());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"zedonggg":2,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/NCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicMemory;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * No prompt command to abort executing the currently pending task (for 2-step tasks such as clearing all weddings)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NCommand extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"n\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Confirm to abort the pending task\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Usage: n\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_COMMANDS_EXECUTING \u003d \"No pending operations\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS_ABORT \u003d \"Aborted pending operation\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        if (LogicMemory.isClearingWeddingPlanner()) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS_ABORT);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"        if (LogicMemory.checkIfDrafting()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"            LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"            model.setDraftWedding(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"            return new CommandResult(MESSAGE_SUCCESS_ABORT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NO_COMMANDS_EXECUTING);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other instanceof YCommand;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"zedonggg":6,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/wedding/AddWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.LogicMemory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Creates a new wedding draft in the Wedding Planner","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddWeddingCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"new\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \": Creates a wedding draft\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"Parameters: n/WEDDING_NAME d/DATE\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" n/John \u0026 Mary d/25122025\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Wedding draft created! \"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"        + \"Now add the bride using:\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"        + \"add n/NAME p/PHONE e/EMAIL a/ADDRESS t/bride\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_WEDDING \u003d \"This wedding already exists.\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXISTING_DRAFT \u003d \"Overwriting previous wedding draft.\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Wedding draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates an AddWeddingCommand to add the specified {@code Wedding}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddWeddingCommand(Wedding draftWedding) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(draftWedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.draftWedding \u003d draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Check against existing weddings in permanent storage","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (model.hasWedding(draftWedding)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_WEDDING);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Handle existing draft","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String feedback \u003d MESSAGE_SUCCESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (model.hasDraftWedding()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            feedback \u003d MESSAGE_EXISTING_DRAFT + \"\\n\" + MESSAGE_SUCCESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Set the new draft wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.setDraftWedding(draftWedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddWeddingCommand)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddWeddingCommand otherAddCommand \u003d (AddWeddingCommand) other;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return draftWedding.equals(otherAddCommand.draftWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"zedonggg":4,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/wedding/AddWeddingPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.LogicMemory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the currently active wedding (draft or open)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddWeddingPersonCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + \": Adds a person to the active wedding\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"ROLE]...\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"Mary \" + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"mary@example.com \" + PREFIX_ADDRESS + \"123 Street \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        + PREFIX_TAG + \"bride\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %1$s as %2$s\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"    public static final String MESSAGE_SUCCESS_BRIDE \u003d \"Successfully added the bride. Now add the groom using \\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"            + \"add n/NAME p/PHONE e/EMAIL a/ADDRESS t/groom\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"    public static final String MESSAGE_SUCCESS_GROOM \u003d \"Successfully added the groom. Check out your new Wedding \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"            + \"on the left pane!\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the wedding\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_ACTIVE_WEDDING \u003d \"No active wedding! Create or open a wedding first.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ROLE_CONFLICT \u003d \"The %s role is already assigned!\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ROLE_TAG \u003d \"Invalid role tag! Use \u0027bride\u0027 or \u0027groom\u0027 for special roles.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddWeddingPersonCommand(Person toAdd) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.DraftState state \u003d LogicMemory.getDraftStage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"        if (state !\u003d LogicMemory.DraftState.NO_DRAFT) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"            Wedding activeWedding \u003d model.getDraftWedding();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zedonggg"},"content":"            if (model.weddingHasPerson(activeWedding, toAdd)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zedonggg"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON + LogicMemory.getDraftingMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zedonggg"},"content":"            switch (state) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zedonggg"},"content":"            case ADDING_BRIDE:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"                if (!toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"bride\"))) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"                    throw new CommandException(LogicMemory.getDraftingMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zedonggg"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"                activeWedding.setBride(toAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zedonggg"},"content":"                LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_GROOM);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"                return new CommandResult(MESSAGE_SUCCESS_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zedonggg"},"content":"            case ADDING_GROOM:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zedonggg"},"content":"                if (!toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"groom\"))) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zedonggg"},"content":"                    throw new CommandException(LogicMemory.getDraftingMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zedonggg"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zedonggg"},"content":"                activeWedding.setGroom(toAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zedonggg"},"content":"                LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zedonggg"},"content":"                model.commitDraftWedding();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zedonggg"},"content":"                System.out.println(\"Committing wedding...\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zedonggg"},"content":"                return new CommandResult(MESSAGE_SUCCESS_GROOM);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zedonggg"},"content":"            default:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zedonggg"},"content":"                throw new CommandException(LogicMemory.getDraftingMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zedonggg"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zedonggg"},"content":"        Wedding activeWedding \u003d model.getCurrentWedding();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (activeWedding \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_NO_ACTIVE_WEDDING);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (model.weddingHasPerson(activeWedding, toAdd)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Determine role from tags","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String role \u003d \"member\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"bride\"))) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            role \u003d \"bride\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } else if (toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"groom\"))) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            role \u003d \"groom\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        switch (role.toLowerCase()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case \"bride\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (activeWedding.getBride() !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(MESSAGE_ROLE_CONFLICT, \"bride\"));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            activeWedding.setBride(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case \"groom\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (activeWedding.getGroom() !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(MESSAGE_ROLE_CONFLICT, \"groom\"));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            activeWedding.setGroom(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            activeWedding.addMember(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Update model state","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(activeWedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Messages.format(toAdd),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            role.toUpperCase()));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"zedonggg":38,"-":99}},{"path":"src/main/java/seedu/address/logic/commands/wedding/ClearAllWeddingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicMemory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Clears all weddings from the current wedding planner","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearAllWeddingsCommand extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String COMMAND_WORD \u003d \"ca\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Are you sure you want to delete all weddings?\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \" Type \u0027y\u0027 to proceed and \u0027n\u0027 to cancel deletion\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_WEDDINGS \u003d \"There are no weddings to be cleared!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (model.isWeddingPlannerEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_NO_WEDDINGS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        LogicMemory.setClearingWeddingPlanner(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hrishikeshsathyian"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other instanceof ClearAllWeddingsCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":3,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/wedding/DeleteWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Deletes a Wedding based on provided index","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteWeddingCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \": Deletes a wedding based on provided index\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted wedding successfully!\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The provided wedding index does not exist!\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteWeddingCommand(Index targetIndex) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        boolean isInvalidIndex \u003d targetIndex.getZeroBased() \u003e\u003d model.getFilteredWeddingList().size();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (isInvalidIndex) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Wedding weddingToDelete \u003d model.getFilteredWeddingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        model.deleteWedding(weddingToDelete);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteWeddingCommand)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand otherDeleteCommand \u003d (DeleteWeddingCommand) other;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_INVALID_INDEX_NON_INTEGER \u003d \"Provided Index is not an integer\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_INVALID_INDEX_NON_NEGATIVE \u003d \"Provided Index is not a non-zero unsigned integer\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isInteger(trimmedIndex)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_NON_INTEGER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_NON_NEGATIVE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(title);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":2,"-":158}},{"path":"src/main/java/seedu/address/logic/parser/WeddingPlannerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.NCommand;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SortWeddingCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.YCommand;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.ClearAllWeddingsCommand;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.CloseWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.DeleteWeddingCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.EditWeddingPersonCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.FilterByTagCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.FindPersonCommand;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.OpenWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.RemoveWeddingPersonCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.AddWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.AddWeddingPersonCommandParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.ClearAllWeddingsCommandParser;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.CloseWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.DeleteWeddingCommandParser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.EditWeddingPersonCommandParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.FilterByTagCommandParser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.FindPersonCommandParser;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.OpenWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.wedding.RemoveWeddingPersonCommandParser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class WeddingPlannerParser {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WeddingPlannerParser.class);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case AddWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new AddWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case AddWeddingPersonCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new AddWeddingPersonCommandParser().parse(arguments);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case OpenWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new OpenWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case CloseWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new CloseWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case SortWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return new SortWeddingCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        case RemoveWeddingPersonCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return new RemoveWeddingPersonCommandParser().parse(arguments);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case FilterByTagCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return new FilterByTagCommandParser().parse(arguments);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        case ClearAllWeddingsCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return new ClearAllWeddingsCommandParser().parse(arguments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        case YCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return new YCommandParser().parse(arguments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        case NCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new NCommandParser().parse(arguments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case EditWeddingPersonCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return new EditWeddingPersonCommandParser().parse(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":131}},{"path":"src/main/java/seedu/address/logic/parser/wedding/AddWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddWeddingCommand object","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddWeddingCommandParser implements Parser\u003cAddWeddingCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddWeddingCommandParser.class);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Parsing AddWeddingCommand: {0}\", args);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    AddWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.log(Level.INFO, \"Successfully parsed wedding draft - Title: {0}, Date: {1}\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Object[]{title, date});","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddWeddingCommand(new Wedding(date, title));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, \"Invalid AddWeddingCommand format: \" + args, pe);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hrishikeshsathyian"},"content":"            boolean isTitleOrDateError \u003d pe.getMessage().equals(Date.MESSAGE_CONSTRAINTS)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"                    || pe.getMessage().equals(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"            if (isTitleOrDateError) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"                throw pe;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hrishikeshsathyian"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        AddWeddingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":6,"-":62}},{"path":"src/main/java/seedu/address/logic/parser/wedding/AddWeddingPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddWeddingPersonCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddWeddingPersonCommandParser implements Parser\u003cAddWeddingPersonCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddWeddingPersonCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddWeddingPersonCommand object for execution.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddWeddingPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                AddWeddingPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Validate role tags","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        long roleTags \u003d tags.stream()","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"            .filter(t -\u003e t.tagName.equalsIgnoreCase(\"bride\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"                    || t.tagName.equalsIgnoreCase(\"groom\"))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .count();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (roleTags \u003e 1) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(AddWeddingPersonCommand.MESSAGE_INVALID_ROLE_TAG);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tags);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"zedonggg":2,"-":70}},{"path":"src/main/java/seedu/address/logic/parser/wedding/DeleteWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.DeleteWeddingCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments for the DeleteWeddingCommand.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteWeddingCommandParser implements Parser\u003cDeleteWeddingCommand\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * DeleteWeddingCommand and returns a DeleteWeddingCommand object for execution.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteWeddingCommand(index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"            boolean argIsNotAnInteger \u003d pe.getMessage().equals(ParserUtil.MESSAGE_INVALID_INDEX_NON_INTEGER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hrishikeshsathyian"},"content":"            if (argIsNotAnInteger) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteWeddingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hrishikeshsathyian"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hrishikeshsathyian"},"content":"                throw new ParseException(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"                        String.format(DeleteWeddingCommand.MESSAGE_INVALID_INDEX)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hrishikeshsathyian"},"content":"                );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hrishikeshsathyian"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":7,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/wedding/RemoveWeddingPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.RemoveWeddingPersonCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments for the RemoveWeddingPersonCommand.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class RemoveWeddingPersonCommandParser implements Parser\u003cRemoveWeddingPersonCommand\u003e {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * RemoveWeddingPersonCommand and returns a RemoveWeddingPersonCommand object for execution.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public RemoveWeddingPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new RemoveWeddingPersonCommand(index);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"            boolean argIsNotAnInteger \u003d pe.getMessage().equals(ParserUtil.MESSAGE_INVALID_INDEX_NON_INTEGER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hrishikeshsathyian"},"content":"            if (argIsNotAnInteger) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveWeddingPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hrishikeshsathyian"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hrishikeshsathyian"},"content":"                throw new ParseException(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"                        String.format(RemoveWeddingPersonCommand.MESSAGE_INDEX_OUT_OF_RANGE)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hrishikeshsathyian"},"content":"                );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hrishikeshsathyian"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":7,"-":30}},{"path":"src/main/java/seedu/address/model/wedding/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Wedding\u0027s date in the planner.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be in the format DDMMYYYY (e.g., 30092025 for \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"            + \"30 September 2025) and must exist (eg 29022029 is invalid).\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Formatter for parsing the input string in DDMMYYYY format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"ddMMuuuu\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Formatter for outputting the date in a prettier format.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM uuuu\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter formatters \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .appendOptional(INPUT_FORMATTER)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .appendOptional(OUTPUT_FORMATTER)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .toFormatter()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final LocalDate date;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param dateStr A valid date string in DDMMYYYY format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code dateStr} is not in the correct format or is not a future date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code dateStr} is null.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Date(String dateStr) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidDate(dateStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDate.parse(dateStr, formatters);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid date in DDMMYYYY format and is in the future.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param testDate the date string to validate.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return true if the date is in the correct format and is a future date, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidDate(String testDate) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(testDate, formatters);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true; // no longer going to test for this condition","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this.date.compareTo(other.date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns this date in a user-friendly format (e.g., \"30 September 2025\").","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return a formatted date string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return date.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Indicates whether two Date objects are equal.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Two {@code Date} objects are considered equal if they represent the same date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param other the reference object with which to compare.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @return true if this object is the same as the other object.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return date.equals(otherDate.date);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return date.hashCode();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"-":100}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HappyEverAfter\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DefaultTheme.css\" /\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"header\" prefHeight\u003d\"100.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003cImageView\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003cImage url\u003d\"@/images/HappyEverAfter.png\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"                \u003cSplitPane fx:id\u003d\"mainHorizontalView\" dividerPositions\u003d\"0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003citems\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cVBox fx:id\u003d\"weddingList\" prefWidth\u003d\"160.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"                            \u003cStackPane fx:id\u003d\"weddingListPanelPlaceholder\" prefHeight\u003d\"136.0\" prefWidth\u003d\"150.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefHeight\u003d\"136.0\" prefWidth\u003d\"189.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                \u003cInsets top\u003d\"-5.0\" /\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false}],"authorContributionMap":{"soonami69":6,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"0.5\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"soonami69":10,"-":30}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22","isFullCredit":false}],"authorContributionMap":{"soonami69":2,"-":6}},{"path":"src/main/resources/view/WeddingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"0.5\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"soonami69":8,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/wedding/AddWeddingPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"import seedu.address.logic.LogicMemory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddWeddingPersonCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Wedding testWedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        testWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddWeddingPersonCommand(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_noActiveWedding_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Create a person to add and create the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.NO_DRAFT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        assert person !\u003d null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                AddWeddingPersonCommand.MESSAGE_NO_ACTIVE_WEDDING, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_addPersonToDraftWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Create a person to add","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"        // Update the draft stage to be waiting for bride","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"        assertThrows(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"                CommandException.class,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zedonggg"},"content":"                \"You have a wedding being created!\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"                        + \"Add the bride using : add n/NAME p/PHONE e/EMAIL a/ADDRESS t/bride\", ()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"                        -\u003e command.execute(model)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_addPersonToCurrentWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Add wedding to storage and set as current","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.setCurrentWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Create a person to add","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Added\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(model.weddingHasPerson(model.getCurrentWedding(), person));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_addBrideWithTag_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Create a person with bride tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zedonggg"},"content":"        // Update the draft stage to be waiting for bride","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zedonggg"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"bride\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(person, model.getDraftWedding().getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_addGroomWithTag_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Create a person with groom tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zedonggg"},"content":"        // Update the draft stage to be waiting for groom","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_GROOM);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zedonggg"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"groom\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_addSecondBride_throwsCommandException() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // Add first bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person firstBride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        new AddWeddingPersonCommand(firstBride).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // Try to add second bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Person secondBride \u003d new PersonBuilder().withName(\"Jane\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(secondBride);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zedonggg"},"content":"                \"You have a wedding being created!\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"soonami69"},"content":"                        + \"Add the groom using : add n/NAME p/PHONE e/EMAIL a/ADDRESS t/groom\", ()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"soonami69"},"content":"                        -\u003e command.execute(model)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void execute_addBrideAndGroom_commitsValidWedding() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.setDraftStage(LogicMemory.DraftState.ADDING_BRIDE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Add bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person bride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        new AddWeddingPersonCommand(bride).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Add groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person groom \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        new AddWeddingPersonCommand(groom).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Verify the draft is now valid and was committed","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(model.hasDraftWedding()); // Draft should be moved to permanent storage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(model.hasWedding(testWedding)); // Should be in permanent storage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // Verify the wedding has both bride and groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Wedding storedWedding \u003d model.getFilteredWeddingList().get(0);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertNotNull(storedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertNotNull(storedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(bride, storedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(groom, storedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zedonggg"},"content":"        LogicMemory.resetLogicMemory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":29,"soonami69":6,"-":154}},{"path":"src/test/java/seedu/address/logic/parser/wedding/AddWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AddWeddingCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private AddWeddingCommandParser parser \u003d new AddWeddingCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Wedding expectedWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // normal case","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" n/John \u0026 Mary d/25122025\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new AddWeddingCommand(expectedWedding));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                AddWeddingCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" d/25122025\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // missing date prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" n/John \u0026 Mary\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // invalid date (wrong format)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"        assertParseFailure(parser, \" n/John \u0026 Mary d/01302020\", Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"-":45}},{"path":"src/test/java/seedu/address/model/WeddingModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class WeddingModelManagerTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private WeddingModelManager modelManager \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Wedding weddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Wedding weddingB \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Date(\"01012026\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Title(\"Charlie \u0026 Diana\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Person personA \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new WeddingPlanner(), new WeddingPlanner(modelManager.getWeddingPlanner()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"wedding/planner/file/path\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"new/wedding/planner/file/path\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setWeddingPlannerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setWeddingPlannerFilePath(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setWeddingPlannerFilePath_validPath_setsWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"wedding/planner/file/path\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modelManager.setWeddingPlannerFilePath(path);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasWedding_weddingNotInWeddingPlanner_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hasWedding_weddingInWeddingPlanner_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        modelManager.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setDraftWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDraftWedding(null));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setDraftWedding_validWedding_setsDraftWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(weddingA, modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void hasDraftWedding_noDraftWedding_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void getDraftWedding_noDraftWedding_returnsNull() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertNull(modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void commitDraftWedding_noDraftWedding_throwsIllegalStateException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalStateException.class, () -\u003e modelManager.commitDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void commitDraftWedding_duplicateWedding_throwsIllegalStateException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalStateException.class, () -\u003e modelManager.commitDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void commitDraftWedding_validDraftWedding_addsWeddingAndClearsDraft() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.commitDraftWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNull(modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setCurrentWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCurrentWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setCurrentWedding_validWedding_setsCurrentWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(weddingA, modelManager.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void clearCurrentWedding_removesCurrentWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        modelManager.clearCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertNull(modelManager.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.weddingHasPerson(null, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.weddingHasPerson(weddingA, null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_personAsBride_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        wedding.setBride(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_personAsGroom_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        wedding.setGroom(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_personAsMember_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        wedding.addMember(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void weddingHasPerson_personNotInWedding_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void addWeddingPerson_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addWeddingPerson(null, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void addWeddingPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addWeddingPerson(weddingA, null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void addWeddingPerson_validWeddingAndPerson_addsPerson() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        modelManager.addWeddingPerson(wedding, personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void getFilteredWeddingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredWeddingList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void updateFilteredWeddingList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredWeddingList(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredPersonList(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        WeddingPlanner weddingPlanner \u003d new WeddingPlannerTest.WeddingPlannerBuilder()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                .withWedding(weddingA)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"                .withWedding(weddingB)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        WeddingPlanner differentWeddingPlanner \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        WeddingModelManager modelManagerCopy \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        modelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // Different wedding planner -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new WeddingModelManager(differentWeddingPlanner, userPrefs)));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // Different current wedding -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        WeddingModelManager differentModelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(differentModelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // Different draft wedding -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        differentModelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        differentModelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        modelManager.clearCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        modelManager.setDraftWedding(weddingB);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(differentModelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // Different userPrefs -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        differentUserPrefs.setWeddingPlannerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new WeddingModelManager(weddingPlanner, differentUserPrefs)));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"soonami69":2,"-":290}}]
