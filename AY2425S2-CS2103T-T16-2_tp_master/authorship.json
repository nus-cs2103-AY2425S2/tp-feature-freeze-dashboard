[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Tan Xing Zhong","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/tanxingzhong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[linkedin](https://www.linkedin.com/in/tan-xing-zhong-677492346/edit/forms/skills/new/?profileFormEntryPoint\u003dPROFILE_SECTION)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/TanXingZhong)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Leader","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Michael Cheong","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/reshiro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](https://github.com/Reshiro)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Testing","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Guan Qun","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/monobeartae.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"[[linkedin](https://www.linkedin.com/in/tan-guan-qun-0417751b3/)]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"[[github](https://github.com/monobeartae)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Integration","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"### Hai Hui","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/iuhiah.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TanXingZhong"},"content":"[[linkedin](https://www.linkedin.com/in/hai-hui-lee-659160261/)]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"[[github](https://github.com/iuhiah)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Documentation","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"### V Varsha","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/varsha13152.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TanXingZhong"},"content":"[[linkedin](https://www.linkedin.com/in/varsha-v-561659214/)]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"[[github](https://github.com/varsha13152)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Code Quality","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":2,"-":53}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# InnSync Developer Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the AirBnB Host issues the command `delete 1`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `PersonDetailPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a visitor).\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"monobeartae"},"content":"The `Storage` component,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.innsync.commons` package.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003e Please note that certain aspects, such as UML classes, may have been simplified to fit within the diagram\u0027s constraints and maintain readability.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"monobeartae"},"content":"### 1. Undo Implementation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"varsha13152"},"content":"The current undo feature undoes only the last recorded change, it does not maintain a history of commands or changes. Thus, users do not have the ability to undo more than one past change.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"monobeartae"},"content":"The proposed undo mechanism is facilitated by `ModelManager`. In addition to the `addressBook` variable which represents the current state of the address book, a second variable `backupAddressBook` representing the previous state of the address book is maintained.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"monobeartae"},"content":"\u003cpuml src\u003d\"diagrams/undo/InitialState.puml\" alt\u003d\"UndoState\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"monobeartae"},"content":"Whenever an operation modifying the address book is performed, the current address book is saved into the backup address book before the current address book is modified. ModelManager implements the method `ModelManager#backupAddressBook()` to achieve this.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"monobeartae"},"content":"When the `undo` command is performed, ModelManager will swap the contents of the address book with that of its backup through the implemented method `ModelManager#revertToLastModified()`. This operation is exposed in the `Model` interface as `Model#revertToLastModified()`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"monobeartae"},"content":"The following operations in `ModelManager` modify the address book and will hence result in a backup of the current address book:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"monobeartae"},"content":"* `ModelManager#setPerson()` — Modifies a person in the address book","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"monobeartae"},"content":"* `ModelManager#addPerson()` — Adds a person into the address book","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"monobeartae"},"content":"* `ModelManager#deletePerson()` — Deletes a person from the address book","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"monobeartae"},"content":"* `ModelManager#setAddressBook()` — Replaces the contents of the entire address book","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"monobeartae"},"content":"* `ModelManager#revertToLastModified()` — Restores the previously undone address book state","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"monobeartae"},"content":"Given below is an example usage scenario and how the undo mechanism behaves at each step.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"monobeartae"},"content":"Step 1. The user launches the application for the first time. The variable `backupAddressBook` will be initialized with the contents of the current address book, thus containing the same contents as there are no modifications yet.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"monobeartae"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `ModelManager#backupAddressBook()` and `Model#deletePerson()`, causing the current address book to be backed up into `backupAddressBook`, and the current addressbook to call `AddressBook#removePerson()`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"monobeartae"},"content":"**Note:** If a command fails its execution, it will not call any operations modifying the address book. Thus, `ModelManager#backupAddressBook()` is not called and the address book state will not be saved into the backup `backupAddressBook`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"monobeartae"},"content":"Step 3. The user now decides that deleting the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"monobeartae"},"content":"**Note:** If the contents of `backupAddressBook` is the same as that of `addressBook`, then there are no previous AddressBook states to restore. ModelManager implements the method `ModelManager#hasUndoState()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"monobeartae"},"content":"\u003cpuml src\u003d\"diagrams/undo/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"varsha13152"},"content":"**Aspect: How undo executes:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"varsha13152"},"content":"* **Alternative 2:** Individual command knows how to undo by","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"monobeartae"},"content":"### 2. List Star Implementation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"varsha13152"},"content":"The list star feature is facilitated by `ListStarCommand`. It extends the basic listing functionality with contact filtering capability, using an internal `PREDICATE_SHOW_STARRED_PERSONS` and `Model#updateFilteredPersonList()`. The supported operations are:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"varsha13152"},"content":"* `ListStarCommand#execute()` - Filters the contact list to show only starred entries","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"varsha13152"},"content":"* `Model#updateFilteredPersonList()` - Updates the UI with the filtered results","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"varsha13152"},"content":"Given below is an example usage scenario and how the list star mechanism behaves at each step.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"varsha13152"},"content":"**Step 1.** The user launches the application. The `Model` contains the full list of contacts (both starred and unstarred).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"varsha13152"},"content":"**Step 2.** The user executes `liststar` command to view starred contacts. The command is processed by:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"varsha13152"},"content":"1. `LogicManager` receiving the command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"varsha13152"},"content":"2. `AddressBookParser` creating a `ListStarCommand`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"varsha13152"},"content":"3. The command executing and applying the filter predicate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"varsha13152"},"content":"\u003cpuml src\u003d\"diagrams/ListStarSequenceDiagram.puml\" alt\u003d\"ListStarSequenceDiagram\"\u003e\u003c/puml\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"varsha13152"},"content":"**Step 3.** The system updates the display to show only contacts where `isStarred \u003d\u003d true`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"varsha13152"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"iuhiah"},"content":"**Note:** If no contacts are starred, the filtered list will be empty. The command still succeeds as this is valid behaviour.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"varsha13152"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"varsha13152"},"content":"**Step 4.** The user sees only their starred contacts in the UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"varsha13152"},"content":"#### Design Considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"varsha13152"},"content":"**Aspect: How filtering executes:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"varsha13152"},"content":"* **Alternative 1 (current choice):** Uses a predicate to filter the existing list","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"varsha13152"},"content":"    * Pros: Simple to implement, consistent with other commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"varsha13152"},"content":"    * Cons: Requires full list traversal","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"varsha13152"},"content":"* **Alternative 2:** Maintain a separate starred contacts list","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"iuhiah"},"content":"    * Pros: Faster access to favourites","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"varsha13152"},"content":"    * Cons: More complex synchronization, increased memory usage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"varsha13152"},"content":"**Aspect: When to apply filtering:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"varsha13152"},"content":"* **Alternative 1 (current choice):** Only when explicitly requested via `liststar`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"iuhiah"},"content":"    * Pros: Clear user control, predictable behaviour","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"varsha13152"},"content":"    * Cons: Requires explicit command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"varsha13152"},"content":"* **Alternative 2:** Automatically filter when starring/unstarring","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"varsha13152"},"content":"    * Pros: Immediate feedback","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"varsha13152"},"content":"    * Cons: May surprise users who want to see all contacts","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* is a host for guests to stay at one or more properties on hosting platforms _(i.e. AirBnB)_","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Value proposition**: Allows AirBnB hosts to manage all their property management related contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"| Priority | As a …​                                            | I want to …​                                    | So that I can…​                                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"varsha13152"},"content":"|----------|----------------------------------------------------|-------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                           | see usage instructions                          | refer to instructions when I forget how to use the App                    |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | add a new visitor                               | keep track of who is visiting my property                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | edit a visitor                                  | update details of a visitor                                               |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | list all visitors                               | see all the visitors I have added                                         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | delete a visitor                                | remove entries that I no longer need                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | add a tag to visitor                            | categorize and identify them easily                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | add a booking tag to visitor                    | quickly assign the visitor to their property                              |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | remove a tag from the visitor                   | to unassign the visitor tag                                               |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | remove a booking tag from the visitor           | to unassign the visitor booking tag                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"| `* * *`  | AirBnB host                                        | find a visitor by name                          | quickly find a specific visitor                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | filter visitors by property booked              | quickly find visitors who visited a specific property                     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | filter visitors by date of stay                 | quickly find visitors using specific time periods                         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | filter visitors by tag                          | quickly find visitors using personalised categories                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | filter visitors by next upcoming booking        | prepare for future bookings efficiently                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"iuhiah"},"content":"| `* *`    | AirBnB host                                        | add a request to visitor                        | fulfil the visitor request                                               |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | mark the request as completed in the visitor    | to mark visitor request as fulfilled                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `* * `   | AirBnB host                                        | unmark the request as incomplete in the visitor | to unmark visitor request as unfulfilled                                  |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"| `* * `   | AirBnB host                                        | delete the request from the visitor             | to remove visitor request                                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"iuhiah"},"content":"| `* *`    | AirBnB host                                        | star a visitor                                  | favourite the visitor so that they appear at the top                       |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"iuhiah"},"content":"| `* *`    | AirBnB host                                        | unstar a visitor                                | unfavourite the visitor so that they no longer appear at the top |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"iuhiah"},"content":"| `* *`    | AirBnB host                                        | list all the starred visitor                    | see all the favourite visitors I have starred                              |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* * `   | AirBnB host                                        | add a memo to visitor                           | give a short note to describe the visitor                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | undo the last command                           | recover from mistakes                                                     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | clear all visitors                              | start over with a clean slate                                             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | save visitor details to a file                  | backup my address book                                                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"| `* *`    | AirBnB host                                        | load visitor details from a file                | restore my address book                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"varsha13152"},"content":"| `*`      | AirBnB host with many visitors in the address book | sort visitors by name                           | find visitors efficiently                                                 |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is `InnSync` and the **Actor** is `AirBnB Host`, unless specified otherwise)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Use case: UC01 - Add a visitor**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"1. AirBnB Host requests to add a visitor with specified details.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"2. InnSync validates the input.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"3. InnSync adds the visitor.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"4. InnSync shows a success message.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"* 2a. The input format is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    * 2a1. InnSync shows an error message and informs the AirBnB Host of the proper format. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"* 2b. The visitor already exists in InnSync.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    * 2b1. InnSync shows an error message and informs the AirBnB Host that the visitor already exists. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"varsha13152"},"content":"**Guarantees:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"varsha13152"},"content":"1. The contact is successfully created and the stored in InnSync.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"varsha13152"},"content":"2. Duplicate contacts will not happen.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Use case: UC02 - Delete a visitor**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"1. AirBnB Host requests to delete a specific visitor.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"2. InnSync deletes the visitor.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"3. InnSync displays a message for successful deletion of a visitor\u0027s contact. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"    * 1a1. InnSync shows an error message and informs the AirBnB Host that the index is invalid. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"*  Guarantees: The contact is successfully deleted from InnSync, and any persistent storage.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Use case: UC03 - Edit a visitor**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"1.  AirBnB Host requests to list visitors","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"2.  InnSync shows a list of visitors","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"varsha13152"},"content":"3.  AirBnB Host requests to edit a specific visitor in the list and enters the details","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"varsha13152"},"content":"4.  InnSync validates the entered details","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"varsha13152"},"content":"5.  InnSync updates the contact with the new provided details","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"varsha13152"},"content":"6.  InnSync shows a success message and the updated details of the visitor. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"   * 2a1. InnSync shows an error message that there are no saved contacts. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    * 3a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 3b. Input argument(s) are invalid  tag.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"    * 3b1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"* 3c. The contact already exists in InnSync","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"    * 3c1. InnSync shows an error message that the contact already exists. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"varsha13152"},"content":"**Guarantees:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"varsha13152"},"content":"1. The contact is successfully edited and the stored in InnSync.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"varsha13152"},"content":"2. Any persistent storage have updated this contact.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"varsha13152"},"content":"3. Duplicate contacts will not happen.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"varsha13152"},"content":"**Use case: UC04 - Find a visitor**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"varsha13152"},"content":"1. AirBnB Host requests to find a visitor by specified detail (e.g name, address, phone etc.)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"varsha13152"},"content":"2. InnSync validates the entered detail","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"varsha13152"},"content":"3. InnSync displays a list of contacts matching the specified detail. \u003cbr\u003e Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"varsha13152"},"content":"* 2a. The given detail is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"varsha13152"},"content":"    * 2a1InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"varsha13152"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"varsha13152"},"content":"* 3a. The list is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"varsha13152"},"content":"  * 3a1. InnSync shows an error message that there are no contacts were found. \u003cbr\u003e Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Use case: UC05 - Add Tag to Contact**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"1.  AirBnB Host requests to list visitors","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"2.  InnSync shows a list of visitors","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"3.  AirBnB Host requests to add a tag to a specific visitor in the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"iuhiah"},"content":"4.  InnSync validates the entered tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"5.  InnSync updates the contact with the new provided tag","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"varsha13152"},"content":"6.  InnSync shows a success message with the updated details of the visitor. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"   * 2a1. InnSync shows an error message that there are no saved contacts. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"    * 3a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"* 4a. Input argument(s) are invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"    * 4a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"varsha13152"},"content":"**Guarantees:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"varsha13152"},"content":"1. The booking tag is successfully added and the stored in InnSync.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"varsha13152"},"content":"2. Any persistent storage have added the booking tag to the contact.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"**Use case: UC06 - Add Booking Tag to Contact**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"1.  AirBnB Host requests to list visitors","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"2.  InnSync shows a list of visitors","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"3.  AirBnB Host requests to add a booking tag to a specific visitor in the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"iuhiah"},"content":"4.  InnSync validates the entered booking tag","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"5.  InnSync updates the contact with the new provided booking tag","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"iuhiah"},"content":"6.  InnSync shows the updated details of the visitor. \u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"iuhiah"},"content":"Use case ends.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"   * 2a1. InnSync shows an error message that there are no saved contacts. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"    * 3a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"* 4a. Input argument(s) are invalid.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Reshiro"},"content":"    * 4a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"* 5a. The given booking tag date overlaps with an existing booking tag.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"    * 5a1. InnSync shows an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"**Use case: UC07 - List visitors**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. AirBnB Host requests to list all visitors.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"2. InnSync displays a list of all visitors.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Reshiro"},"content":"**Extensions**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"    * 2a1. InnSync shows a message that the list is empty. \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"     Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"varsha13152"},"content":"* 2b. InnSync is unable to get saved contacts.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"varsha13152"},"content":"    * 2b1. InnSync informs the user that the file is corrupted. \u003cbr\u003e Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"**Use case: UC08 - Help**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. AirBnB Host wants to see the user guide","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"varsha13152"},"content":"2. InnSync displays a hyperlink to the user guide \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"**Use case: UC09 - Clear**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. AirBnB Host remove all visitor contacts in the database","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"2. InnSync clears the database and updates local JSON file \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Reshiro"},"content":"**Use case: UC10 - Exit**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. AirBnB Host wants to exit the application","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"2. InnSync is terminated \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 visitors without noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"4.  The application size should not be more than 100mb to enable user to have easy installation on various devices.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"5.  The application should also be optimized such that its CPU and memory usage is low so that it can run on low-end machines.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"6.  The system should be optimized for single-user operation instead of multiple-user operation.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"7.  The application should not crash during network failures and be reliable enough for continuous use case during operation hours.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"8.  The data used should be stored in a structured and human-readable format like JSON.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"9.  Should be easily extendable so that new features can be added without having to refactor the entire project.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"* **AirBnB host**: An AirBnB host is an individual or business that list their property on the platform for short-term rentals. The host provide accommodations in the forms of apartments, houses or rooms for guests, typically for leisure activities.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"* **Visitor**:  Any individual who accesses an AirBnB property, including guests staying at the property, property owners, service providers performing work, or other authorized individuals. Visitors may include cleaners, maintenance personnel, property inspectors, delivery services, and other vendors.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"* **CLI (Command Line Interface)**: A text-based interface where users interact with the application with a keyboard typing commands instead of using a graphical user interface.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"* **JAR**: A packed file format used in Java that contains compiled java codes to enable easy distribution, portability and execution that includes libraries and resources to allow the program to function.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"* **JSON (JavaScript Object Notation)**: A lightweight data format widely used for storing and exchanging structured data in a human-readable, that is often used in databases and APIs.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"* **GUI (Graphical User Interface)**: A visual graphical interface that allows users to interact with the application using various graphical elements like search boxes, buttons, text boxes, and eta.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"* **Prerequisite**: A set of rules or instructions to be executed before prior to executing a particular task.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"* **MSS (Main Success Scenario)**:It describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"* **API (Application Programming Interface)**: A set of rules or protocols that govern the application to allow different software applications to work together by communication with each other.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"monobeartae"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"monobeartae"},"content":"**Difficulty Level:** The project was moderately challenging due to the integration of multiple additional commands and person fields, and the complexity of building and maintaining relationships between them.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"monobeartae"},"content":"**Challenges Faced and Achievements:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"iuhiah"},"content":"* **Addition of Person Fields:** To better allow hosts to keep track of their visitors, we added booking tags into our system, a major feature which allowed hosts to associate a booking tag containing a property, start date, and end date, with a visitor. This information is crucial in recording a guest\u0027s period of stay at a property. Many tweaks to the system were necessary to accommodate the addition of this new field. In addition to the booking tag, we also allowed users to add requests, which could be marked as complete, and a memo, which could contain remarks about a visitor, to a contact.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"iuhiah"},"content":"* **Addition of Commands:** We had to significantly modify existing commands (`add`, `find`, `edit`), and include multiple new additional commands (`tag`, `untag`, `req`, `mark`, `unmark`, `deletereq`, `liststar`, `memo`) to accommodate the creation, modification and deletion of our added fields to each contact. In addition to those commands, we also added the `undo` command to allow users to revert unintended changes. We also implemented a system which made dangerous commands such as `clear` require a confirmation to proceed. Finally, we added the `star` feature which allowed users to star contacts and have their favourite or most frequently accessed contacts displayed above the unstarred visitors.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"iuhiah"},"content":"* **Parsing of parameters:** In order to cater to the possibility of names containing prefixes, such as `murthu a/p vara` which contains the `a/` prefix used for addresses, we modified the existing parser system to allow prefixes to be escaped with the `$` symbol, allowing users more freedom in their choice of parameters.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"monobeartae"},"content":"* **User Interface Enhancements:** To make the GUI more appealing and intuitive, we revamped the GUI changing its overall look, including the addition of the Persons Detail Panel, into our layout. We successfully displayed a contact\u0027s details in the panel both when selecting their card in the GUI with a mouse, and when a contact\u0027s details is modified through a command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"iuhiah"},"content":"**Effort Required:** We estimate that the project required more than double the expected effort due to the addition of various features, fields and commands in order to improve the user experience of the app and cater to the needs of our target users. We also exercised much effort in the testing of our program and complying with coding standards to ensure the maintainability of our program.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"Team Size: 5","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"monobeartae"},"content":"1. **Allow all command parsers to escape prefixes in all fields**: Currently, only the `edit` and `add` command allow escaping of prefixes such as `a/`, `e/`, and only in the `NAME` argument. We plan to extend this feature to all commands and fields, in order to allow the user more freedom in their choice of arguments and keywords.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"monobeartae"},"content":"2. **Stricter validation for email**: The current validation for email only requires the existence of `@` character, and does not require the domain to contain `.`. As such, invalid emails such as `johndoe@example` and `jd@mail` were accepted. In the future, we intend to modify the validation of the email parameter to require a `.`, followed by at least two alphanumeric characters after the presence of `@`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"iuhiah"},"content":"3. **Different parameter prefixes for `REQUEST` and `REQUEST_INDEX`**: Both parameters `REQUEST` and `REQUEST_INDEX` currently share the same prefix `r/`. We plan to change the parameter of `REQUEST_INDEX` to use `ri/` instead to avoid confusion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"monobeartae"},"content":"4. **Allow phone numbers to contain dashes and brackets**: The current `PHONE` parameter does not allow the presence of brackets `(`, `)` and dashes `-`. Due to this, users are unable to add numbers in formats such as `+1-242-3887654` and `+1 (242) 3887654`. We plan to modify the validation for the `PHONE` parameter to allow these characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"iuhiah"},"content":"5. **Unique index for booking tags**: Currently, booking tags are identified by a combination of their property name, start date and end date. This results in inconvenience for users when using the `untag` command, due to having to re-enter all three parameters. We plan to provide a form of unique identification for booking tags to allow for easier deletion of booking tags in the future.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"iuhiah"},"content":"6. **Edit request command**: The only way to edit a request of a contact is to delete it and add it again. We intend to add an edit request command to allow users the functionality of editing requests belonging to a contact.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"monobeartae"},"content":"7. **Case-insensitive command words**: The current command words are case-sensitive. However, users may enter `Add` or `ADD` instead of `add` by mistake. For convenience, we plan to modify the validation of command words to be case-insensitive.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"monobeartae"},"content":"8. **Make `edit` success messages more detailed**: The current `edit` command\u0027s success message does not contain details of what was modified. We plan to make the success message more descriptive.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"iuhiah"},"content":"9. **Specificity of error messages**: The current error messages for invalid command formats are too general. We plan to make error messages more specific by including the parameter which caused it (where applicable) and the reason it failed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"iuhiah"},"content":"10. **Allow specific tags and booking tags to be edited**: Currently, the only way to edit a tag or booking tag is to delete it and add it again. We plan to add a command to allow users to edit tags and booking tags directly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"monobeartae"},"content":"   2. Open a new terminal and navigate to the directory containing the jar file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"monobeartae"},"content":"   3. Run the jar file using the command `java -jar innsync.jar`. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"monobeartae"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"monobeartae"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"monobeartae"},"content":"   2. Re-launch the app using the command `java -jar innsync.jar`.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"monobeartae"},"content":"### Listing all visitors","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"monobeartae"},"content":"1. Listing all visitors when there are no contacts","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"monobeartae"},"content":"   1. Prerequisites: No contacts in addressbook. This can be done using the `clear` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `list`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"TanXingZhong"},"content":"      Expected: No contacts displayed in list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: There are no contacts in the address book. Use the \u0027add\u0027 command to create new contacts!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"monobeartae"},"content":"   3. Other incorrect list commands to try: `List`, `listx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"monobeartae"},"content":"      Expected: Error message displayed in status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"monobeartae"},"content":"2. Listing all visitors when there is at least one contact in address book","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"monobeartae"},"content":"   1. Prerequisites: At least one contact in address book.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `list`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"iuhiah"},"content":"      Expected: All contacts displayed in list. Starred visitors will be shown first, followed by unstarred visitors. Both groups will be sorted lexicographically within their respective groups.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: List successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eListing all persons in the address book!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"monobeartae"},"content":"   3. Other incorrect list commands to try: `List`, `listx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"monobeartae"},"content":"      Expected: Error message displayed in status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"### Deleting a visitor","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"1. Deleting a visitor while all visitors are being shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all visitors using the `list` command. Multiple visitors in the list.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"monobeartae"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Delete successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eNAME has been deleted from the address book!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"monobeartae"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003edelete: Deletes the person identified by the index number used in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: delete 1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"iuhiah"},"content":"   4. Other incorrect delete commands to try: `Delete`, `deletex`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003edelete: Deletes the person identified by the index number used in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: delete 1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"monobeartae"},"content":"### Adding a visitor","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"monobeartae"},"content":"1. Adding a visitor who is not currently in the addressbook","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"monobeartae"},"content":"   1. Prerequisites: No visitor with matching phone number and email address is displayed in addressbook when using `list` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `add n/John Doe a/John Doe Street e/johndoe@example.com p/+65 8888 8888`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"monobeartae"},"content":"      Expected: Contact is added to list. Contact List Card is selected in GUI. Contact Details are shown in Details Panel in GUI. Details of the added contact shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Add successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eJohn Doe; Phone: +65 8888 8888; Email: johndoe@example.com; Address: John Doe Street; Memo: ; Requests: ; BookingTags: ; Tags: ; Starred: false has been added to the address book!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"monobeartae"},"content":"   3. Test case: `add n/John Doe a/John Doe Street e/jd@example.com p/+65 88888888 t/guest m/no room cleaning b/StarHotel from/2025-04-01 to/2025-04-05 r/Needs Laundry Detergent`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"monobeartae"},"content":"      Expected: Contact is added to list. Contact List Card is selected in GUI. Contact Details are shown in Details Panel in GUI. Details of the added contact shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Add successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eJohn Doe; Phone: +65 88888888; Email: jd@example.com; Address: John Doe Street; Memo: no room cleaning; Requests: [Needs Laundry Detergent]; BookingTags: [StarHotel]; Tags: [guest]; Starred: false has been added to the address book!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"monobeartae"},"content":"   4. Test case: `add n/John Doe`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"monobeartae"},"content":"      Expected: No visitor is added. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Invalid command format! ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eadd: Adds a person to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [r/REQUEST...] [b/BOOKING_TAG...] [t/TAG...] [m/MEMO]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: add n/John Doe p/+65 98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 b/Beach House from/2025-06-01 to/2025-06-10 t/owes money m/Wants extra food","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"monobeartae"},"content":"   5. Test case: `add n/John Doe a/John Doe Street e/johndoe@example.com p/123`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"monobeartae"},"content":"      Expected: No visitor is added. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Phone numbers should be in format +[COUNTRY_CODE] [NUMBER],","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003ethe country code must be valid and the number should be","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eat least 7 digits long and at most 15 digits long.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"monobeartae"},"content":"   6. Other incorrect add commands to try: `Add`, `add abc`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"TanXingZhong"},"content":"      Expected: No visitor is added. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"monobeartae"},"content":"### Starring a visitor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"iuhiah"},"content":"1. Starring a visitor who is currently in the addressbook while all visitors are being shown","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"iuhiah"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least two visitors in the list. Both visitors are unstarred.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"iuhiah"},"content":"   2. Test case: `star 2`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"iuhiah"},"content":"      Expected: Second contact is starred. Contact List Card is selected in GUI. Contact Details of the starred visitor are shown in Details Panel in GUI. Details of the starred contact shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Star successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eStarred contact: NAME","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"iuhiah"},"content":"   3. Test case: `star 1`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"iuhiah"},"content":"      **Note:** Attempt to star a visitor who is already starred. The new first contact in the list should be the one you just starred in the above test case.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eExpected: Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Star failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eContact NAME is already starred!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"TanXingZhong"},"content":"   4. Test case: `star 0`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is starred. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003estar: Stars the contact identified by the index number used in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: star 1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"iuhiah"},"content":"   5. Other incorrect star commands to try: `Star`, `starx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"monobeartae"},"content":"### Unstarring a visitor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"iuhiah"},"content":"1. Unstarring a visitor who is currently starred in the addressbook while all visitors are being shown","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"monobeartae"},"content":"    1. Prerequisites: List all visitors using the `list` command. Multiple visitors in the list with at least one starred.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"monobeartae"},"content":"    2. Test case: `unstar 1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"iuhiah"},"content":"       **Note:** First contact in the list should be starred.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eExpected: Contact with respective INDEX is un starred and will be moved back in the list sorted lexicographically among the unstar visitor. Contact Details of the unstar visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eOutput: Unstar successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eThe contact NAME was unstarred!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"TanXingZhong"},"content":"    3. Test case: `unstar INDEX`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"monobeartae"},"content":"       **Note:** Attempt to unstar the same visitor you just unstarred in the above test case by locating and using the new index of that same visitor.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"monobeartae"},"content":"       \u003cbr\u003eExpected: Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eOutput: Unstar failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"iuhiah"},"content":"       \u003cbr\u003eThe contact NAME was not starred!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"TanXingZhong"},"content":"    4. Test case: `unstar 0`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"iuhiah"},"content":"       Expected: No visitor is unstarred. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eunstar: Unstars the contact identified by the index number used in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eParameters: INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"TanXingZhong"},"content":"       \u003cbr\u003eExample: unstar 1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"iuhiah"},"content":"    5. Other incorrect unstar commands to try: `Unstar`, `unstarx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"monobeartae"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"iuhiah"},"content":"       \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"TanXingZhong"},"content":"### Adding a request to a visitor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"iuhiah"},"content":"1. Adding a request to a visitor who is currently in the addressbook while all visitors are being shown","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"TanXingZhong"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least one visitor in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"TanXingZhong"},"content":"   2. Test case: `req 1 r/REQUEST`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"iuhiah"},"content":"      **Note:** First contact in the list should not already have the request \"REQUEST\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: First contact in the list has \"REQUEST\" added to its request list. Contact Details of the visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Add request successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eAdded request to NAME!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"TanXingZhong"},"content":"   3. Test case: `req 1 r/REQUEST`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"iuhiah"},"content":"      **Note:** Perform the previous test case first to ensure that the first contact in the list has the request \"REQUEST\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: No request will be added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Command will result in duplicate request!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"TanXingZhong"},"content":"   4. Test case: `req 1 r/ASD r/ASD`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"iuhiah"},"content":"      Expected: No request will be added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Command will result in duplicate request!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"TanXingZhong"},"content":"   5. Test case: `req 1 r/`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"iuhiah"},"content":"      Expected: No request will be added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Request cannot be empty!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"TanXingZhong"},"content":"   6. Test case: `req r/`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor will have a request added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003ereq: Adds a request to the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: req 1 r/Need a bottle of champagne every morning","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"TanXingZhong"},"content":"   7. Test case: `req 0 r/`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor will have a request added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003ereq: Adds a request to the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eExample: req 1 r/Need a bottle of champagne every morning","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"iuhiah"},"content":"   8. Test case: `req 1 r/asd`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"TanXingZhong"},"content":"      **Note:** Attempt to add a request when there is no visitor in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: No visitor will have a request added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"TanXingZhong"},"content":"      \u003cbr\u003eOutput: The person index provided is invalid! ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"iuhiah"},"content":"   9. Test case: `req 1 r/`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor will have a request added. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Request cannot be empty!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"iuhiah"},"content":"   10. Other incorrect req commands to try: `Req`, `reqx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"iuhiah"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"iuhiah"},"content":"       \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"monobeartae"},"content":"### Marking a request of a visitor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"monobeartae"},"content":"1. Marking a request of a visitor who is currently in the addressbook","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"iuhiah"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least one visitor in the list with at least one unmarked request.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `mark 1 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"monobeartae"},"content":"      Expected: First request of visitor is marked as complete. Contact Details of the starred visitor are shown in Details Panel in GUI. Checkbox of first request in list is ticked.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: Mark request successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eMarked request as completed!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"monobeartae"},"content":"   3. Test case: `mark 1 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"iuhiah"},"content":"      **Note:** Attempt to mark the same request you marked in the above test case.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"iuhiah"},"content":"      Expected: Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: The request REQUEST is already marked!(ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"monobeartae"},"content":"   4. Test case: `mark 0 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"iuhiah"},"content":"      Expected: No request is marked. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003emark: Marks a request of the contact identified by the index number in the displayed person list as completed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST_INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eExample: mark 1 r/1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"iuhiah"},"content":"   5. Other incorrect mark commands to try: `Mark`, `markx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"monobeartae"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"monobeartae"},"content":"### Unmarking a request of a visitor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"monobeartae"},"content":"1. Unmarking a request of a visitor who is currently in the addressbook","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"iuhiah"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least one visitor in the list with at least one marked request.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"monobeartae"},"content":"   2. Test case: `unmark 1 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"iuhiah"},"content":"      Expected: First request of visitor is marked as complete. Contact Details of the starred visitor are shown in Details Panel in GUI. Checkbox of first request in list is not ticked.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: Unmark request successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eREQUEST has been unmarked!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"monobeartae"},"content":"   3. Test case: `unmark 1 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"iuhiah"},"content":"      **Note:** Attempt to unmark the same request you unmarked in the above test case.\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"iuhiah"},"content":"      Expected: No request will be unmarked. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: Unmark request failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eThe request REQUEST is not marked!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"iuhiah"},"content":"   4. Test case: `unmark 0 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"iuhiah"},"content":"      Expected: No request will be unmarked. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eunmark: Unmarks a request of the contact identified by the index number in the displayed person list from its completion status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST_INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"monobeartae"},"content":"      \u003cbr\u003eExample: mark 1 r/1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"iuhiah"},"content":"   5. Other incorrect unmark commands to try: `Unmark`, `unmarkx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"monobeartae"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"Reshiro"},"content":"### Deleting a request","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"Reshiro"},"content":"1. Deleting a request from a visitor who has requests","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"iuhiah"},"content":"    1. Prerequisites: List all visitors using the `list` command. At least one visitor with at least one request.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"iuhiah"},"content":"    2. Test case: `deletereq 1 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"iuhiah"},"content":"       Expected: The specified request is deleted from the visitor. Contact Details of the visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eOutput: Delete request successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eREQUEST has been deleted from NAME\u0027s request list!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"iuhiah"},"content":"    3. Test case: `deletereq 1 r/REQUEST_INDEX`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"iuhiah"},"content":"       **Note:** Use a value for REQUEST_INDEX that is greater than the number of requests the visitor has.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eExpected: No request is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eOutput: This contact does not have a request of this index! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"Reshiro"},"content":"    4. Test case: `deletereq 0 r/1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"Reshiro"},"content":"       Expected: No request is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eOutput: Index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003edeletereq: Deletes a request from the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST_INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eExample: deletereq 1 r/1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"iuhiah"},"content":"    5. Test case: `deletereq 1 r/0` or `deletereq 1 r/x` (where x is a non-numeric character)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"Reshiro"},"content":"       Expected: No request is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eOutput: Request index is not a non-zero unsigned integer. ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003edeletereq: Deletes a request from the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eParameters: INDEX (must be a positive integer) r/REQUEST_INDEX (must be a positive integer)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"Reshiro"},"content":"       \u003cbr\u003eExample: deletereq 1 r/1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"iuhiah"},"content":"    6. Other incorrect deletereq commands to try: `Deletereq`, `deletereqx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"iuhiah"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"iuhiah"},"content":"       \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"iuhiah"},"content":"### Tagging a visitor","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"iuhiah"},"content":"1. Tagging a visitor who is currently in the addressbook with a tag/booking tag while all visitors are being shown.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"iuhiah"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least one visitor in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"iuhiah"},"content":"   2. Test case: `tag 1 t/Example`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"iuhiah"},"content":"      Expected: First contact is tagged. Contact List Card is selected in GUI. Contact Details of the tagged visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"iuhiah"},"content":"      **Note:** First contact should not already have the tag `Example`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Tag successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eNAME\u0027s tag list has been updated!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"iuhiah"},"content":"   3. Test case: `tag 1 t/Example`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"iuhiah"},"content":"      **Note:** Perform the previous test case first. First contact should already have the tag `Example`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: Command will result in duplicate [Example]!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"iuhiah"},"content":"   4. Test case: `tag 1 b/Example from/2023-10-01 to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"iuhiah"},"content":"      Expected: First contact is tagged. Contact List Card is selected in GUI. Contact Details of the tagged visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Tag successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eNAME\u0027s tag list has been updated!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"iuhiah"},"content":"   5. Test case: `tag 1 b/Example from/2023-10-01 to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"iuhiah"},"content":"      **Note:** Perform the previous test case first. First contact should already have the booking tag `Example from/2023-10-01 to/2023-10-31`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Tag failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample 01 Oct 23 to 31 Oct 23 already exists in the contact\u0027s tag list!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"iuhiah"},"content":"   6. Test case: `tag 1 b/Example from/ to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Start date cannot be empty!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"iuhiah"},"content":"   7. Test case: `tag 1 b/Example from/2023-02-29 to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Start date is invalid!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"iuhiah"},"content":"   8. Test case: `tag 1 b/Example from/2023-10-01 to/`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: End date cannot be empty!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"iuhiah"},"content":"   9. Test case: `tag 1 b/Example from/2023-02-01 to/2023-02-29`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: End date is invalid!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"iuhiah"},"content":"  10. Test case: `tag 1 b/Example from/2023-10-01 to/2023-09-30`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Error: Booking tag start date must be before end date.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"iuhiah"},"content":"  11. Test case: `tag 1 b/Example from/2023-10-01` or `tag 1 b/Example to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Booking tags should be of the format PROPERTY from/START_DATE to/END_DATE where START_DATE and END_DATE are in the format yyyy-MM-dd.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eThe START_DATE must be before END_DATE.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003ePROPERTY must have 1 to 170 characters.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"iuhiah"},"content":"  12. Test case: `tag 0` or `tag`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Invalid command format! ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003etag: Adds tag to the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) t/TAG or","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eb/PROPERTY from/START_DATE to/END_DATE","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample: tag 1 t/friends","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample: tag 1 b/property from/2023-10-01 to/2023-10-31","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"iuhiah"},"content":"  13. Test case: `tag INDEX t/` or `tag INDEX b/`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"iuhiah"},"content":"      **Note:** INDEX should be a valid index of a visitor in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Tag cannot be empty!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"iuhiah"},"content":"  14. Other incorrect tag commands to try: `Tag`, `tagx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"iuhiah"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"iuhiah"},"content":"### Untagging a visitor","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"iuhiah"},"content":"1. Untagging a visitor\u0027s tag/booking tag who is currently in the addressbook while all visitors are being shown.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"iuhiah"},"content":"   1. Prerequisites: List all visitors using the `list` command. At least one visitor in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"iuhiah"},"content":"   2. Test case: `untag 1 t/Example`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"iuhiah"},"content":"      Expected: First contact is untagged. Contact List Card is selected in GUI. Contact Details of the untagged visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"iuhiah"},"content":"      **Note:** First contact should have the tag `Example`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Untag successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003e[Example] has been removed from the contact\u0027s tag list!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"iuhiah"},"content":"   3. Test case: `untag 1 t/Example`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"iuhiah"},"content":"      **Note:** Perform the previous test case first. First contact should not have the tag `Example`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: Untag failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eContact does not have the tag [Example]!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"iuhiah"},"content":"   4. Test case: `untag 1 b/Example from/2023-10-01 to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"iuhiah"},"content":"      Expected: First contact is untagged. Contact List Card is selected in GUI. Contact Details of the untagged visitor are shown in Details Panel in GUI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Untag successful! (๑˘︶˘๑)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample 01 Oct 23 to 31 Oct 23 has been removed from the contact\u0027s tag list!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"iuhiah"},"content":"   5. Test case: `untag 1 b/Example from/2023-10-01 to/2023-10-31`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"iuhiah"},"content":"      **Note:** Perform the previous test case first. First contact should not have the booking tag `Example from/2023-10-01 to/2023-10-31`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExpected: Untag failed! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eContact does not have the booking tag Example 01 Oct 23 to 31 Oct 23!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"iuhiah"},"content":"   6. Test case: `untag 1 t/`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is untagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Tag cannot be empty!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"iuhiah"},"content":"   7. Test case: `untag 1 b/`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is untagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Booking tags should be of the format PROPERTY from/START_DATE to/END_DATE where START_DATE and END_DATE are in the format yyyy-MM-dd.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eThe START_DATE must be before END_DATE.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003ePROPERTY must have 1 to 170 characters.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"iuhiah"},"content":"   8. Test case: `untag 0` or `untag`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"iuhiah"},"content":"      Expected: No visitor is untagged. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Invalid command format! ヾ( ･`⌓´･)ﾉﾞ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003euntag: Removes tag from the contact identified by the index number in the displayed person list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eParameters: INDEX (must be a positive integer) t/TAG","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOR b/PROPERTY from/START_DATE to/END_DATE","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample: untag 1 t/friends","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eExample: untag 1 b/property from/2023-10-01 to/2023-10-31","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"iuhiah"},"content":"   9. Other incorrect untag commands to try: `Untag`, `untagx`, `...`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"iuhiah"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"iuhiah"},"content":"      \u003cbr\u003eOutput: Unknown command! (ｏ´_｀ｏ)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"monobeartae"},"content":"1. Dealing with missing data files","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"monobeartae"},"content":"   1. Navigate to the directory containing the .jar file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"monobeartae"},"content":"   2. Navigate into the \u0027data/\u0027 folder and locate the data file \u0027addressbook.json\u0027","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"monobeartae"},"content":"   3. Delete the file \u0027addressbook.json\u0027","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"monobeartae"},"content":"   4. Attempt to run the app. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"monobeartae"},"content":"      Expected: App populates address book with default list of contacts","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"monobeartae"},"content":"2. Dealing with corrupted data files","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"monobeartae"},"content":"   1. Navigate to the directory containing the .jar file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"monobeartae"},"content":"   2. Navigate into the \u0027data/\u0027 folder and locate the data file \u0027addressbook.json\u0027","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"monobeartae"},"content":"   3. Open the file and delete a semicolon (\u0027;\u0027), or add random characters such as \u0027/\u0027 anywhere in the file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"monobeartae"},"content":"   4. Attempt to run the app. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"monobeartae"},"content":"      Expected: App starts up using an empty address book.","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"varsha13152":76,"TanXingZhong":90,"iuhiah":200,"monobeartae":148,"Reshiro":28,"-":512}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# InnSync User Guide","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Welcome to the InnSync User Guide","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Welcome to the **InnSync User Guide** – your essential companion for managing contacts and visitor information","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"efficiently. Designed specifically for AirBnB owners.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"In this comprehensive user guide, we will take you to experience a full journey with InnSync step by step.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"[1. Introduction](#1-introduction)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Reshiro"},"content":"- [1.1 What Is InnSync](#1-1-what-is-innsync)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"- [1.2 User Proficiency and Expectations](#1-2-user-proficiency-and-expectations)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"- [1.3 Why This Guide Matters](#1-3-why-this-guide-matters)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Reshiro"},"content":"[2. How to Use This User Guide](#2-how-to-use-this-user-guide)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"- [2.1 Navigating the Document](#2-1-navigating-the-document)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"- [2.2 Sections](#2-2-sections)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Reshiro"},"content":"[3. Quick Start](#3-quick-start)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"- [3.1 Installation](#3-1-installation)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"- [3.2 Graphical User Interface Layout](#3-2-graphical-user-interface-layout)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  - [3.2.1 User Interface Overview](#3-2-1-user-interface-overview)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Reshiro"},"content":"  - [3.2.2 Other UI Components](#3-2-2-other-ui-components)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Reshiro"},"content":"- [3.3 How to Use InnSync Features](#3-3-how-to-use-innsync-features)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  - [3.3.1 Parameter Prefixes](#3-3-1-parameter-prefixes)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  - [3.3.2 Parameters](#3-3-2-parameters)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  - [3.3.3 Command Format](#3-3-3-command-format)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"[4. Features](#4-features)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"- [4.1 Command Summary](#4-1-command-summary)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Reshiro"},"content":"- [4.2 Features Related to Visitors](#4-2-features-related-to-visitors)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Reshiro"},"content":"  - [4.2.1 Adding a Visitor](#4-2-1-adding-a-visitor-add)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Reshiro"},"content":"  - [4.2.2 Editing a Visitor](#4-2-2-editing-a-visitor-edit)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Reshiro"},"content":"  - [4.2.3 Listing All Visitors](#4-2-3-listing-all-visitors-list)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Reshiro"},"content":"  - [4.2.4 Deleting a Visitor](#4-2-4-deleting-a-visitor-delete)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Reshiro"},"content":"- [4.3 Features Related to Starring Visitors](#4-3-features-related-to-starring-visitors)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Reshiro"},"content":"  - [4.3.1 Starring a Visitor](#4-3-1-starring-a-visitor-star)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Reshiro"},"content":"  - [4.3.2 Unstarring a Visitor](#4-3-2-unstarring-a-visitor-unstar)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Reshiro"},"content":"  - [4.3.3 Listing All Starred Visitors](#4-3-3-listing-all-starred-visitors-liststar)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Reshiro"},"content":"- [4.4 Features Related to Tagging Visitors](#4-4-features-related-to-tagging-visitors)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Reshiro"},"content":"  - [4.4.1 Adding a Booking Tag](#4-4-1-adding-a-booking-tag-tag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Reshiro"},"content":"  - [4.4.2 Adding a Tag](#4-4-2-adding-a-tag-tag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Reshiro"},"content":"  - [4.4.3 Untagging a Booking Tag](#4-4-3-untagging-a-booking-tag-untag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Reshiro"},"content":"  - [4.4.4 Untagging a Tag](#4-4-4-untagging-a-tag-untag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Reshiro"},"content":"- [4.5 Features Related to Requests](#4-5-features-related-to-requests)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Reshiro"},"content":"  - [4.5.1 Adding a Request](#4-5-1-adding-a-request-req)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Reshiro"},"content":"  - [4.5.2 Marking a Request](#4-5-2-marking-a-request-mark)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Reshiro"},"content":"  - [4.5.3 Unmarking a Request](#4-5-3-unmarking-a-request-unmark)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Reshiro"},"content":"  - [4.5.4 Deleting a Request](#4-5-4-deleting-a-request-deletereq)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Reshiro"},"content":"- [4.6 Adding a Memo to a Visitor](#4-6-adding-a-memo-to-a-visitor-memo)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Reshiro"},"content":"- [4.7 Features Related to Finding](#4-7-features-related-to-finding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Reshiro"},"content":"  - [4.7.1 Locating Visitors](#4-7-1-locating-visitors-find)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Reshiro"},"content":"- [4.8 General Features](#4-8-general-features)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Reshiro"},"content":"  - [4.8.1 Clearing All Visitors](#4-8-1-clearing-all-visitors-clear)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Reshiro"},"content":"  - [4.8.2 Exiting the Program](#4-8-2-exiting-the-program-exit)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Reshiro"},"content":"  - [4.8.3 Undoing the Last Command](#4-8-3-undoing-the-last-command-undo)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Reshiro"},"content":"  - [4.8.4 Getting Help](#4-8-4-getting-help-help)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Reshiro"},"content":"- [4.9 Saving the Data](#4-9-saving-the-data)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Reshiro"},"content":"- [4.10 Editing the Data File](#4-10-editing-the-data-file)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"[5. FAQ](#5-faq)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Reshiro"},"content":"[6. Known Issues](#6-known-issues)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"[7. Glossary](#7-glossary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"## 1. Introduction","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Reshiro"},"content":"### 1.1 What Is InnSync","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"InnSync is a desktop application designed specifically for managing contacts for AirBnB owners,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"**Graphical User Interface** (GUI). If you can type fast, InnSync can get your contact management","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"Key Features:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Contact \u0026 Visitor Management: Add, edit, and delete contacts with ease.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Rapid Command Execution: Quickly execute commands using a straightforward CLI.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Automatic Data Persistence: Your changes are saved automatically to ensure all visitor details remain current.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"### 1.2 User Proficiency and Expectations","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Technical Skills: InnSync is designed for users with basic command line experience and familiarity with","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"  file navigation.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Efficiency: Built for AirBnB owners, the tool prioritizes quick, streamlined workflows to manage visitor and","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"  contact information.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"* User-Friendly: Whether you\u0027re new to command line tools or an experienced user, InnSync’s design caters","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  to a broad range of technical proficiencies.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"### 1.3 Why This Guide Matters","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"This guide is crafted to help you fully leverage InnSync’s features. As an AirBnB owner, managing visitor details","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"quickly and accurately is vital. This guide provides clear instructions, examples, and troubleshooting tips so","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"you can optimize your workflow and focus on delivering a great visitor experience.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Reshiro"},"content":"## 2. How to Use This User Guide","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"This section explains how to navigate the guide and locate the information you need.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"### 2.1 Navigating the Document:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"* __Table of Contents:__ Use the Table of Contents at the start to jump directly to sections relevant to your needs.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"* __Section Organization:__ The guide is divided into clear sections such as Introduction, Quick Start, Features, FAQ, Known Issues, and Command Summary.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"### 2.2 Sections:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"* [Installation](#3-1-installation): Step-by-step setup instructions for InnSync.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"* [Features](#4-features): Detailed breakdown of each command with usage examples.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* [FAQ \u0026 Known Issues](#5-faq): Solutions to common questions and troubleshooting tips.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* [Command Summary](#4-1-command-summary): A quick-reference table for all available commands.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"First-time users are strongly encouraged to read the Quick Start section before beginning to use InnSync.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Reshiro"},"content":"## 3. Quick Start","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"### 3.1 Installation","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed on your Computer.\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103T-T16-2/tp/releases).","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for InnSync.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"4. Open your command terminal, depending on what OS you use follow the instruction below.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Windows: Tutorial on how to open a terminal [here.](https://learn.microsoft.com/en-us/windows/terminal/faq)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* MacOS:Tutorial on how to open a terminal [here.](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Linux: Tutorial on how to open a terminal [here.](https://ubuntu.com/tutorials/command-line-for-beginners#1-overview)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"5.  Navigate to the folder by using `cd` into the folder you put the jar file in, and use the `java -jar innsync.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"6. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TanXingZhong"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"7. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* `add n/John Doe p/+65 98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Reshiro"},"content":"8. Refer to the [Features](#4-features) below for details of each command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"iuhiah"},"content":"9. If you are unsure about specific technical terms used in this guide, refer to the [Glossary](#7-glossary) section for definitions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"### 3.2 Graphical User Interface Layout:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### 3.2.1 User Interface Overview:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"![UserInterfaceOverview.png](images/UserInterfaceOverview.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* __Menu Box:__ The menu bar, located at the top of the interface, provides access to various functions and features within InnSync.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* __Command Box:__ This section allows users to enter commands for InnSync to execute.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* __Result Box:__ The box shows the results of executed commands at the interface.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* __Visitor List Panel:__ This panel visually represents the list of visitor in InnSync.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"* __Visitor List Card:__ Within the Visitor List Panel, each visitor is depicted with their details displayed in card format.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"* __Visitor Detail Panel:__ This panel visually represents the selected visitor in InnSync.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"#### 3.2.2 Other UI Components:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![OtherUIComponents.png](images/OtherUIComponents.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"* __Index:__ This component displays the position of each visitor in the Visitor List Panel.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"* __Visitor Name:__ The Name is displayed in both the Visitor Detail and Visitor List Panel, which represent the name of the visitor.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"* __Visitor Phone Number:__ The contact number associated with the visitor.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* __Visitor Address:__ The physical location or residence of the visitor, which may be used for record-keeping.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"* __Visitor Email:__ The email address of the visitor.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"* __Star:__ The visitor was starred.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"* __Memo:__ A free-text field for storing additional notes or important details about the visitor.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"* __Tag:__ Label assigned to a visitor to tag them based on anything.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"* __Booking Tag:__ Labels related to the visitor\u0027s booking, the dates are represented with ```dd-MMM-yy format```, but inputted with ```yyyy-MM-dd```.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* __Request:__ Special accommodations or preferences requested by the visitor where the user records it.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"* __Mark:__ Denote the completion of said request by the user.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"* __Unmark:__ Denote the request as not completed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"* __Selected Visitor:__ Highlighted in pink, this component indicates the selected Visitor Detail Panel for viewing.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Reshiro"},"content":"### 3.3 How to Use InnSync Features:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"InnSync operates mainly through CLI commands. Before exploring to the specific features in details under","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"the feature section. Let\u0027s try to familiarize ourselves with the basic components and formats to execute a command.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"varsha13152"},"content":"\u003e 💡**Tip:** All the command words are case-sensitive!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003e * `add` is different from `Add`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"#### 3.3.1 Parameter Prefixes:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"In InnSync, a parameter prefix acts as a delimiter for specifying different types of parameters in commands.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"TanXingZhong"},"content":"Here\u0027s a reference table for all parameter prefixes and their corresponding parameters:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"| Parameter Prefix | Corresponding Parameter  |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"|------------------|--------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"| `n/`             | `NAME`                   |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"| `p/`             | `PHONE`                  |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"| `e/`             | `EMAIL`                  |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"| `a/`             | `ADDRESS`                |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"| `b/`             | `BOOKING_TAG`            |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"| `bp/`            | `BOOKING_PROPERTY`       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"| `bd/`            | `BOOKING_DATE`           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"| `t/`             | `TAG`                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"| `r/`             | `REQUEST`                |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"| `r/`             | `REQUEST_INDEX`          |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"| `m/`             | `MEMO`                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"#### 3.3.2 Parameters:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"In InnSync, a parameter represents a placeholder where users input data.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Parameters typically follow immediately after their corresponding Parameter Prefixes.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Essentially, they are to be supplied by the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"varsha13152"},"content":"📌**Note:** All user inputs, including parameters, will be trimmed (all leading and trailing whitespaces will be ignored).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"| Parameter          | Prefix | Description|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"varsha13152"},"content":"|--------------------|--------||","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"iuhiah"},"content":"| `NAME`             | `n/`   | Specifies the name of a visitor.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cul\u003e\u003c/li\u003e\u003cli\u003eNames cannot be empty.\u003c/li\u003e\u003cli\u003eNames cannot exceed 170 characters.\u003c/li\u003e\u003cli\u003eNames with only whitespace are not allowed.\u003c/li\u003e\u003cli\u003eIn this system, names can contain any characters except ```$```, including prefixes like ```a/``` or ```e/```. However, names containing prefixes, such as ```murthu a/p vara``` must be preceded by a ```$``` to avoid the characters ```a/p``` from being interpreted as a prefix.\u003cli\u003e **For example:**\u003cul\u003e\u003cli\u003e```n/Muthu a/p vara``` → Name: Muthu, Address: p vara \u003cli\u003e```n/Muthu $a/p vara``` → Name: Muthu a/p vara (entire string is parsed as the name, and ```$a/p``` is ignored as a prefix) \u003cli\u003eThe ```$``` is used to prevent the parser from treating the following string as a prefix — it tells the parser \"don\u0027t treat this as a field, treat it as part of the value.\"\u003c/ul\u003e\u003cli\u003eYou are unable to add names containing ```$```, as it is used for the purpose mentioned above. All ```$``` characters found in name parameters will be excluded from the contact\u0027s name.\u003c/li\u003e\u003cbr\u003e\u003cli\u003eUsed in Commands: `add`, `edit`, and `find`\u003c/li\u003e |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"monobeartae"},"content":"| `PHONE`            | `p/`   | Specifies the phone number of a visitor.\u003cbr\u003e\u003cbr\u003e**Requirements:** \u003cul\u003e\u003cli\u003ePhone numbers should be in the format `+[COUNTRY_CODE] [NUMBER]`.\u003c/li\u003e\u003cli\u003e`COUNTRY_CODE` should be a valid country code.\u003c/li\u003e\u003cli\u003e`COUNTRY_CODE` should be 1-3 digits long.\u003c/li\u003e\u003cli\u003e`NUMBER` should be 7-15 digits long.\u003c/li\u003e\u003cli\u003eDigits in `NUMBER` can contain at most one space between them. i.e. +65 8822 3795, +82 10 1234 5678, +1 415 555 2671, ...\u003c/li\u003e\u003cli\u003ePhone number cannot be empty.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, and `find`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"monobeartae"},"content":"| `EMAIL`            | `e/`   | Specifies the email of a visitor.\u003cbr\u003e\u003cbr\u003e**Requirements:** \u003cul\u003e\u003cli\u003eEmails should be of the format `local-part@domain`.\u003c/li\u003e\u003cli\u003eEmails cannot be empty.\u003c/li\u003e\u003cli\u003eLocal-part should contain only alphanumeric characters and special characters.\u003c/li\u003e\u003cli\u003eDomain must follow standard domain name rules with proper labels separated by periods.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, and `find`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"monobeartae"},"content":"| `ADDRESS`          | `a/`   | Specifies the address of a visitor.\u003cbr\u003e\u003cbr\u003e**Requirements:**\u003cul\u003e\u003cli\u003eAddresses can take any values.\u003c/li\u003e\u003cli\u003eAddresses cannot be empty.\u003c/li\u003e\u003cli\u003eAddresses cannot exceed 500 characters.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, and `find`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"monobeartae"},"content":"| `BOOKING_TAG`      | `b/`   | Specifies the booking tag of a visitor.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eBooking tags must be in the format: `PROPERTY from/START_DATE to/END_DATE`.\u003c/li\u003e\u003cli\u003e`PROPERTY` cannot be empty.\u003c/li\u003e\u003cli\u003e`PROPERTY` cannot exceed 170 characters.\u003c/li\u003e\u003cli\u003e`START_DATE` and `END_DATE` cannot be empty.\u003c/li\u003e\u003cli\u003e`START_DATE` and `END_DATE` must follow the format `yyyy-MM-dd`.\u003c/li\u003e\u003cli\u003e`START_DATE` and `END_DATE` must be valid dates.\u003c/li\u003e\u003cli\u003e`START_DATE` must be before `END_DATE`.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, `tag` and `untag`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"monobeartae"},"content":"| `BOOKING_PROPERTY` | `bp/`  | Specifies the booking property of a visitor for the feature ```find```.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eBooking properties can take any values.\u003c/li\u003e\u003cli\u003eBooking property cannot be empty.\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `find`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"monobeartae"},"content":"| `BOOKING_DATE`     | `bd/`  | Specifies the booking date of a visitor for the feature ```find```.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eBooking dates must be in the format `yyyy-MM-dd`.\u003c/li\u003e\u003cli\u003eBooking date cannot be empty.\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `find`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"monobeartae"},"content":"| `TAG`              | `t/`   | Specifies the tag name of a visitor.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eTags can take any values.\u003c/li\u003e\u003cli\u003eTags cannot be empty.\u003c/li\u003e\u003cli\u003eTags cannot exceed 170 characters.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, `tag`, `untag` and `find`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"monobeartae"},"content":"| `REQUEST`          | `r/`   | Specifies the request of a visitor.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eRequests can take any values.\u003c/li\u003e\u003cli\u003eRequests cannot be empty.\u003c/li\u003e\u003cli\u003eRequests cannot exceed 170 characters.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, `req`, and `deletereq`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"monobeartae"},"content":"| `REQUEST_INDEX`    | `r/`   | Refers to the index number shown in the Request panel.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eMust be a positive integer.\u003c/li\u003e\u003cli\u003eThe value must fall within the valid range (1 to number of requests in the list).\u003c/li\u003e\u003cli\u003eRequest index must also be less than or equal to ```2147483647```\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `mark` and `unmark`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"iuhiah"},"content":"| `MEMO`             | `m/`   | Specifies the memo of a visitor.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eMemos can take any values.\u003c/li\u003e\u003cli\u003eMemos cannot not exceed 500 characters.\u003c/li\u003e\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `add`, `edit`, `memo` and `find`|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"monobeartae"},"content":"| `INDEX`            | N/A    | Refers to the index number shown in the List Panel.\u003cbr\u003e\u003cbr\u003e **Requirements:** \u003cul\u003e\u003cli\u003eMust be a positive integer.\u003c/li\u003e\u003cli\u003eThe value must fall within the valid range (1 to number of visitors in the list).\u003c/li\u003e\u003cli\u003eIndex must also be less than or equal to ```2147483647```.\u003c/ul\u003e\u003cbr\u003eUsed in Commands: `edit`, `delete`, `req`, `deletereq`, `memo`, `tag`, `untag`, `mark`, `unmark`, `star` and `unstar`|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"#### 3.3.3 Command Format:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"To understand how a full command is interpreted, we will utilise the following example.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"TanXingZhong"},"content":"**Example:** `add n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG...] [b/BOOKING_TAG...] [r/REQUEST...]`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"varsha13152"},"content":"\u003e💡**Tip:** You can add a visitor without specifying a tag, booking tag and request and that is why it has a bracket around it!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Structure of Command:**\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"|         | Component        | Description                                              |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"iuhiah"},"content":"|---------|------------------|----------------------------------------------------------|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"| `add`   | Command          | Executes Add Command to add a visitor.                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"iuhiah"},"content":"| `n/`    | Parameter Prefix | Unique prefix to distinguish `NAME` from other prefixes. |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"| `NAME`  | Parameter        | Represents placeholder for name of the visitor.          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"varsha13152"},"content":"📌**General Notes about InnSync:**\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003e **A command can be categorized into three formats:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003e 1. `COMMAND` + `INDEX`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003e 2. `COMMAND` + `PARAMETER_PREFIX` + `PARAMETER`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003e 3. `COMMAND` + `INDEX` + `PARAMETER_PREFIX` + `PARAMETER`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"varsha13152"},"content":"📌**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"iuhiah"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"iuhiah"},"content":"* Items with `...`​ after them can be used multiple times (including zero).\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"e.g. `[t/TAG...]` can be used as ` `\u0026nbsp;(i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, then `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"## 4. Features","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"## 4.1 Command Summary","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"varsha13152"},"content":"| Action                    | Format and Examples                                                                                                                                                                                       |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"TanXingZhong"},"content":"|---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"TanXingZhong"},"content":"| **Add Visitor**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG...] [b/BOOKING_TAG...] [r/REQUEST...] [m/MEMO]` \u003cbr\u003e e.g., `add n/James Ho p/+82 22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend` |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"TanXingZhong"},"content":"| **Edit Visitor**          | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG...] [b/BOOKING_TAG...] [r/REQUEST...] [m/MEMO]`​ \u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                 |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"| **List Visitor**          | `list`                                                                                                                                                                                                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"| **Delete Visitor**        | `delete INDEX` \u003cbr\u003e e.g., `delete 3`                                                                                                                                                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"| **Star Visitor**          | `star INDEX` \u003cbr\u003e e.g., `star 1`                                                                                                                                                                          |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"| **Unstar Visitor**        | `unstar INDEX` \u003cbr\u003e e.g., `unstar 1`                                                                                                                                                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"| **List Starred Visitors** | `liststar`                                                                                                                                                                                                |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TanXingZhong"},"content":"| **Tag Visitor**           | `tag INDEX t/TAG [t/TAG...]​` \u003cbr\u003e e.g., `tag 1 t/friend` or \u003cbr\u003e `tag INDEX b/PROPERTY from/yyyy-MM-dd to/yyyy-MM-dd [b/BOOKING_TAG...]​` \u003cbr\u003e e.g., `tag 1 b/Hotel from/2025-10-10 to/2025-10-11`       |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"| **Untag Visitor**         | `untag INDEX t/TAG` \u003cbr\u003e e.g., `untag 1 t/friend` or \u003cbr\u003e `untag INDEX b/PROPERTY from/START_DATE to/END_DATE` \u003cbr\u003e e.g., `untag 1 b/Hotel from/2025-10-10 to/2025-10-11`                                 |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"TanXingZhong"},"content":"| **Add Request**           | `req INDEX r/REQUEST [r/REQUEST...​]` \u003cbr\u003e e.g., `req 1 r/a request`                                                                                                                                      |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"| **Mark Request**          | `mark INDEX r/REQUEST_INDEX` \u003cbr\u003e e.g., `mark 1 r/1`                                                                                                                                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"| **Unmark Request**        | `unmark INDEX r/REQUEST_INDEX` \u003cbr\u003e e.g., `unmark 1 r/1`                                                                                                                                                  |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| **Delete Request**        | `deletereq INDEX r/REQUEST_INDEX` \u003cbr\u003e e.g. `deletereq 1 r/1`                                                                                                                                             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"TanXingZhong"},"content":"| **Memo Visitor**          | `memo INDEX m/[MEMO]` \u003cbr\u003e e.g., `memo 1 m/cool`                                                                                                                                                          |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"varsha13152"},"content":"| **Find**                  | `find [n/KEYWORD...] [p/KEYWORD...] [e/KEYWORD...] [a/KEYWORD] [t/KEYWORD...] [bp/KEYWORD...] [bd/KEYWORD...] [m/KEYWORD...]e.g., find n/john n/bob p/879294`                                             |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"| **Clear**                 | `clear`                                                                                                                                                                                                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"| **Exit**                  | `exit`                                                                                                                                                                                                    |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"| **Undo**                  | `undo`                                                                                                                                                                                                    |","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| **Help**                  | `help`                                                                                                                                                                                                    |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Reshiro"},"content":"## 4.2 Features Related to Visitors","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"monobeartae"},"content":"Visitors are uniquely identified by a combination of their **email** and **phone number**. Duplicate visitor contact details are not allowed in the address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"iuhiah"},"content":"Suppose this contact exists in the address book:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"monobeartae"},"content":"* Person A - Name: `John Doe`, Email: `john@example.com`, Phone: `+65 8888 8888`, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"iuhiah"},"content":"Then, suppose we would like to add these contacts to the address book:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"monobeartae"},"content":"* Person B - Name: `John Lee`, Email: `john@example.com`, Phone: `+65 8888 8888`, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"monobeartae"},"content":"* Person C - Name: `John Lee`, Email: `johnlee@example.com`, Phone: `+65 8888 8888`, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"monobeartae"},"content":"* Person D - Name: `John Doe`, Email: `john@example.com`, Phone: `+65 9999 9999`, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"monobeartae"},"content":"* Person E - Name: `John Lee`, Email: `johnlee@example.com`, Phone: `+65 9999 9999`, ...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"monobeartae"},"content":"When the program checks for duplicates,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"monobeartae"},"content":"* Person B is rejected - the email and phone are identical!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"monobeartae"},"content":"* Person C is accepted - the phone may be the same, but the email is different!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"monobeartae"},"content":"* Person D is accepted - the email may be the same, but the phone is different!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"monobeartae"},"content":"* Person E is accepted - both the email and phone are different!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"monobeartae"},"content":"📌**Note:** Two phone numbers are considered identical as long as they contain the same country code, and their numbers have the same digits in the same order. The position and number of whitespaces are not considered. i.e. `+65 8888 8888` is considered the same as `+65 88888888`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"### 4.2.1 Adding a visitor: `add`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"Adds a visitor to the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"TanXingZhong"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG...] [b/BOOKING_TAG...] [r/REQUEST...] [m/MEMO]`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"TanXingZhong"},"content":"\u003cbox type\u003d\"Tip\" seamless\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"varsha13152"},"content":"💡**Tip:** A visitor can have any number of tags or requests (including 0) and at most one memo.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"varsha13152"},"content":"💡**Tip:** If a visitor\u0027s name contains a prefix e.g. ```/```, escape the prefix with ```$```.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"e.g. To add a visitor with the name \"murthu a/p\", use the command `add n/murthu $a/p [...]`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"varsha13152"},"content":"📌**Notes:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"varsha13152"},"content":"- Newly added visitors will be sorted lexicographically among visitors that are not starred","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"varsha13152"},"content":"- Each visitor must have a unique email **or** phone number. e.g. You can\u0027t add two visitors with both `alice@gmail.com` *and* `+65 87929460`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"* `add n/John Doe p/+65 98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/+65 1234567 t/criminal t/offence r/cool r/beans m/handsome`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Reshiro"},"content":"### 4.2.2 Editing a Visitor : `edit`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"Edits an existing visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BOOKING_TAG...]​ [t/TAG...]​ [r/REQUEST...] [m/MEMO]`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"* Edits the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the visitor will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"* You can remove all the visitor’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"* You can remove all the visitor’s booking tags by typing `b/` without specifying any tags after it.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"* You can remove all the visitor’s requests by typing `r/` without specifying any booking tags after it.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"* You can remove the visitor’s memo by typing `m/` without specifying any memo after it.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"TanXingZhong"},"content":"\u003cbox type\u003d\"Tip\" seamless\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"varsha13152"},"content":"💡**Tip:** To edit a visitor\u0027s name to contain a prefix, escape the prefix with ```$```.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"e.g. To change the name of the first contact in the list to \"murthu a/p\", use the command `edit 1 n/murthu $a/p [...]`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"*  `edit 1 p/+65 91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st visitor to be `+65 91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd visitor to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower b/` Edits the name of the 2nd visitor to be `Betsy Crower` and clears all existing booking tags.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower r/` Edits the name of the 2nd visitor to be `Betsy Crower` and clears all existing requests.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower m/` Edits the name of the 2nd visitor to be `Betsy Crower` and clears memo.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Reshiro"},"content":"### 4.2.3 Listing All Visitors : `list`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"iuhiah"},"content":"Shows a list of all visitors in the address book. Starred visitors will be shown first, followed by unstarred visitors. Both groups will be sorted lexicographically within their respective groups.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"varsha13152"},"content":"📌**Note:** Any additional text or parameters after the `list` command will be ignored.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"varsha13152"},"content":"💡**Tip:** Listing without any visitors added will recommend you to add some.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Reshiro"},"content":"### 4.2.4 Deleting a Visitor : `delete`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"Deletes the specified visitor from the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"* Deletes the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st visitor in the results of the `find` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Reshiro"},"content":"## 4.3 Features Related to Starring Visitors","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"iuhiah"},"content":"Starring a visitor allows you to mark them as important. Starred visitors will be shown first when listing all visitors.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Reshiro"},"content":"### 4.3.1 Starring a Visitor : `star`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"Stars a visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"Format: `star INDEX`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"iuhiah"},"content":"💡**Tip**: Use this command to keep track of your favourite or important visitors!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Reshiro"},"content":"### 4.3.2 Unstarring a Visitor : `unstar`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"iuhiah"},"content":"Unstars a starred visitor in the address book.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"Format: `unstar INDEX`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Reshiro"},"content":"### 4.3.3 Listing All Starred Visitors : `liststar`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"iuhiah"},"content":"Shows a list of only all starred visitors in the address book.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"Format: `liststar`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Reshiro"},"content":"## 4.4 Features Related to Tagging Visitors","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Reshiro"},"content":"### 4.4.1 Adding a Booking Tag : `tag`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"Adds a booking tag into the visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"Format: `tag INDEX b/PROPERTY from/START_DATE to/END_DATE`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"* Adds the booking tag to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"* The date format has to match `yyyy-MM-dd` exactly.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"TanXingZhong"},"content":"* If a booking tag has dates that overlap with any existing booking tags the visitor already has, the new booking tag will be rejected.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"* `tag 1 b/Hotel from/2025-10-10 to/2025-10-11` Adds the booking tag to the 1st visitor on the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"* `tag 1 b/Hotel from/2025-10-10 to/2025-10-11` Adding the same booking tag again will be rejected due to overlapping dates.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Reshiro"},"content":"### 4.4.2 Adding a Tag : `tag`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"Adds a tag into the visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"Format: `tag INDEX t/TAG`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"* Adds the tag to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"* When adding a tag that does not exist in the visitor, the tag will be appended to the previous tags.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"* When trying to add a tag that already exists in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"varsha13152"},"content":"📌**Note:** Tags are case-sensitive, so ```friend``` is different from ```Friend```.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"* `tag 1 t/friend` Adds the tag to the 1st visitor on the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"* `tag 1 t/friend` Adding the same tag again will be rejected due to duplicate tags.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Reshiro"},"content":"### 4.4.3 Untagging a Booking Tag : `untag`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"Removes a booking tag on the 1st visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"Format: `untag INDEX b/PROPERTY from/START_DATE to/END_DATE`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"* Removes a booking tag to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"* The date format has to match `yyyy-MM-dd` exactly.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"* When removing a booking tag that exists in the visitor, the booking tag will be removed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"* When trying to remove a booking tag that does not exist in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"iuhiah"},"content":"💡**Tip:** If you want to remove all booking tags from a visitor, use `edit INDEX b/` where INDEX is the index of the visitor!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"* `untag 1 b/Hotel from/2025-10-10 to/2025-10-11` Removes the booking tag with matching booking tag on the 1st visitor in the list if they exist.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"* `untag 1 b/Hotel from/2025-10-10 to/2025-10-11` After running example above this line, it will throw an error saying this booking tag does not exist.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Reshiro"},"content":"### 4.4.4 Untagging a Tag : `untag`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"Removes a tag on the 1st visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"Format: `untag INDEX t/TAG`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"* Removes a tag to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"* When removing a tag that exists in the visitor, the tag will be removed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"* When trying to remove a tag that does not exist in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"iuhiah"},"content":"💡**Tip:** If you want to remove all tags from a visitor, use `edit INDEX t/` where INDEX is the index of the visitor!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"* `untag 1 t/friend` Removes the tag with matching tag on the 1st visitor in the list if they exist.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"* `untag 1 t/friend` After running example above this line, it will throw an error saying this tag does not exist.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Reshiro"},"content":"## 4.5 Features Related to Requests","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"iuhiah"},"content":"Adds a request to the visitor in the address book. Requests are used to keep track of what the visitor wants or needs. Each request can be marked as completed or incomplete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Reshiro"},"content":"### 4.5.1 Adding a Request: `req`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"Adds a request into the visitor in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"Format: `req INDEX r/REQUEST`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"* Adds the request to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor list. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"* When adding a request that does not exist in the visitor, the request will be appended to the previous requests.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"* When trying to add a request that already exists in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"varsha13152"},"content":"📌**Note:** Requests are case-sensitive, so ```want banana``` is different from ```want Banana```.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"TanXingZhong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"* `req 1 r/Want banana` Adds the request to the 1st visitor on the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"* `req 1 r/Want banana` Will be rejected due to duplicating request own by this visitor.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Reshiro"},"content":"### 4.5.2 Marking a Request: `mark`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"Marks a request as completed for a specific visitor in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"Format: `mark INDEX r/REQUEST_INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"* Marks the request specified by `REQUEST_INDEX` for the visitor at `INDEX` as completed. The index refers to the index number shown in the displayed visitor list. The `INDEX` **must be a positive integer**. The request index refers to the index number of the request in the visitor\u0027s request list. The `REQUEST_INDEX` **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"* When marking a request that exists in the visitor that is not yet marked, the request will be marked as completed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"* When marking a request that does not exist in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"* When trying to mark a request that is already marked, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"* `mark 1 r/1` Marks the first request of the first visitor on the list as completed if it exists.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"iuhiah"},"content":"* `mark 1 r/1` Marking the same request again will be rejected.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Reshiro"},"content":"### 4.5.3 Unmarking a Request: `unmark`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"Unmarks a previously marked request for a specific visitor in the address book.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"Format: `unmark INDEX r/REQUEST_INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"* Unmarks the request specified by `REQUEST_INDEX` for the visitor at `INDEX` as not completed. The index refers to the index number shown in the displayed visitor list. The `INDEX` **must be a positive integer**. The request index refers to the index number of the request in the visitor\u0027s request list. The `REQUEST_INDEX` **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"* When unmarking a request that exists in the visitor that is marked, the request will be unmarked as not completed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"* When unmarking a request that does not exist in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"* When trying to unmark a request that is not marked, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"* `unmark 1 r/1` Unmarks the first request of the first visitor on the list as not completed if it exists.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"iuhiah"},"content":"* `unmark 1 r/1` Unmarking the same request again will be rejected.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Reshiro"},"content":"### 4.5.4 Deleting a Request: `deletereq`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"Deletes a request from a specific visitor in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"Format: `deletereq INDEX r/REQUEST_INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"* Deletes the request specified by `REQUEST_INDEX` for the visitor at `INDEX`. The index refers to the index number shown in the displayed visitor list. The `INDEX` **must be a positive integer**. The request index refers to the index number of the request in the visitor\u0027s request list. The `REQUEST_INDEX` **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"* When deleting a request that exists in the visitor, the request will be removed from the visitor\u0027s request list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"* When deleting a request that does not exist in the visitor, the command will be rejected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"* `deletereq 1 r/1` Deletes the first request of the first visitor on the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"Reshiro"},"content":"* `deletereq 1 r/1` If the visitor has no more requests, this command will be rejected.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Reshiro"},"content":"## 4.6 Adding a Memo to a Visitor : `memo`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"Adds a memo into the visitor in the address book.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"Format: `memo INDEX m/MEMO`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"* Adds a memo to the visitor specified by `INDEX`. The index refers to the index number shown in the displayed visitor LIST. The index **must be a positive integer**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"* All the fields must be provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"* This command will overwrite the existing memo of the visitor if it exists.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"* `memo 1 m/recurring customer` Overwrites the memo of the 1st visitor on the list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"iuhiah"},"content":"\u003e 💡**Tip:** You can remove a memo with `memo INDEX m/` instead of using the `edit` command!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"Reshiro"},"content":"## 4.7 Features Related to Finding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"Reshiro"},"content":"### 4.7.1 Locating Visitors: `find`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"Allows users to search for visitors whose details match the specified keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"Format: `find [n/KEYWORD...] [p/KEYWORD...] [e/KEYWORD...] [a/KEYWORD...] [bp/KEYWORD...]  [bd/DATE...][t/KEYWORD...] [m/KEYWORD...]`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"* At least one prefix with a keyword must be provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"* Searches are case-insensitive (e.g., `n/hans` will match `Hans`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"* Searches match by containment (e.g., `n/han` will match `Hans`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"* When multiple keywords are provided for a single field type (e.g., `n/john n/doe`), visitors matching ANY of those keywords will be returned.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"* When multiple field types are specified (e.g., `n/john p/9123`), visitors matching ANY of the specified fields will be returned.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"iuhiah"},"content":"* Each keyword is treated as a complete phrase. (e.g., `n/john doe` will not match `john` or `doe` separately and will only match `john doe` as a whole).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"#### Search Modes:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"| Prefix | Field            | What You’re Searching      | What to Type (Format)                                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"varsha13152"},"content":"|:------:|------------------|----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"iuhiah"},"content":"|  `n/`  | Name             | Contact names              | Any value (up to 170 characters). \u003cbr\u003e In this system, names can contain any characters except ```$```, including prefixes like ```a/``` or ```e/```. However, names containing prefixes, such as ```murthu a/p vara``` must be preceded by a ```$``` to avoid the characters ```a/p``` from being interpreted as a prefix. All $ characters found in name parameters will be excluded. |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"varsha13152"},"content":"|  `p/`  | Phone            | Phone numbers              | Digits (0 - 9)  with an optional `+` at the beginning                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"|  `e/`  | Email            | Email addresses            | Any value with letters, numbers, and special characters:`@`, `.`, `_`, `-`, `+`.                                                                                                                                                                                                                                            |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"|  `a/`  | Address          | Physical addresses         | Any value (up to 500 characters).                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"| `bp/`  | Booking Property | Property names in bookings | Any value (up to 170 characters).                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"iuhiah"},"content":"| `bd/`  | Booking Date     | Dates in bookings          | Use the format `yyyy-MM-dd` (e.g., `2025-01-15`).                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"|  `t/`  | Tag              | Contact tags               | Any value (up to 170 characters).                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"|  `m/`  | Memo             | Notes or comments          | Any value (up to 500 characters).                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"#### Examples:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"**Searching by name:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"* `find n/John` - Finds contacts with \"John\" in their name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"iuhiah"},"content":"* `find n/Betsy n/muthu $a/p vara` - Finds contacts with either \"Betsy\" or \"muthu a/p vara\" in their name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"**Searching by phone:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"* `find p/9123` - Finds contacts whose phone numbers contain \"9123\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"* `find p/+65 p/9123` - Finds contacts whose phone numbers contain either \"+65\" or \"9123\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"**Searching by email:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"* `find e/@example.com` - Finds contacts with email addresses containing \"@example.com\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"* `find e/gmail.com e/yahoo.com` - Finds contacts with email addresses containing either \"gmail.com\" or \"yahoo.com\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"**Searching by address:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"* `find a/Clementi` - Finds contacts with \"Clementi\" in their addresses","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"* `find a/Blk 123 a/Jurong` - Finds contacts with either \"Blk 123\" or \"Jurong\" in their addresses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"**Searching by tag:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"* `find t/friend` - Finds contacts with tags containing \"friend\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"* `find t/friend t/family` - Finds contacts with tags containing either \"friend\" or \"family\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Searching by memo:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"* `find m/important` - Finds contacts with \"important\" in their memos","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"* `find m/call later m/follow up` - Finds contacts with either \"call later\" or \"follow up\" in their memos","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"**Searching by booking date:**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"* `find bd/2024-12-25` - Finds contacts with bookings that include December 25, 2024","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"* `find bd/2025-01-01 bd/2025-02-14` - Finds contacts with bookings that include either January 1, 2025 or February 14, 2025","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"**Searching by booking property:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"* `find bp/Beach House` - Finds contacts with bookings at properties containing \"Beach House\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"* `find bp/Villa bp/Resort` - Finds contacts with bookings at properties containing either \"Villa\" or \"Resort\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"**Combining search fields:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"* `find n/John t/friend` - Finds contacts with either \"John\" in their name OR \"friend\" in their tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"* `find n/Alice p/9123 e/example.com` - Finds contacts with \"Alice\" in their name, \"9123\" in their phone number, or \"example.com\" in their email","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"#### Common Errors:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"* **Empty keyword**: Please provide a keyword after the prefix.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"* **Exceeding character limits**: Ensure keywords don\u0027t exceed the maximum length for each field type.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"Reshiro"},"content":"## 4.8 General Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"Reshiro"},"content":"### 4.8.1 Clearing All Visitors : `clear`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"* After executing `clear`, the system will ask the user to confirm the action.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"* Entering `y` or `Y` will clear the address book, while any other input will cancel the command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"Reshiro"},"content":"### 4.8.2 Exiting the Program : `exit`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"Reshiro"},"content":"### 4.8.3 Undoing the Last Command : `undo`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"Undoes the last modification to the address book, reverting it to its original state before the last modification.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"Reshiro"},"content":"Commands `edit`, `add`, `delete`, `star`, `tag`, `untag`, `req`, `deletereq`, `mark`, `unmark`, `unstar`, `memo`, and even another `undo` are all modifications that can be undone.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"iuhiah"},"content":"📌**Note:** Using the `undo` command after another `undo` command will undo the first undo.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"Format: `undo`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"Reshiro"},"content":"### 4.8.4 Getting Help : `help`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"Reshiro"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"Reshiro"},"content":"### 4.9 Saving the Data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"InnSync\u0027s address book data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"Reshiro"},"content":"### 4.10 Editing the Data File","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"InnSync\u0027s address book data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"varsha13152"},"content":"⚠️**Caution:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, InnSync will discard all data and start with an empty data file at the next run.  Hence, it is recommended to make a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the InnSync to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"## 5. FAQ","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"**A**: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InnSync home folder.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"## 6. Known issues","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"## 7. Glossary","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"* **AirBnB host**: An AirBnB host is an individual or business that list their property on the platform for short-term rentals. The host provide accommodations in the forms of apartments, houses or rooms for guests, typically for leisure activities.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"* **Visitor**:  Any individual who accesses an AirBnB property, including guests staying at the property, property owners, service providers performing work, or other authorized individuals. Visitors may include cleaners, maintenance personnel, property inspectors, delivery services, and other vendors.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"* **CLI (Command Line Interface)**: A text-based interface where users interact with the application with a keyboard typing commands instead of using a graphical user interface.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"* **JAR**: A packed file format used in Java that contains compiled java codes to enable easy distribution, portability and execution that includes libraries and resources to allow the program to function.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"* **JSON (JavaScript Object Notation)**: A lightweight data format widely used for storing and exchanging structured data in a human-readable, that is often used in databases and APIs.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"* **GUI (Graphical User Interface)**: A visual graphical interface that allows users to interact with the application using various graphical elements like search boxes, buttons, text boxes, and eta.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"iuhiah"},"content":"* **Escape**: To escape a prefix means to add a `$` before the prefix to prevent it from being interpreted as a command prefix. For example, if you want to add a visitor with the name \"murthu a/p\", you would use the command `add n/murthu $a/p [...]`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"iuhiah"},"content":"* **Parser**: A parser is a component of the application that interprets and processes user input commands, breaking them down into their respective components (e.g., prefixes, parameters) for further processing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"iuhiah"},"content":"* **Prefix**: A prefix is a special character or string of characters that indicates the type of information being provided in a command. For example, `n/` is a prefix for the name of a visitor, `p/` is a prefix for the phone number, and so on.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"iuhiah"},"content":"* **Parameter**: A parameter is a specific piece of information that follows a prefix in a command. For example, in the command `add n/John Doe`, `John Doe` is the parameter for the `n/` prefix.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"iuhiah"},"content":"* **Command**: A command is a specific instruction given to the application to perform a certain action, such as adding a visitor, editing a visitor, or deleting a visitor.","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"varsha13152":21,"TanXingZhong":19,"iuhiah":32,"Reshiro":71,"monobeartae":26,"-":561}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eInnSync\u003c/a\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TanXingZhong"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2425S2-CS2103T-T16-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TanXingZhong"},"content":"  * [Introduction]({{ baseUrl }}/UserGuide.html#1-introduction)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TanXingZhong"},"content":"  * [How to use this User Guide]({{ baseUrl }}/UserGuide.html#2-how-to-use-this-user-guide)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#3-quick-start)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#4-features)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * [Command Summary]({{ baseUrl }}/UserGuide.html#4-1-command-summary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#5-faq)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TanXingZhong"},"content":"  * [Known issues]({{ baseUrl }}/UserGuide.html#6-known-issues)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TanXingZhong"},"content":"  * [Glossary]({{ baseUrl }}/UserGuide.html#7-glossary)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c!-- * Tutorials","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html) --\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":5,"-":66}},{"path":"docs/diagrams/undo/InitialState.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"monobeartae"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"monobeartae"},"content":"!include ../style.puml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"monobeartae"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"monobeartae"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"monobeartae"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"monobeartae"},"content":"title Initial state","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"monobeartae"},"content":"package ModelManager {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"monobeartae"},"content":"    class State1 as \"\u003cu\u003ebackupAddressBook:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"monobeartae"},"content":"    class State2 as \"\u003cu\u003eaddressBook:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"monobeartae"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"monobeartae"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"monobeartae"},"content":"@end","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"monobeartae":15}},{"path":"docs/diagrams/undo/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"monobeartae"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"monobeartae"},"content":"!include ../style.puml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"monobeartae"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"monobeartae"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"monobeartae"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"monobeartae"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"monobeartae"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"monobeartae"},"content":"end box","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"monobeartae"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"monobeartae"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"monobeartae"},"content":"end box","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"monobeartae"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"monobeartae"},"content":"activate LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"monobeartae"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"monobeartae"},"content":"activate AddressBookParser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"monobeartae"},"content":"create UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"monobeartae"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"monobeartae"},"content":"activate UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"monobeartae"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"monobeartae"},"content":"deactivate UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"monobeartae"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"monobeartae"},"content":"deactivate AddressBookParser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"monobeartae"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"monobeartae"},"content":"activate UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"monobeartae"},"content":"UndoCommand -\u003e Model : revertToLastModified()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"monobeartae"},"content":"activate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"monobeartae"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"monobeartae"},"content":"deactivate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"monobeartae"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"monobeartae"},"content":"deactivate UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"monobeartae"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"monobeartae"},"content":"destroy UndoCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"monobeartae"},"content":"[\u003c--LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"monobeartae"},"content":"deactivate LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"monobeartae"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"monobeartae":46}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# InnSync","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TanXingZhong"},"content":"[![codecov](https://codecov.io/gh/AY2425S2-CS2103T-T16-2/tp/graph/badge.svg?token\u003dNJBP234R72)](https://codecov.io/gh/AY2425S2-CS2103T-T16-2/tp)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"**InnSync is a desktop application for property hosts _(i.e. AirBnB Hosts)_ to manage their details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using InnSync, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing InnSync, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":1,"-":20}},{"path":"src/main/java/seedu/innsync/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.Prefix;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // Command messages","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command! \" + Emoticons.SAD;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \" + Emoticons.ANGRY + \"\\n%s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid! \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ITEM_INDEX \u003d \"This contact does not have a %s of this index! \"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + Emoticons.SAD;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed! \" + Emoticons.PROUD;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s)! \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSONS \u003d \"This person already exists in the address book! \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"            + \"To add or edit a contact, it must have a unique email address and phone number. \" + Emoticons.SAD;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_COMMAND_SUCCESS \u003d \"%s successful! \" + Emoticons.PROUD + \"\\n%s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_COMMAND_FAILURE \u003d \"%s failed! \" + Emoticons.SAD + \"\\n%s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_COMMAND_CANCEL \u003d \"Command cancelled! \" + Emoticons.PROUD;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARSE_EXCEPTION \u003d \"%s \" + Emoticons.ANGRY + \"\\n%s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Object messages","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMPTY_FIELD \u003d \"%s cannot be empty!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_MAX_LENGTH_EXCEEDED \u003d \"%s exceeds maximum length of %d characters!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_FIELD \u003d \"%s is invalid!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_DUPLICATE_FIELD \u003d \"Command will result in duplicate %s!\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Memo: \")","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getMemo())","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Requests: \");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        person.getRequests().forEach(builder::append);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        builder.append(\"; BookingTags: \");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getBookingTags().forEach(builder::append);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        builder.append(\"; Starred: \").append(person.getStarred());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"varsha13152":1,"iuhiah":1,"-":75}},{"path":"src/main/java/seedu/innsync/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKINGTAG;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TanXingZhong"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TanXingZhong"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_REQUEST + \"REQUEST...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_BOOKINGTAG + \"BOOKING_TAG...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_MEMO + \"MEMO]\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"+65 98765432 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_BOOKINGTAG + \"Beach House from/2025-06-01 to/2025-06-10 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owes money \"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_MEMO + \"Wants extra food\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(Messages.MESSAGE_COMMAND_SUCCESS,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"Add\", \"%s has been added to the address book!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_PERSONS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TanXingZhong"},"content":"        for (Tag tag : toAdd.getTags()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TanXingZhong"},"content":"            model.getTagElseCreate(tag);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TanXingZhong"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), toAdd);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":9,"-":91}},{"path":"src/main/java/seedu/innsync/logic/commands/DeleteRequestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a request from a specific person in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The person is identified using the displayed index in the person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteRequestCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deletereq\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Deletes a request from the contact identified by the index number in the displayed person list.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_REQUEST + \"REQUEST_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_REQUEST + \"1\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_COMMAND_SUCCESS, \"Delete request\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"%s has been deleted from %s\u0027s request list!\", \"%s\", \"%s\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_INVALID_ITEM_INDEX, \"request\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Reshiro"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX_FORMAT \u003d \"Request index is not a \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Reshiro"},"content":"            + \"non-zero unsigned integer.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Index contactIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code DeleteRequestCommand} to delete a request from the specified person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param contactIndex The index of the person in the displayed person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param requestIndex The index of the request in the displayed request list of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public DeleteRequestCommand(Index contactIndex, Index requestIndex) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(contactIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(requestIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.contactIndex \u003d contactIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.requestIndex \u003d requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the delete request command by removing the request from the specified person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param model The model which contains the list of persons.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} indicating the outcome of the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws CommandException If the specified index is invalid or the request is not found.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (contactIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(this.contactIndex.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cRequest\u003e requests \u003d personToEdit.getRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Check if requestIndex is valid","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (requestIndex.getZeroBased() \u003e\u003d requests.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_INVALID_REQUEST_INDEX);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Get the request to be deleted","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Request requestToDelete \u003d requests.get(requestIndex.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Create edited person with the request removed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, requestToDelete);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_SUCCESS, requestToDelete.getRequestName(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    editedPerson.getName()), editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates a new Person with the request removed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param personToEdit The person to edit.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param requestToDelete The request to be deleted.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return A new Person with the request removed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws CommandException If the request is not found in the person\u0027s requests.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private Person createEditedPerson(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Person personToEdit,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Request requestToDelete) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person tempPerson \u003d new Person(personToEdit);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        tempPerson.removeRequest(requestToDelete);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return tempPerson;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteRequestCommand)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        DeleteRequestCommand otherDeleteRequest \u003d (DeleteRequestCommand) other;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return contactIndex.equals(otherDeleteRequest.contactIndex)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 requestIndex.equals(otherDeleteRequest.requestIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"contactIndex\", contactIndex)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"requestIndex\", requestIndex)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":133}},{"path":"src/main/java/seedu/innsync/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKINGTAG;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.CollectionUtil;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Address;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Email;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Name;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Phone;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_REQUEST + \"REQUEST...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_BOOKINGTAG + \"BOOKING_TAG...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TanXingZhong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG...] \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_MEMO + \"MEMO]...\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"+65 91234567 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(Messages.MESSAGE_COMMAND_SUCCESS,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \"Edit\", \"%s has been edited!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d String.format(Messages.MESSAGE_COMMAND_FAILURE,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \"Edit\", \"Provide at least one field to edit!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TanXingZhong"},"content":"        for (Tag tag : editedPerson.getTags()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TanXingZhong"},"content":"            model.getTagElseCreate(tag);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TanXingZhong"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_PERSONS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName()), editedPerson);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Memo updatedMemo \u003d editPersonDescriptor.getMemo().orElse(personToEdit.getMemo());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cRequest\u003e updatedRequestList \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                editPersonDescriptor.getRequests().orElse(personToEdit.getRequests());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cBookingTag\u003e updatedBookingTags \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            editPersonDescriptor.getBookingTags().orElse(personToEdit.getBookingTags());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedMemo, updatedRequestList,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                updatedBookingTags, updatedTags, personToEdit.getStarred());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private Memo memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private List\u003cRequest\u003e requests;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Set\u003cBookingTag\u003e bookingTags;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setMemo(toCopy.memo);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setRequests(toCopy.requests);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setBookingTags(toCopy.bookingTags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, memo, requests, bookingTags, tags);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setMemo(Memo memo) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.memo \u003d memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cMemo\u003e getMemo() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(memo);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void setRequests(List\u003cRequest\u003e requests) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.requests \u003d (requests !\u003d null) ? new ArrayList\u003c\u003e(requests) : null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cList\u003cRequest\u003e\u003e getRequests() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return (requests !\u003d null) ? Optional.of(Collections.unmodifiableList(requests)) : Optional.empty();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void setBookingTags(Set\u003cBookingTag\u003e bookingTags) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.bookingTags \u003d (bookingTags !\u003d null) ? new HashSet\u003c\u003e(bookingTags) : null;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cBookingTag\u003e\u003e getBookingTags() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return (bookingTags !\u003d null) ? Optional.of(Collections.unmodifiableSet(bookingTags)) : Optional.empty();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(memo, otherEditPersonDescriptor.memo)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(requests, otherEditPersonDescriptor.requests)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(bookingTags, otherEditPersonDescriptor.bookingTags)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    .add(\"memo\", memo)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    .add(\"requests\", requests)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    .add(\"bookingTags\", bookingTags)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":6,"-":297}},{"path":"src/main/java/seedu/innsync/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(Messages.MESSAGE_COMMAND_SUCCESS,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"monobeartae"},"content":"            \"List\", \"Listing all persons in the address book!\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    public static final String MESSAGE_EMPTY \u003d \"There are no contacts in the address book. Use the \u0027add\u0027 command to\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"            + \" create new contacts!\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (model.getAddressBook().getPersonList().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_EMPTY);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"varsha13152":2,"monobeartae":1,"-":32}},{"path":"src/main/java/seedu/innsync/logic/commands/MarkRequestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Emoticons;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a request to a specific person in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The person is identified using their displayed index in the person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class MarkRequestCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Marks a request of the contact identified by the index number \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"in the displayed person list as completed.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_REQUEST + \"REQUEST_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_REQUEST + \"1\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(Messages.MESSAGE_COMMAND_SUCCESS,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"Mark request\", \"Marked request as completed!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_INVALID_ITEM_INDEX, \"request\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Reshiro"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX_FORMAT \u003d \"Request index is not a \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Reshiro"},"content":"            + \"non-zero unsigned integer.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"The request %s is already marked!\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + Emoticons.SAD;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code RequestCommand} to add a request to the specified person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param index The index of the person in the displayed person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param requestIndex The index of the request in the displayed request list of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param request The set of requests to be added to the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public MarkRequestCommand(Index index, Index requestIndex) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.requestIndex \u003d requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Executes the mark request command by marking the specified request","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * of the specified person as complete.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param model The model which contains the list of persons.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} indicating the outcome of the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws CommandException If the specified index is invalid (out of bounds).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d lastShownList.get(this.index.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cRequest\u003e requests \u003d person.getRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (this.requestIndex.getOneBased() \u003e requests.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_INVALID_REQUEST_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Request request \u003d requests.get(this.requestIndex.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (request.isCompleted()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    request.getRequestName()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(model, person, request, requestIndex);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, request.getRequestName()), editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Person createEditedPerson(Model model, Person person, Request request, Index index) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Request markedRequest \u003d new Request(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        markedRequest.markAsCompleted();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        markedRequest \u003d model.getRequestElseCreate(markedRequest);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(person);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedPerson.removeRequest(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedPerson.addRequest(markedRequest, index.getZeroBased());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return editedPerson;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof MarkRequestCommand)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        MarkRequestCommand otherRequest \u003d (MarkRequestCommand) other;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return index.equals(otherRequest.index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":121}},{"path":"src/main/java/seedu/innsync/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNullElse;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKINGTAG;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Adds a (booking) tag into a person to the address book.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \": Adds tag to the contact identified by the index number in the displayed person list.\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG or\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"iuhiah"},"content":"            + PREFIX_BOOKINGTAG + \"PROPERTY from/START_DATE to/END_DATE\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"iuhiah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 t/friends\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"iuhiah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 b/property from/2023-10-01 to/2023-10-31\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"iuhiah"},"content":"            Messages.MESSAGE_COMMAND_SUCCESS, \"Tag\", \"%s\u0027s tag list has been updated!\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_COMMAND_FAILURE, \"Tag\", \"%s already exists in the contact\u0027s tag list!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_FAILURE_OVERLAP \u003d String.format(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"iuhiah"},"content":"            Messages.MESSAGE_COMMAND_FAILURE, \"Tag\", \"%s overlaps with existing booking tag!\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tagList;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Set\u003cBookingTag\u003e bookingTagList;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an TagCommand to add the specified {@code index}","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * and {@code tag}","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tagList, Set\u003cBookingTag\u003e bookingTagList) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.tagList \u003d requireNonNullElse(tagList, new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.bookingTagList \u003d requireNonNullElse(bookingTagList, new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(this.index.getZeroBased());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Tag tag : tagList) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            modelTags.add(model.getTagElseCreate(tag));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d addTagsPerson(personToEdit, bookingTagList);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Tag tag : modelTags) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                editedPerson.addTag(tag);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            } catch (DuplicateTagException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_DUPLICATE_FIELD, tag));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TanXingZhong"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName()), editedPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Person addTagsPerson(Person personToCopy, Set\u003cBookingTag\u003e bookingTags)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(personToCopy);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cBookingTag\u003e updatedBookingTags \u003d new HashSet\u003c\u003e(personToCopy.getBookingTags());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (BookingTag bookingTag : bookingTags) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            for (BookingTag existingTag : updatedBookingTags) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"iuhiah"},"content":"                if (existingTag.equals(bookingTag)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    throw new CommandException(String.format(MESSAGE_FAILURE, bookingTag.toPrettier()));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"iuhiah"},"content":"                if (isOverlapping(existingTag, bookingTag)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"iuhiah"},"content":"                    throw new CommandException(String.format(MESSAGE_FAILURE_OVERLAP, bookingTag.toPrettier()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"iuhiah"},"content":"                }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            updatedBookingTags.add(bookingTag);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                personToCopy.getName(),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                personToCopy.getPhone(),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                personToCopy.getEmail(),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                personToCopy.getAddress(),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                personToCopy.getMemo(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                personToCopy.getRequests(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                updatedBookingTags,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                personToCopy.getTags(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                personToCopy.getStarred());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Helper method to check if two booking tags overlap","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private boolean isOverlapping(BookingTag tag1, BookingTag tag2) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return !(tag1.endDate.isBefore(tag2.startDate) || tag2.endDate.isBefore(tag1.startDate));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        TagCommand otherTag \u003d (TagCommand) other;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(otherTag.index) \u0026\u0026 tagList.equals(otherTag.tagList)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 bookingTagList.equals(otherTag.bookingTagList);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"tagList\", tagList.toString())","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"bookingTagList\", bookingTagList.toString())","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"TanXingZhong":1,"iuhiah":10,"-":143}},{"path":"src/main/java/seedu/innsync/logic/commands/UnmarkRequestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a request to a specific person in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The person is identified using their displayed index in the person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UnmarkRequestCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \": Unmarks a request of the contact identified by the index number \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"in the displayed person list from its completion status.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + PREFIX_REQUEST","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"REQUEST_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_REQUEST + \"1\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_COMMAND_SUCCESS, \"Unmark request\", \"%s has been unmarked!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_INVALID_ITEM_INDEX, \"request\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Reshiro"},"content":"    public static final String MESSAGE_INVALID_REQUEST_INDEX_FORMAT \u003d \"Request index is not a \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Reshiro"},"content":"            + \"non-zero unsigned integer.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Messages.MESSAGE_COMMAND_FAILURE, \"Unmark request\", \"The request %s is not marked!\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code RequestCommand} to add a request to the specified person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param index The index of the person in the displayed person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param requestIndex The index of the request in the displayed request list of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public UnmarkRequestCommand(Index index, Index requestIndex) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.requestIndex \u003d requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Executes the mark request command by marking the specified request","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * of the specified person as complete.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param model The model which contains the list of persons.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} indicating the outcome of the command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If the specified index is invalid (out of bounds).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d lastShownList.get(this.index.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cRequest\u003e requests \u003d person.getRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.requestIndex.getOneBased() \u003e requests.size()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_INVALID_REQUEST_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Request request \u003d requests.get(this.requestIndex.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!request.isCompleted()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, request.getRequestName()));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(model, person, request, requestIndex);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, request.getRequestName()), editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Person createEditedPerson(Model model, Person person, Request request, Index index) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Request unmarkedRequest \u003d new Request(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        unmarkedRequest.markAsIncomplete();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        unmarkedRequest \u003d model.getRequestElseCreate(unmarkedRequest);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(person);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedPerson.removeRequest(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedPerson.addRequest(unmarkedRequest, index.getZeroBased());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return editedPerson;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof UnmarkRequestCommand)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        UnmarkRequestCommand otherRequest \u003d (UnmarkRequestCommand) other;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return index.equals(otherRequest.index);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":118}},{"path":"src/main/java/seedu/innsync/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKINGTAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Removes a tag from a contact in the addressbook","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Removes the tag from the contact identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG\\n\" + \"OR \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"iuhiah"},"content":"            + PREFIX_BOOKINGTAG + \"PROPERTY from/START_DATE to/END_DATE\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"iuhiah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 t/friends\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"iuhiah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 b/property from/2023-10-01 to/2023-10-31\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"iuhiah"},"content":"            Messages.MESSAGE_COMMAND_SUCCESS, \"Untag\", \"%s has been removed from the contact\u0027s tag list!\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE_TAG \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"iuhiah"},"content":"            Messages.MESSAGE_COMMAND_FAILURE, \"Untag\", \"Contact does not have the tag %s!\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE_BOOKINGTAG \u003d String.format(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"iuhiah"},"content":"            Messages.MESSAGE_COMMAND_FAILURE, \"Untag\", \"Contact does not have the booking tag %s!\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Tag tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"iuhiah"},"content":"    private final BookingTag bookingTag;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param tag to be removed from the contact","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param bookingTag to be removed from the contact","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"iuhiah"},"content":"    public UntagCommand(Index index, Tag tag, BookingTag bookingTag) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.bookingTag \u003d bookingTag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assert tag !\u003d null || bookingTag !\u003d null : \"Either tag or bookingTag must be present\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getPersonList();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"iuhiah"},"content":"        Person editedPerson \u003d removeTagsPerson(personToEdit, tag, bookingTag);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"iuhiah"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"iuhiah"},"content":"                tag !\u003d null ? tag : bookingTag.toPrettier()), editedPerson);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes the tag from the person","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param personToCopy the person to have its tag remove","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param toRemoveBookingTag the bookingTag to be removed","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return the person with the tags or bookingTags removed","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"iuhiah"},"content":"    public static Person removeTagsPerson(Person personToCopy, Tag toRemoveTag, BookingTag toRemoveBookingTag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throws CommandException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"iuhiah"},"content":"        Set\u003cBookingTag\u003e updatedBookingTags \u003d new HashSet\u003c\u003e(personToCopy.getBookingTags());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"iuhiah"},"content":"        if (toRemoveBookingTag !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"iuhiah"},"content":"            if (!updatedBookingTags.remove(toRemoveBookingTag)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"iuhiah"},"content":"                throw new CommandException(String.format(MESSAGE_FAILURE_BOOKINGTAG, toRemoveBookingTag.toPrettier()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"iuhiah"},"content":"        Person copiedPerson \u003d new Person(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                personToCopy.getName(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                personToCopy.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                personToCopy.getEmail(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                personToCopy.getAddress(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                personToCopy.getMemo(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                personToCopy.getRequests(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"iuhiah"},"content":"                updatedBookingTags,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                personToCopy.getTags(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                personToCopy.getStarred());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"iuhiah"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"iuhiah"},"content":"            if (toRemoveTag !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"iuhiah"},"content":"                copiedPerson.removeTag(toRemoveTag);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"iuhiah"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"iuhiah"},"content":"        } catch (TagNotFoundException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"iuhiah"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE_TAG, toRemoveTag));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"iuhiah"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"iuhiah"},"content":"        return copiedPerson;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean requireConfirmation() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof UntagCommand)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UntagCommand otherUntagCommand \u003d (UntagCommand) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"iuhiah"},"content":"        return index.equals(otherUntagCommand.index)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"iuhiah"},"content":"                \u0026\u0026 tag !\u003d null ? tag.equals(otherUntagCommand.tag)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"iuhiah"},"content":"                : bookingTag.equals(otherUntagCommand.bookingTag);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"tag\", tag)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"bookingTag\", \"[\" + bookingTag + \"]\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"iuhiah":31,"-":115}},{"path":"src/main/java/seedu/innsync/logic/parser/DeleteRequestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.DeleteRequestCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteRequestCommand object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteRequestCommandParser implements Parser\u003cDeleteRequestCommand\u003e {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteRequestCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteRequestCommand object for execution.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteRequestCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REQUEST);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (!argMultimap.getValue(PREFIX_REQUEST).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index contactIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            contactIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    pe.getMessage(), DeleteRequestCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            requestIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REQUEST).get());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Reshiro"},"content":"                    DeleteRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Reshiro"},"content":"                    DeleteRequestCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new DeleteRequestCommand(contactIndex, requestIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":46}},{"path":"src/main/java/seedu/innsync/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKING_DATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKING_PROPERTY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_MEMO;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Emoticons;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.FindCommand;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.FindCommand.SearchType;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"import seedu.innsync.model.person.Name;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Maps prefixes to their corresponding search types","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Map\u003cPrefix, SearchType\u003e PREFIX_TO_SEARCH_TYPE \u003d Map.of(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            PREFIX_NAME, SearchType.NAME,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            PREFIX_PHONE, SearchType.PHONE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            PREFIX_EMAIL, SearchType.EMAIL,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            PREFIX_ADDRESS, SearchType.ADDRESS,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            PREFIX_TAG, SearchType.TAG,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            PREFIX_MEMO, SearchType.MEMO,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            PREFIX_BOOKING_DATE, SearchType.BOOKING_DATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            PREFIX_BOOKING_PROPERTY, SearchType.BOOKING_PROPERTY","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                args,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                PREFIX_NAME,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                PREFIX_PHONE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                PREFIX_EMAIL,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                PREFIX_ADDRESS,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                PREFIX_TAG,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                PREFIX_MEMO,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                PREFIX_BOOKING_DATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                PREFIX_BOOKING_PROPERTY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Map\u003cSearchType, List\u003cString\u003e\u003e searchCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cPrefix, SearchType\u003e entry : PREFIX_TO_SEARCH_TYPE.entrySet()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Prefix prefix \u003d entry.getKey();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            SearchType searchType \u003d entry.getValue();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            List\u003cString\u003e prefixValues \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (!prefixValues.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                processPrefix(prefixValues, prefix, searchType, searchCriteria);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (searchCriteria.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new FindCommand(searchCriteria);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Processes all values for a given prefix and adds them to the search criteria.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Each prefix value is kept as a complete string without splitting.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param prefixValues The list of values for a specific prefix","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param prefix The prefix being processed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param searchType The search type corresponding to this prefix","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param searchCriteria The map to store search criteria","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if validation fails","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void processPrefix(List\u003cString\u003e prefixValues, Prefix prefix,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                               SearchType searchType, Map\u003cSearchType, List\u003cString\u003e\u003e searchCriteria)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(prefixValues);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(searchType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(searchCriteria);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varsha13152"},"content":"        List\u003cString\u003e invalidKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (String value : prefixValues) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            String trimmedValue \u003d value.trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!trimmedValue.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"                if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varsha13152"},"content":"                    try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varsha13152"},"content":"                        Name parsedName \u003d ParserUtil.parseName(trimmedValue);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varsha13152"},"content":"                        keywords.add(parsedName.toString());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varsha13152"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varsha13152"},"content":"                        invalidKeywords.add(trimmedValue);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varsha13152"},"content":"                    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varsha13152"},"content":"                } else if (!isValidKeyword(trimmedValue, prefix)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varsha13152"},"content":"                    invalidKeywords.add(trimmedValue);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varsha13152"},"content":"                } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    keywords.add(trimmedValue);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"varsha13152"},"content":"        if (!invalidKeywords.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"varsha13152"},"content":"            throw new ParseException(getErrorMessage(prefix, invalidKeywords));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        validateKeywords(keywords, prefix);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        searchCriteria.put(searchType, keywords);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Validates keywords based on the provided prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Checks if all keywords are valid according to their prefix type.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @param keywords The list of keywords to validate","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param prefix The prefix that determines validation rules","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if any keyword is invalid or if the keywords list is empty","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void validateKeywords(List\u003cString\u003e keywords, Prefix prefix) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Error: Please enter a keyword after \" + prefix + \" when searching by \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    + getPrefixDescription(prefix) + \". \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cString\u003e invalidKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            if (!isValidKeyword(keyword, prefix)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                invalidKeywords.add(keyword);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!invalidKeywords.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new ParseException(getErrorMessage(prefix, invalidKeywords));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Checks if a keyword is valid for the given prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Different validation rules apply based on the prefix type.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @param keyword The keyword to validate","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @param prefix The prefix that determines validation rules","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @return true if the keyword is valid for the prefix, false otherwise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private boolean isValidKeyword(String keyword, Prefix prefix) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        int maxLength \u003d (prefix.equals(PREFIX_ADDRESS) || prefix.equals(PREFIX_MEMO)) ? 500 : 170;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (keyword.length() \u003e maxLength) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return keyword.matches(\"^\\\\+?[0-9]+$\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return keyword.matches(\"^[A-Za-z0-9+_.@-]*$\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_BOOKING_DATE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (!keyword.matches(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"                LocalDate.parse(keyword, DATE_FORMAT);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Gets a description of the prefix for error messages.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @param prefix The prefix to get a description for","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * @return A human-readable description of the prefix","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private String getPrefixDescription(Prefix prefix) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return \"name\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return \"phone number\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return \"email\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return \"address\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return \"tag\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_MEMO)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return \"memo\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_BOOKING_DATE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return \"booking date\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_BOOKING_PROPERTY)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return \"booking property\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return \"field\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Gets an error message for invalid keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * The message is customized based on the prefix type.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @param prefix The prefix associated with the invalid keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * @param invalidKeywords The list of invalid keywords","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * @return A formatted error message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private String getErrorMessage(Prefix prefix, List\u003cString\u003e invalidKeywords) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String errorMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Name values should not exceed 170 characters.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Invalid phone format. Phone numbers should contain digits, with an optional \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    + \"\u0027+\u0027 at the beginning.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Invalid email format. Email values may only contain alphanumeric characters, \u0027@\u0027, \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    + \"and these special characters: + _ . -\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Address values should not exceed 500 characters.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Tag values should not exceed 170 characters.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_MEMO)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Memo values should not exceed 500 characters.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_BOOKING_DATE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Invalid booking date format. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    + \"Dates should be in the format yyyy-MM-dd (e.g., 2024-10-15).\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } else if (prefix.equals(PREFIX_BOOKING_PROPERTY)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Booking property values should not exceed 170 characters.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            errorMessage \u003d \"Error: Invalid keyword format.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return errorMessage + \" Invalid keyword(s): \" + String.join(\", \", invalidKeywords) + \" \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"varsha13152":15,"-":254}},{"path":"src/main/java/seedu/innsync/logic/parser/MarkRequestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.MarkRequestCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new MemoCommand object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class MarkRequestCommandParser implements Parser\u003cMarkRequestCommand\u003e {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the MemoCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a MemoCommand object for execution.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public MarkRequestCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REQUEST);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REQUEST);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!argMultimap.getValue(PREFIX_REQUEST).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    pe.getMessage(), MarkRequestCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            requestIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REQUEST).orElse(\"1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Reshiro"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Reshiro"},"content":"                    MarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    MarkRequestCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new MarkRequestCommand(index, requestIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":48}},{"path":"src/main/java/seedu/innsync/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.StringUtil;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Reshiro"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.RequestCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Address;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Email;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Name;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Phone;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed, and consecutive spaces will be normalized.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String normalizedName \u003d StringUtil.normalizeWhitespace(name).replace(\"$\", \"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(normalizedName)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.getErrorMessage(name));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(normalizedName);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.getErrorMessage(trimmedPhone));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed, and consecutive spaces will be normalized.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String normalizedAddress \u003d StringUtil.normalizeWhitespace(address);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(normalizedAddress)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.getErrorMessage(address));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(normalizedAddress);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.getErrorMessage(trimmedEmail));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String Memo} into an {@code Memo}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Memo parseMemo(String memo) throws ParseException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(memo);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedMemo \u003d memo.trim();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (trimmedMemo.isEmpty() || Memo.isValidMemo(trimmedMemo)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return new Memo(trimmedMemo);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new ParseException(Memo.MESSAGE_LENGTH);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses a {@code String request} into a {@code request}.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code request} is invalid.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static Request parseRequest(String request) throws ParseException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(request);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String trimmedRequest \u003d request.trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Request.checkValidRequest(trimmedRequest);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Request(trimmedRequest);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e requests} into a {@code RequestList}.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static List\u003cRequest\u003e parseRequests(Collection\u003cString\u003e requests) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(requests);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final List\u003cRequest\u003e requestList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String requestName : requests) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Request request \u003d parseRequest(requestName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            for (Request requestInList : requestList) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                if (requestInList.isSameRequest(request)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    throw new ParseException(RequestCommand.MESSAGE_DUPLICATE_REQUEST);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            requestList.add(request);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return requestList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses a {@code String bookingTag} into a {@code bookingTag}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code bookingTag} is invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static BookingTag parseBookingTag(String bookingTag) throws ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(bookingTag);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String trimmedBookingTag \u003d bookingTag.trim();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            BookingTag.checkValidBookingTag(trimmedBookingTag);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new BookingTag(trimmedBookingTag);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e bookingTags} into a {@code Set\u003cBookingTag\u003e}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static Set\u003cBookingTag\u003e parseBookingTags(Collection\u003cString\u003e bookingTags) throws ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(bookingTags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        final Set\u003cBookingTag\u003e bookingTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (String bookingTagName : bookingTags) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            bookingTagSet.add(parseBookingTag(bookingTagName));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return bookingTagSet;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            Tag.checkValidTag(trimmedTag);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Reshiro"},"content":"        final Set\u003cString\u003e seenTagNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Reshiro"},"content":"            String trimmedTagName \u003d tagName.trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Reshiro"},"content":"            if (seenTagNames.contains(trimmedTagName)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Reshiro"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_DUPLICATE_FIELD, \"tag\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Reshiro"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Reshiro"},"content":"            seenTagNames.add(trimmedTagName);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Reshiro"},"content":"            tagSet.add(parseTag(trimmedTagName));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Reshiro":9,"-":217}},{"path":"src/main/java/seedu/innsync/logic/parser/UnmarkRequestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.UnmarkRequestCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new MemoCommand object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UnmarkRequestCommandParser implements Parser\u003cUnmarkRequestCommand\u003e {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the MemoCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a MemoCommand object for execution.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UnmarkRequestCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REQUEST);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REQUEST);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!argMultimap.getValue(PREFIX_REQUEST).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    pe.getMessage(), UnmarkRequestCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index requestIndex;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            requestIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REQUEST).orElse(\"1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Reshiro"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Reshiro"},"content":"                    UnmarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    UnmarkRequestCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new UnmarkRequestCommand(index, requestIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":2,"-":48}},{"path":"src/main/java/seedu/innsync/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_BOOKINGTAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.UntagCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"iuhiah"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UntagCommand object","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UntagCommandParser implements Parser\u003cUntagCommand\u003e {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Only allows one tag to be removed at a time.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UntagCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_BOOKINGTAG, PREFIX_TAG);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!onlyOnePrefixPresent(argMultimap, PREFIX_BOOKINGTAG, PREFIX_TAG)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_BOOKINGTAG, PREFIX_TAG);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    pe.getMessage(), UntagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Tag tag \u003d null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"iuhiah"},"content":"        BookingTag bookingTag \u003d null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"iuhiah"},"content":"        if (argMultimap.getValue(PREFIX_BOOKINGTAG).isPresent()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"iuhiah"},"content":"            bookingTag \u003d ParserUtil.parseBookingTag(argMultimap.getValue(PREFIX_BOOKINGTAG).get());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"iuhiah"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"iuhiah"},"content":"        if (tag \u003d\u003d null \u0026\u0026 bookingTag \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new UntagCommand(index, tag, bookingTag);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if only one of the prefixes is present in the {@code ArgumentMultimap}.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean onlyOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()).count() \u003d\u003d 1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"iuhiah":6,"-":60}},{"path":"src/main/java/seedu/innsync/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.GuiSettings;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.LogsCenter;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook backupAddressBook;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.backupAddressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"monobeartae"},"content":"        this.backupAddressBook();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"monobeartae"},"content":"        this.backupAddressBook();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.addressBook.removePerson(target);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"monobeartae"},"content":"        this.backupAddressBook();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"monobeartae"},"content":"        this.backupAddressBook();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean revertToLastModified() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"monobeartae"},"content":"        if (!this.hasUndoState()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AddressBook prevAddressBook \u003d new AddressBook(this.addressBook);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(this.backupAddressBook);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.backupAddressBook.resetData(prevAddressBook);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"monobeartae"},"content":"    private void backupAddressBook() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"monobeartae"},"content":"        this.backupAddressBook.resetData(this.addressBook);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"monobeartae"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"monobeartae"},"content":"    private boolean hasUndoState() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"monobeartae"},"content":"        return !this.backupAddressBook.equals(this.addressBook);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"monobeartae"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Tag getTagElseCreate(Tag tag) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return this.addressBook.getTagElseCreate(tag);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public Tag getTag(Tag tag) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return this.addressBook.getTag(tag);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Request getRequest(Request request) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return this.addressBook.getRequest(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        this.addressBook.setTags(tags);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public Request getRequestElseCreate(Request request) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return this.addressBook.getRequestElseCreate(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void setRequests(List\u003cRequest\u003e requests) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(requests);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        this.addressBook.setRequests(requests);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the sorted filtered list of {@code Person} backed by the internal list of","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return getSortedFilteredPersonList(COMPARATOR_SHOW_STARRED_FIRST);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns a sorted unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private ObservableList\u003cPerson\u003e getSortedFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e filteredList \u003d getFilteredPersonList();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return filteredList.sorted(comparator);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"monobeartae":13,"-":213}},{"path":"src/main/java/seedu/innsync/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.LogsCenter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.exceptions.DuplicateRequestException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.exceptions.RequestNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Logger","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Person.class);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Memo memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final List\u003cRequest\u003e requests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Set\u003cBookingTag\u003e bookingTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final boolean starred;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Memo memo, List\u003cRequest\u003e requests,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                  Set\u003cBookingTag\u003e bookingTags, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, memo, requests, bookingTags, tags);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.requests.addAll(requests);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.bookingTags.addAll(bookingTags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.starred \u003d false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Memo memo, List\u003cRequest\u003e requests,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  Set\u003cBookingTag\u003e bookingTags, Set\u003cTag\u003e tags, boolean starred) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, bookingTags, tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.requests.addAll(requests);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.bookingTags.addAll(bookingTags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.starred \u003d starred;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Clones a person object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person(Person personToCopy) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(personToCopy);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.name \u003d personToCopy.getName();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.phone \u003d personToCopy.getPhone();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d personToCopy.getEmail();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.address \u003d personToCopy.getAddress();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.memo \u003d personToCopy.getMemo();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.requests.addAll(personToCopy.getRequests());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.bookingTags.addAll(personToCopy.getBookingTags());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.tags.addAll(personToCopy.getTags());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.starred \u003d personToCopy.getStarred();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean getStarred() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return starred;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Memo getMemo() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return memo;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public List\u003cRequest\u003e getRequests() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableList(requests);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public Set\u003cBookingTag\u003e getBookingTags() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(bookingTags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Adds a tag to the list of tags of the person.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @param tag the tag to be added","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void addTag(Tag tag) throws DuplicateTagException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireAllNonNull(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (tags.contains(tag)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        tags.add(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Tag added to person\u0027s tag list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Removes a tag from the list of tags of the person.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param tag the tag to be removed","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void removeTag(Tag tag) throws TagNotFoundException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireAllNonNull(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.contains(tag)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Tag not found in person\u0027s tag list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        tags.remove(tag);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logger.info(\"Tag removed from person\u0027s tag list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Clears the list of tags of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Used in testing.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void clearTags() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        tags.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"varsha13152"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone()) \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Adds a request to the list of requests of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @param request the tag to be added","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void addRequest(Request request) throws DuplicateRequestException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireAllNonNull(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (Request requestInPerson : requests) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (requestInPerson.isSameRequest(request)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"                throw new DuplicateRequestException();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requests.add(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logger.info(\"Request added to person\u0027s request list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Adds a request to the list of requests of the person at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @param request the tag to be added","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void addRequest(Request request, int index) throws DuplicateRequestException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        requireAllNonNull(request);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        for (Request requestInPerson : requests) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (requestInPerson.isSameRequest(request)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"                throw new DuplicateRequestException();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        requests.add(index, request);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        logger.info(\"Request added to person\u0027s request list.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Removes a request from the list of requests of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @param request the tag to be removed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void removeRequest(Request request) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        requireAllNonNull(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (!requests.contains(request)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.warning(\"Request not found in person\u0027s request list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            throw new RequestNotFoundException();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requests.remove(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        logger.info(\"Request removed from person\u0027s request list.\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Clears the list of requests of the person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Used in testing.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void clearRequests() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        requests.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \u0026\u0026 starred \u003d\u003d otherPerson.starred","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"                \u0026\u0026 memo.equals(otherPerson.memo)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \u0026\u0026 requests.equals(otherPerson.requests)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \u0026\u0026 bookingTags.equals(otherPerson.bookingTags)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, memo, requests, bookingTags, tags);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"                .add(\"memo\", memo)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                .add(\"requests\", requests)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"                .add(\"bookingTags\", bookingTags)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"                .add(\"starred\", starred)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"varsha13152":1,"-":288}},{"path":"src/main/java/seedu/innsync/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument regardless of casing.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"                .anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"varsha13152":1,"-":149}},{"path":"src/main/java/seedu/innsync/model/tag/BookingTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.tag;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * {@link #isValidBookingTagName(String)}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class BookingTag {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Booking tags should be of the format \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"PROPERTY from/START_DATE to/END_DATE \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"where START_DATE and END_DATE are in the format yyyy-MM-dd.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"The START_DATE must be before END_DATE.\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"PROPERTY must have 1 to 170 characters.\\n\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FIELD_EMPTY \u003d String.format(Messages.MESSAGE_EMPTY_FIELD,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"No booking tag fields\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PROPERTY_LENGTH \u003d String.format(Messages.MESSAGE_MAX_LENGTH_EXCEEDED,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Booking tag\", 170);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_STARTDATE_EMPTY \u003d String.format(Messages.MESSAGE_EMPTY_FIELD, \"Start date\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_STARTDATE_INVALID \u003d String.format(Messages.MESSAGE_INVALID_FIELD,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"iuhiah"},"content":"        \"Start date\", \"Start date is invalid.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_ENDDATE_EMPTY \u003d String.format(Messages.MESSAGE_EMPTY_FIELD, \"End date\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"iuhiah"},"content":"    public static final String MESSAGE_ENDDATE_INVALID \u003d String.format(Messages.MESSAGE_INVALID_FIELD,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"iuhiah"},"content":"            \"End date\", \"End date is invalid.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_STARTDATE_AFTER_ENDDATE \u003d","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"Error: Booking tag start date must be before end date.\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Regex and parsing patterns","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String REGEX_TOKENS \u003d \"^(?\u003cproperty\u003e.*) from/(?\u003cstartDate\u003e.*) to/(?\u003cendDate\u003e.*)$\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Pattern PATTERN_TOKENS \u003d Pattern.compile(REGEX_TOKENS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String REGEX_NOT_EMPTY \u003d \"^.+$\"; // Ensures non-empty string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String REGEX_MAX_LENGTH \u003d \"^.{1,170}$\"; // Ensures length \u003c\u003d 170","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Booking tag properties","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public final Matcher matcher;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public final String bookingTagName;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public final LocalDate startDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public final LocalDate endDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a {@code BookingTag}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param bookingTagName Valid booking tag parts.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public BookingTag(String bookingTagName) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(bookingTagName);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        checkValidBookingTag(bookingTagName);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.matcher \u003d PATTERN_TOKENS.matcher(bookingTagName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.matcher.matches();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String property \u003d matcher.group(\"property\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String startDate \u003d matcher.group(\"startDate\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String endDate \u003d matcher.group(\"endDate\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.bookingTagName \u003d property;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid booking tag.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Else sets the error message to the specific error and returns false.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param test The string to be validated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void checkValidBookingTag(String test) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(test);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d PATTERN_TOKENS.matcher(test);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String property;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String startDate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String endDate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            matcher.matches();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            property \u003d matcher.group(\"property\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            startDate \u003d matcher.group(\"startDate\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            endDate \u003d matcher.group(\"endDate\");","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!property.matches(REGEX_NOT_EMPTY)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_FIELD_EMPTY);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!property.matches(REGEX_MAX_LENGTH)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_PROPERTY_LENGTH);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!startDate.matches(REGEX_NOT_EMPTY)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"iuhiah"},"content":"            throw new IllegalArgumentException(MESSAGE_STARTDATE_EMPTY);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!endDate.matches(REGEX_NOT_EMPTY)) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"iuhiah"},"content":"            throw new IllegalArgumentException(MESSAGE_ENDDATE_EMPTY);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            checkValidDate(startDate);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_STARTDATE_INVALID);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            checkValidDate(endDate);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_ENDDATE_INVALID);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (LocalDate.parse(startDate, DATE_FORMATTER).isAfter(LocalDate.parse(endDate, DATE_FORMATTER))) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(MESSAGE_STARTDATE_AFTER_ENDDATE);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid booking tag.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param test The string to be validated.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return true if the string is a valid booking tag.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static boolean isValidBookingTag(String test) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(test);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            checkValidBookingTag(test);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static void checkValidDate(String date) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        parsedDate \u003d LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // check if parser rounded down the date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (parsedDate.getDayOfMonth() !\u003d Integer.parseInt(date.substring(8, 10))) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"iuhiah"},"content":"            throw new DateTimeParseException(\"Invalid date\", date, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public String getFullBookingTag() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return bookingTagName + \" from/\" + startDate.format(DATE_FORMATTER) + \" to/\" + endDate.format(DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!(other instanceof BookingTag)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        BookingTag otherBookingTag \u003d (BookingTag) other;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return getFullBookingTag().equals(otherBookingTag.getFullBookingTag());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return bookingTagName.hashCode();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Format state as text for storage.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + bookingTagName + \u0027]\u0027;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public String toPrettier() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return bookingTagName + \" \" + startDate.format(formatter) + \" to \" + endDate.format(formatter);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"iuhiah":9,"-":181}},{"path":"src/main/java/seedu/innsync/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.tag.exceptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in a tag not found.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class TagNotFoundException extends RuntimeException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public TagNotFoundException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"iuhiah"},"content":"        super(\"Tag not found!\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"iuhiah":1,"-":9}},{"path":"src/main/java/seedu/innsync/ui/PersonDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.ui;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNullElse;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"monobeartae"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.CheckBox;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Panel for displaying detailed information about a selected {@code Person}.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonDetailPanel.fxml\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label nameLabel;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phoneLabel;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label emailLabel;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label addressLabel;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label memoLabel;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane detailTags;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane detailBookingTags;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"monobeartae"},"content":"    private VBox detailRequests;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private ImageView detailStarIcon;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private VBox placeholderBox;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonDetailPanel} with a default placeholder.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonDetailPanel() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showPlaceholder();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Updates the panel with the details of the given person.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson(Person person) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            showPlaceholder();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Hide placeholder and show details","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        placeholderBox.setVisible(false);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        placeholderBox.setManaged(false);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Set person details","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        nameLabel.setText(person.getName().fullName);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        phoneLabel.setText(person.getPhone().value);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        emailLabel.setText(person.getEmail().value);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        addressLabel.setText(person.getAddress().value);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        detailStarIcon.setVisible(person.getStarred());","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Clear memo","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        memoLabel.setText(\"\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Clear previous requests","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        detailRequests.getChildren().clear();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Clear previous tags","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        detailTags.getChildren().clear();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        detailBookingTags.getChildren().clear();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Add memo","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (person.getMemo() !\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            memoLabel.setText(requireNonNullElse(person.getMemo().value, \"\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"monobeartae"},"content":"            memoLabel.setWrapText(true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Add requests with a checkbox beside each","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cRequest\u003e requests \u003d person.getRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c requests.size(); i++) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Request request \u003d requests.get(i);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            // Create a HBox for each request","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            HBox hbox \u003d new HBox(10);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"monobeartae"},"content":"            hbox.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // Create the checkbox for each request","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CheckBox checkBox \u003d new CheckBox();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            checkBox.setId(\"checkbox_\" + request.requestName);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            checkBox.setSelected(request.isCompleted());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            checkBox.setMouseTransparent(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"monobeartae"},"content":"            checkBox.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"monobeartae"},"content":"            checkBox.setPadding(new Insets(1));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            // Create the label for each request","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Label requestLabel \u003d new Label(String.format(\"%d. %s\", i + 1, request.requestName));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            requestLabel.getStyleClass().add(\"detail-request\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"monobeartae"},"content":"            requestLabel.setWrapText(true);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            // Add the checkbox and label to the HBox","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            hbox.getChildren().addAll(checkBox, requestLabel);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            // Add the HBox to the detailRequests FlowPane","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            detailRequests.getChildren().add(hbox);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Add tags","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    Label tagLabel \u003d new Label(tag.tagName);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    tagLabel.getStyleClass().add(\"detail-tag\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    detailTags.getChildren().add(tagLabel);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // Add booking tags","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        person.getBookingTags().stream()","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(bookingTag -\u003e bookingTag.bookingTagName))","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .forEach(bookingTag -\u003e {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    Label bookingTagLabel \u003d new Label(bookingTag.toPrettier());","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    bookingTagLabel.getStyleClass().add(\"detail-booking-tag\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    detailBookingTags.getChildren().add(bookingTagLabel);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Shows the placeholder when no person is selected.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void showPlaceholder() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        nameLabel.setText(\"\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        phoneLabel.setText(\"\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        emailLabel.setText(\"\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        addressLabel.setText(\"\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        memoLabel.setText(\"\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        detailStarIcon.setVisible(false);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        detailTags.getChildren().clear();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        detailBookingTags.getChildren().clear();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        detailRequests.getChildren().clear();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        placeholderBox.setVisible(true);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        placeholderBox.setManaged(true);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-21","isFullCredit":false}],"authorContributionMap":{"monobeartae":7,"-":164}},{"path":"src/main/resources/view/PersonDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.CheckBox?\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cVBox styleClass\u003d\"detail-panel\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c!-- Header --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cHBox spacing\u003d\"5.0\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"nameLabel\" styleClass\u003d\"detail-name\" alignment\u003d\"CENTER_LEFT\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cImageView fx:id\u003d\"detailStarIcon\" fitWidth\u003d\"24\" fitHeight\u003d\"24\" visible\u003d\"false\"\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cimage\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/star-icon.png\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/image\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003cRegion minHeight\u003d\"20.0\" prefHeight\u003d\"20.0\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c!-- Contact information --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" vbarPolicy\u003d\"NEVER\" hbarPolicy\u003d\"NEVER\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003cVBox fx:id\u003d\"contentBox\" style\u003d\"-fx-padding: 0;\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c!-- Placeholder when no contact is selected --\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cVBox fx:id\u003d\"placeholderBox\" alignment\u003d\"CENTER\" visible\u003d\"false\" managed\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cLabel text\u003d\"Select a contact to view details\" styleClass\u003d\"placeholder-text\" /\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cGridPane vgap\u003d\"8\" hgap\u003d\"5\"\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"100\" maxWidth\u003d\"150\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c!-- Phone --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cLabel text\u003d\"Phone:\" styleClass\u003d\"detail-label\" GridPane.rowIndex\u003d\"0\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"detail-value\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"0\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c!-- Email --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cLabel text\u003d\"Email:\" styleClass\u003d\"detail-label\" GridPane.rowIndex\u003d\"1\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"emailLabel\" styleClass\u003d\"detail-value\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"1\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c!-- Address --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cLabel text\u003d\"Address:\" styleClass\u003d\"detail-label\" GridPane.rowIndex\u003d\"2\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"detail-value\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"2\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003cRegion prefHeight\u003d\"20.0\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c!-- Memo --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003cLabel text\u003d\"Memo\" styleClass\u003d\"detail-section\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"monobeartae"},"content":"      \u003cLabel fx:id\u003d\"memoLabel\" styleClass\u003d\"detail-memo\" prefWidth\u003d\"560.0\" minHeight\u003d\"100.0\" maxHeight\u003d\"200.0\"/\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003cRegion prefHeight\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c!-- Tags --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003cLabel text\u003d\"Tags\" styleClass\u003d\"detail-section\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"detailTags\" hgap\u003d\"5\" vgap\u003d\"5\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003cRegion prefHeight\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c!-- Booking Tags --\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003cLabel text\u003d\"Booking Tags\" styleClass\u003d\"detail-section\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"detailBookingTags\" hgap\u003d\"5\" vgap\u003d\"5\" /\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003cRegion prefHeight\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c!-- Requests --\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003cLabel text\u003d\"Requests\" styleClass\u003d\"detail-section\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"monobeartae"},"content":"      \u003cVBox fx:id\u003d\"detailRequests\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003c!-- A single request with a checkbox beside it --\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"10.0\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"monobeartae"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"monobeartae":3,"-":88}},{"path":"src/test/java/seedu/innsync/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.model.AddressBook;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.innsync.model.ModelManager;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.innsync.model.UserPrefs;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.innsync.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.innsync.testutil.PersonBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getPersonList().get(0), editedPerson);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getPersonList().size());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"        // Keep the person\u0027s original phone number","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(expectedModel.getPersonList().get(0), editedPerson);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_PERSONS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_PERSONS);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getPersonList().size() + 1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"varsha13152":3,"-":181}},{"path":"src/test/java/seedu/innsync/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.CARL;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.innsync.model.ModelManager;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.innsync.model.UserPrefs;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"    //test for null in constructor","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor_nullSearchCriteria_throwsNullPointerException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindCommand(null));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e firstCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        firstCriteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e secondCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        secondCriteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"second\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e phoneCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phoneCriteria.put(FindCommand.SearchType.PHONE, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e emailCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        emailCriteria.put(FindCommand.SearchType.EMAIL, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e addressCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        addressCriteria.put(FindCommand.SearchType.ADDRESS, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e tagCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagCriteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e memoCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        memoCriteria.put(FindCommand.SearchType.MEMO, Collections.singletonList(\"first\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e bookingDateCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        bookingDateCriteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"2025-06-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e bookingPropertyCriteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        bookingPropertyCriteria.put(FindCommand.SearchType.BOOKING_PROPERTY, Collections.singletonList(\"Beach\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Commands with different parameters","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Different search types","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand findFirstPhoneCommand \u003d new FindCommand(phoneCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand findFirstEmailCommand \u003d new FindCommand(emailCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findFirstAddressCommand \u003d new FindCommand(addressCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findFirstTagCommand \u003d new FindCommand(tagCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand findFirstMemoCommand \u003d new FindCommand(memoCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand findFirstBookingDateCommand \u003d new FindCommand(bookingDateCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand findFirstBookingPropertyCommand \u003d new FindCommand(bookingPropertyCriteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Same object - equal","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Null - not equal","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Different type - not equal","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Different keyword list - not equal","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Different search types - not equal","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstPhoneCommand));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstEmailCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstAddressCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstTagCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstMemoCommand));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstBookingDateCommand));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findFirstBookingPropertyCommand));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"        //test for no matches found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Use a keyword that won\u0027t match any names","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"xyzzzy\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e false); // Empty predicate to match command behavior","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"varsha13152"},"content":"    public void execute_findName_noExceptionThrown() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"varsha13152"},"content":"        //test for find name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"Alice\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_emptySearchCriteria_returnsEmptyResult() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"varsha13152"},"content":"        //test empty search criteria","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_nullKeywordInList_nullsFilteredOut() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"varsha13152"},"content":"        // test null keywords","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywordsWithNull \u003d Arrays.asList(\"valid\", null, \"keyword\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, keywordsWithNull);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_multipleSearchTypes_multiplePersonsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"varsha13152"},"content":"        //test multiple search types with multiple people found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"Kurz\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.ADDRESS, Collections.singletonList(\"tokyo\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"owes money\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, FIONA), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void execute_singleKeyword_multiplePersonsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"varsha13152"},"content":"        //test single keyword but returns multiple matches","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"Meier\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void execute_uniqueNameKeyword_onePersonFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"varsha13152"},"content":"        //test single key word with one person found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"Pauline\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(ALICE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void execute_phoneKeyword_personFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"varsha13152"},"content":"        //test search by phone number","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.PHONE, Collections.singletonList(\"87652533\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void execute_partialPhoneKeyword_multiplePersonsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"varsha13152"},"content":"        //test partial keyword match","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.PHONE, Collections.singletonList(\"9482\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA, GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void execute_emailKeyword_personFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"varsha13152"},"content":"        //test find by email keyword","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.EMAIL, Collections.singletonList(\"anna\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void execute_domainEmailKeyword_allPersonsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"varsha13152"},"content":"        //test find by email keyword which is a domain","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.EMAIL, Collections.singletonList(\"example.com\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void execute_addressKeyword_personsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"varsha13152"},"content":"        //test find by address","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.ADDRESS, Collections.singletonList(\"street\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void execute_uniqueAddressKeyword_onePersonFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"varsha13152"},"content":"        //test find by address which only returns 1 match","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.ADDRESS, Collections.singletonList(\"tokyo\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(FIONA), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void execute_tagKeyword_multiplePersonsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"varsha13152"},"content":"        //test find by tag keyword which only returns multiple matches","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"friends\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void execute_uniqueTagKeyword_onePersonFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"varsha13152"},"content":"        //test find by address keyword which only returns 1 match","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"owes money\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(BENSON), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void execute_multipleTagKeywords_multiplePersonsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"varsha13152"},"content":"        //test find by multiple tag keywords which returns multiple matches","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Arrays.asList(\"friends\", \"owes money\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public void execute_caseInsensitiveSearch_personsFound() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"varsha13152"},"content":"        //test case insensitivity","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"alice\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(ALICE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"        criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"PAULINE\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"        command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(ALICE), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"FrIeNdS\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"        command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public void execute_memoKeyword_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"varsha13152"},"content":"        //test find by memo","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.MEMO, Collections.singletonList(\"term\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(ALICE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void execute_memoCaseInsensitive_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"varsha13152"},"content":"        //test case insensitivity in memo keyword","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.MEMO, Collections.singletonList(\"FOOD\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(BENSON), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    public void execute_multipleMemoKeywords_multiplePersonsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"varsha13152"},"content":"        //test find by multiple memo keywords and multiple matches found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.MEMO, Arrays.asList(\"stay\", \"extra\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public void execute_bookingPropertyKeyword_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"varsha13152"},"content":"        //test find by booking property","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_PROPERTY, Collections.singletonList(\"Beach\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public void execute_bookingPropertyCaseInsensitive_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"varsha13152"},"content":"        //test case sensitivity of booking property keyword search","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_PROPERTY, Collections.singletonList(\"beach\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"    public void execute_bookingDateKeyword_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"varsha13152"},"content":"        //test find by booking date","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"2025-06-05\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void execute_bookingDateInvalidFormat_noExceptionThrown() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"varsha13152"},"content":"        //test invalid booking date format","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"06-05-2025\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getPersonList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"    public void execute_bookingDateStartDay_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"varsha13152"},"content":"        //test find by booking date","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"2025-06-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public void execute_bookingDateEndDay_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"varsha13152"},"content":"        //test find by booking date","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"2025-06-10\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"        assertEquals(Collections.singletonList(GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    public void execute_bookingDateOutsideRange_noPersonsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"varsha13152"},"content":"        //test find by booking date with no results","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_DATE, Collections.singletonList(\"2025-06-11\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e false); // Empty predicate to match command behavior","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"varsha13152"},"content":"    // test multiple search fields","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public void execute_multipleSearchCriteriaOr_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"Meier\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.TAG, Collections.singletonList(\"friends\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.PHONE, Collections.singletonList(\"87652533\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public void execute_bookingCriteriaWithOthers_personsFound() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"varsha13152"},"content":"        //test multiple search fields","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"George\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.BOOKING_PROPERTY, Collections.singletonList(\"Beach\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.ADDRESS, Collections.singletonList(\"street\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(command.getPredicate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getPersonList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"varsha13152"},"content":"        //test to string method","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"        Map\u003cFindCommand.SearchType, List\u003cString\u003e\u003e criteria \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"        criteria.put(FindCommand.SearchType.NAME, Collections.singletonList(\"keyword\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(criteria);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"        String expected \u003d new ToStringBuilder(findCommand)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"                .add(\"searchCriteria\", criteria)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"varsha13152":32,"-":453}},{"path":"src/test/java/seedu/innsync/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.OVERLAPPING_BOOKINGTAG_INN;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_BOOKINGTAG_BEACHHOUSE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_BOOKINGTAG_HOTEL;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.innsync.model.AddressBook;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.innsync.model.ModelManager;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.innsync.model.UserPrefs;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.innsync.testutil.PersonBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TagCommandTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_validBookingTags_success() throws Exception {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cBookingTag\u003e validBookingTags \u003d Set.of(","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new BookingTag(VALID_BOOKINGTAG_HOTEL)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .withBookingTags(VALID_BOOKINGTAG_BEACHHOUSE, VALID_BOOKINGTAG_HOTEL)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        TagCommand tagCommand \u003d new TagCommand(indexFirstPerson, null, validBookingTags);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_validTag_success() throws Exception {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        firstPerson.clearTags();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e validTags \u003d Set.of(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        TagCommand tagCommand \u003d new TagCommand(indexFirstPerson, validTags, null);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        firstPerson.clearTags();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        firstPerson.addTag(new Tag(\"friends\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_validTagsAndBookingTags_success() throws Exception {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        firstPerson.clearTags();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e validTags \u003d Set.of(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Set\u003cBookingTag\u003e validBookingTags \u003d Set.of(","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new BookingTag(VALID_BOOKINGTAG_HOTEL),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // since tag command is now additive, old tags need to be added manually","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withBookingTags(VALID_BOOKINGTAG_HOTEL, VALID_BOOKINGTAG_BEACHHOUSE)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        TagCommand tagCommand \u003d new TagCommand(indexFirstPerson, validTags, validBookingTags);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        firstPerson.clearTags();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        firstPerson.addTag(new Tag(\"friends\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_validIndex_unsuccessful() throws CommandException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Index has needs to have friends tag (Index 1 has it)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index indexFirstPerson \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Tag validTag \u003d new Tag(\"friends\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e validTags \u003d Set.of(validTag);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        TagCommand tagCommand \u003d new TagCommand(indexFirstPerson, validTags, null);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(tagCommand, model, String.format(Messages.MESSAGE_DUPLICATE_FIELD, validTag));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getPersonList().size() + 1);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        TagCommand command \u003d new TagCommand(outOfBoundIndex, null, null);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_overlappingBookingTags_failure() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getPersonList().size());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"iuhiah"},"content":"        BookingTag originalBookingTag \u003d new BookingTag(VALID_BOOKINGTAG_HOTEL);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        BookingTag overlappingBookingTag \u003d new BookingTag(OVERLAPPING_BOOKINGTAG_INN);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        TagCommand bookingTagCommand \u003d new TagCommand(indexLastPerson, null,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Set.of(originalBookingTag, overlappingBookingTag));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"iuhiah"},"content":"        String expectedMessage1 \u003d String.format(TagCommand.MESSAGE_FAILURE_OVERLAP, overlappingBookingTag.toPrettier());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"iuhiah"},"content":"        String expectedMessage2 \u003d String.format(TagCommand.MESSAGE_FAILURE_OVERLAP, originalBookingTag.toPrettier());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(bookingTagCommand, model, new String[] {expectedMessage1, expectedMessage2});","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final TagCommand standardCommand \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Set.of(new Tag(VALID_TAG_FRIEND)),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                Set.of(new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE)));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        TagCommand commandWithSameValues \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                Set.of(new Tag(VALID_TAG_FRIEND)),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                Set.of(new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE)));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(commandWithSameValues, standardCommand);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new TagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                Set.of(new Tag(VALID_TAG_FRIEND)),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Set.of(new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE)))));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        TagCommand tagCommand \u003d new TagCommand(targetIndex, Set.of(new Tag(VALID_TAG_FRIEND)),","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                Set.of(new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE)));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String expected \u003d TagCommand.class.getCanonicalName() + \"{index\u003d\" + targetIndex","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + \", tagList\u003d[\" + new Tag(VALID_TAG_FRIEND)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + \"], bookingTagList\u003d[\" + new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE) + \"]}\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expected, tagCommand.toString());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"iuhiah":3,"-":189}},{"path":"src/test/java/seedu/innsync/logic/commands/UntagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_BOOKINGTAG_BEACHHOUSE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_BOOKINGTAG_HOTEL;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.AddressBook;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.innsync.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.innsync.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.innsync.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"iuhiah"},"content":"import seedu.innsync.model.tag.BookingTag;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.innsync.testutil.PersonBuilder;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class UntagCommandTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_removeValidBookingTag_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person taggedPerson \u003d new PersonBuilder().withBookingTags(VALID_BOOKINGTAG_BEACHHOUSE).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.addPerson(taggedPerson);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(model.getPersonList().indexOf(taggedPerson));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(taggedPerson).withBookingTags().build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(editedPerson);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"iuhiah"},"content":"        BookingTag bookingTagToRemove \u003d new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(index, null, bookingTagToRemove);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"iuhiah"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_SUCCESS, bookingTagToRemove.toPrettier());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(untagCommand, model, expectedMessage, expectedModel, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_removeValidTag_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d model.getPersonList().get(index.getZeroBased());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"iuhiah"},"content":"        Person personToEditCopy \u003d new PersonBuilder(personToEdit).build();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"iuhiah"},"content":"        Tag tagToRemove \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"iuhiah"},"content":"        personToEdit.addTag(tagToRemove);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"iuhiah"},"content":"        assertTrue(personToEdit.getTags().contains(new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(index, tagToRemove, null);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_SUCCESS, tagToRemove);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"iuhiah"},"content":"        expectedModel.setPerson(personToEdit, personToEditCopy);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"iuhiah"},"content":"        assertCommandSuccess(untagCommand, model, expectedMessage, expectedModel, personToEditCopy);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"iuhiah"},"content":"        personToEdit.removeTag(tagToRemove);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"iuhiah"},"content":"        assertTrue(!personToEdit.getTags().contains(tagToRemove));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_removeNonExistingBookingTag_failure() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"iuhiah"},"content":"        BookingTag bookingTagToRemove \u003d new BookingTag(VALID_BOOKINGTAG_HOTEL);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(index, null, bookingTagToRemove);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"iuhiah"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_FAILURE_BOOKINGTAG,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"iuhiah"},"content":"                bookingTagToRemove.toPrettier());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, expectedMessage);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_removeNonExistingTag_failure() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Tag tagToRemove \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(index, tagToRemove, null);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_FAILURE_TAG, tagToRemove);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, expectedMessage);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getPersonList().size() + 1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(outOfBoundIndex, new Tag(VALID_TAG_HUSBAND), null);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void removeTagsPerson() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Tag tagToRemove \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(targetIndex, tagToRemove, null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, String.format(UntagCommand.MESSAGE_FAILURE_TAG, tagToRemove));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagFirstCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, new Tag(\"testTag1\"),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"iuhiah"},"content":"                new BookingTag(VALID_BOOKINGTAG_HOTEL));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagSecondCommand \u003d new UntagCommand(INDEX_SECOND_PERSON, new Tag(\"testTag2\"),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"iuhiah"},"content":"                new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(untagFirstCommand.equals(untagFirstCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UntagCommand untagFirstCommandCopy \u003d new UntagCommand(INDEX_FIRST_PERSON, new Tag(\"testTag1\"),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"iuhiah"},"content":"                new BookingTag(VALID_BOOKINGTAG_HOTEL));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(untagFirstCommand.equals(untagFirstCommandCopy));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(untagFirstCommand.equals(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(untagFirstCommand.equals(null));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(untagFirstCommand.equals(untagSecondCommand));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void hasConfirmationTest_returnsFalse() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(targetIndex, new Tag(VALID_TAG_HUSBAND), null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(untagCommand.requireConfirmation());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"iuhiah"},"content":"    // NOTE: BOOKING TAG TO STRING IS NOT FULLY CORRECT","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"iuhiah"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(targetIndex, new Tag(\"test1\"),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"iuhiah"},"content":"                new BookingTag(VALID_BOOKINGTAG_HOTEL));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String expected1 \u003d UntagCommand.class.getCanonicalName() + \"{index\u003d\" + targetIndex","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + \", tag\u003d[test1]\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"iuhiah"},"content":"                + \", bookingTag\u003d[[Hotel]]}\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expected1, untagCommand.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"iuhiah"},"content":"        untagCommand \u003d new UntagCommand(targetIndex, null, new BookingTag(VALID_BOOKINGTAG_HOTEL));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expected2 \u003d UntagCommand.class.getCanonicalName() + \"{index\u003d\" + targetIndex","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + \", tag\u003dnull\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"iuhiah"},"content":"                + \", bookingTag\u003d[[Hotel]]}\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expected2, untagCommand.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        untagCommand \u003d new UntagCommand(targetIndex, new Tag(\"test1\"), null);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expected3 \u003d UntagCommand.class.getCanonicalName() + \"{index\u003d\" + targetIndex","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + \", tag\u003d[test1]\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + \", bookingTag\u003d[null]}\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expected3, untagCommand.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"iuhiah":29,"-":141}},{"path":"src/test/java/seedu/innsync/logic/parser/DeleteRequestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_PARSE_EXCEPTION;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.DeleteRequestCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteRequestCommandParserTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private DeleteRequestCommandParser parser \u003d new DeleteRequestCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteRequestCommand() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Valid contact index and request index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Index contactIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Index requestIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1 r/1\", new DeleteRequestCommand(contactIndex, requestIndex));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // Different valid indices","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        contactIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requestIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"2 r/2\", new DeleteRequestCommand(contactIndex, requestIndex));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidContactIndex_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // Non-numeric contact index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a r/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Negative contact index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-1 r/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Zero contact index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0 r/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_invalidRequestIndex_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Non-numeric request index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 r/a\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Reshiro"},"content":"                DeleteRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Negative request index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 r/-1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Reshiro"},"content":"                DeleteRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Zero request index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 r/0\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Reshiro"},"content":"                DeleteRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingRequestIndex_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // No request index provided (missing r/ prefix)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Empty request index","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 r/\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Reshiro"},"content":"                DeleteRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT, DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_missingAllArgs_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Empty input","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                DeleteRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":4,"-":75}},{"path":"src/test/java/seedu/innsync/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Emoticons;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.FindCommand;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.FindCommand.SearchType;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void validateArgsNotNull_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    //test empty keywords in find command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_emptyKeywords_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find n/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after n/ when searching by name. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find p/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after p/ when searching by phone number. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find e/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after e/ when searching by email. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find a/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after a/ when searching by address. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find t/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after t/ when searching by tag. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find m/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after m/ when searching by memo. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find bd/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after bd/ when searching by booking date. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find bp/\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \"Error: Please enter a keyword after bp/ \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        + \"when searching by booking property. \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_validArgsNoPrefix_returnsFindCommand() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"        //test parsing of single prefix","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/Alice n/Bob\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            assertEquals(1, criteria.size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"            //test parsing of multiple prefix","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/Alice\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            assertEquals(1, criteria.size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        //test parsing of names with special characters","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"            FindCommand command \u003d parser.parse(\"find n/muthu $a/p vara\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/O\u0027Neil Smith-Jones\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varsha13152"},"content":"        //test parsing of phone numbers","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find p/12345678\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.PHONE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find p/12345678 p/87654321\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.PHONE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find p/+12345678\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.PHONE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"varsha13152"},"content":"        //test parsing of email addresses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find e/test@example.com\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.EMAIL));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find e/test.user-name@example.com\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.EMAIL));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_validMemoArgs_returnsFindCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"varsha13152"},"content":"        //test parsing of memo","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find m/important\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.MEMO));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find m/call back urgent\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.MEMO));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find m/Meeting scheduled for 10:30 AM! m/find food\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.MEMO));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_validBookingDateArgs_returnsFindCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"varsha13152"},"content":"        //test parsing of booking dates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bd/2025-06-01\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_DATE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bd/2025-06-01 bd/2025-07-15\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_DATE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_validBookingPropertyArgs_returnsFindCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"varsha13152"},"content":"        //test parsing of booking property","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bp/Beach House\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_PROPERTY));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bp/Beach bp/House\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_PROPERTY));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bp/Beach-Villa bp/Resort123\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_PROPERTY));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parse_multipleValidFields_returnsFindCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"varsha13152"},"content":"        //test parsing of multiple search prefixes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/John p/12345678\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.PHONE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_mixedFormatWithNewPrefixes_returnsFindCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"varsha13152"},"content":"        //test parsing of multiple search prefixes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/John m/important\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.MEMO));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parse_validAddressArgs_returnsFindCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"varsha13152"},"content":"        //test parsing of addresses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find a/Clementi Ave 6\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.ADDRESS));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find a/Blk 123 #01-456\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.ADDRESS));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void parse_validTagArgs_returnsFindCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"varsha13152"},"content":"        //test parsing of tags","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find t/friends\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.TAG));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find t/friends t/family t/colleagues\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.TAG));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"varsha13152"},"content":"        //test usage of invalid prefix","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find x/keyword\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public void parse_invalidNameFormat_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid name value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"        String longName \u003d \"A\".repeat(256);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find n/\" + longName,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"                \"Error: Name values should not exceed 170 characters. Invalid keyword(s): \" + longName","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"                        + \" \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void parse_invalidPhoneFormat_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid phone value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find p/123abc\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"                \"Error: Invalid phone format. Phone numbers should contain digits, with an optional \u0027+\u0027 \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"                        + \"at the beginning. Invalid keyword(s): 123abc \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find p/abc+123456\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"                \"Error: Invalid phone format. Phone numbers should contain digits, with an optional \u0027+\u0027 \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"                        + \"at the beginning. Invalid keyword(s): abc+123456 \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void parse_invalidEmailFormat_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid email value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        String expectedMessage1 \u003d \"Error: Invalid email format. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"                + \"Email values may only contain alphanumeric characters, \u0027@\u0027, and these special characters: + _ . - \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"                + \"Invalid keyword(s): invalid,email \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        String expectedMessage2 \u003d \"Error: Invalid email format. \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"                + \"Email values may only contain alphanumeric characters, \u0027@\u0027, and these special characters: + _ . - \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"                + \"Invalid keyword(s): test)com \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find e/invalid,email\", expectedMessage1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find e/test)com\", expectedMessage2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public void parse_invalidAddressFormat_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"varsha13152"},"content":"        //test parsing of address value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        String longAddress \u003d \"A\".repeat(501); // Create a 501-character address","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Error: Address values should not exceed 500 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"                + longAddress + \" \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find a/\" + longAddress, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    public void parse_invalidTagFormat_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid tag value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"varsha13152"},"content":"        String longTag \u003d \"A\".repeat(256);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Error: Tag values should not exceed 170 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"                + longTag + \" \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find t/\" + longTag, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void parse_invalidMemoFormat_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid memo value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"        String longMemo \u003d \"A\".repeat(501);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Error: Memo values should not exceed 500 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"                + longMemo + \" \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find m/\" + longMemo, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"    public void parse_invalidBookingDateFormat_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"varsha13152"},"content":"        //test parsing of invalid date format","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"        String msg1 \u003d \"Error: Invalid booking date format. Dates should be in the format yyyy-MM-dd \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"                + \"(e.g., 2024-10-15). Invalid keyword(s): 20-06-2025 \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"        String msg2 \u003d \"Error: Invalid booking date format. Dates should be in the format yyyy-MM-dd \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"                + \"(e.g., 2024-10-15). Invalid keyword(s): 2025/06/01 \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find bd/2025/06/01\", msg2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"varsha13152"},"content":"    //test parsing of invalid booking property value","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"    public void parse_invalidBookingPropertyFormat_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        String longProperty \u003d \"A\".repeat(256); // Create a 256-character property name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Error: Booking property values should not exceed 170 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"                + longProperty + \" \" + Emoticons.ANGRY;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find bp/\" + longProperty, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"varsha13152"},"content":"    //test parsing of multiple invalid values","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"    public void parse_mixedValidInvalidKeywords_throwsParseException() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find p/12345678 p/9876-5432\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"                \"Error: Invalid phone format. Phone numbers should contain digits, with an optional \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"                        + \"\u0027+\u0027 at the beginning. Invalid keyword(s): 9876-5432 \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find bd/2025-06-01 bd/06-01-2025\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"                \"Error: Invalid booking date format. Dates should be in the format yyyy-MM-dd \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"                        + \"(e.g., 2024-10-15). Invalid keyword(s): 06-01-2025 \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"        // Test with excessive character length keywords mixed with valid ones","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"        String longName \u003d \"A\".repeat(256);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find n/John n/\" + longName,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"                \"Error: Name values should not exceed 170 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"                        + longName + \" \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        String longTag \u003d \"T\".repeat(256);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find t/friends t/\" + longTag,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"                \"Error: Tag values should not exceed 170 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"                        + longTag + \" \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"        String longMemo \u003d \"M\".repeat(501);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"find m/important m/\" + longMemo,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"                \"Error: Memo values should not exceed 500 characters. Invalid keyword(s): \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"                        + longMemo + \" \" + Emoticons.ANGRY);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"varsha13152"},"content":"    //test parsing of all search prefixes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public void parse_allValidFieldsTogether_returnsFindCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find n/John p/12345678 e/john@example.com a/Clementi t/friends \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    + \"m/important bd/2025-06-01 bp/Beach\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.NAME));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.PHONE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.EMAIL));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.ADDRESS));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.TAG));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.MEMO));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_DATE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_PROPERTY));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"varsha13152"},"content":"    //test parsing of invalid email values","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"    public void parse_edgeCasesInValidation_handledCorrectly() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find e/john.doe_123+test@example-domain.com\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"            assertEquals(1, criteria.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.EMAIL));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"varsha13152"},"content":"    //test parsing of date format","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public void parse_dateFormatValidation_worksProperly() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"            FindCommand command \u003d parser.parse(\"find bd/2024-02-29\"); // Leap year","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"            Map\u003cSearchType, List\u003cString\u003e\u003e criteria \u003d command.getSearchCriteria();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"            assertTrue(criteria.containsKey(SearchType.BOOKING_DATE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"            fail(\"Failed to parse valid input: \" + pe.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"varsha13152":28,"-":428}},{"path":"src/test/java/seedu/innsync/logic/parser/MarkRequestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_PARSE_EXCEPTION;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.MarkRequestCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class MarkRequestCommandParserTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private MarkRequestCommandParser parser \u003d new MarkRequestCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsMarkRequestCommand() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_REQUEST + \"1\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new MarkRequestCommand(INDEX_FIRST_PERSON, Index.fromZeroBased(1)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_multipleRequest_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_REQUEST + \"1 \" + PREFIX_REQUEST + \"2\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_REQUEST)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a r/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_invalidRequestIndex_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String exceedMaxInt \u003d \"2147483648\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/\" + exceedMaxInt, String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Reshiro"},"content":"                MarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Reshiro"},"content":"                MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Reshiro"},"content":"        // Non-numeric request index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/a\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Reshiro"},"content":"                MarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Reshiro"},"content":"                MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Reshiro"},"content":"        // Zero request index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/0\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Reshiro"},"content":"                MarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                MarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Reshiro":12,"-":50}},{"path":"src/test/java/seedu/innsync/logic/parser/UnmarkRequestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_PARSE_EXCEPTION;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.commons.core.index.Index;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.UnmarkRequestCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UnmarkRequestCommandParserTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private UnmarkRequestCommandParser parser \u003d new UnmarkRequestCommandParser();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsMarkRequestCommand() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_REQUEST + \"1\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new UnmarkRequestCommand(INDEX_FIRST_PERSON, Index.fromZeroBased(1)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String exceedMaxInt \u003d \"2147483648\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, exceedMaxInt + \" r/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_invalidRequestIndex_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String exceedMaxInt \u003d \"2147483648\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/\" + exceedMaxInt, String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Reshiro"},"content":"                UnmarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Reshiro"},"content":"                UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Reshiro"},"content":"        // Non-numeric request index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/a\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Reshiro"},"content":"                UnmarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Reshiro"},"content":"                UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Reshiro"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Reshiro"},"content":"        // Zero request index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Reshiro"},"content":"        assertParseFailure(parser, \"1 r/0\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Reshiro"},"content":"                UnmarkRequestCommand.MESSAGE_INVALID_REQUEST_INDEX_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                UnmarkRequestCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_multipleRequest_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_REQUEST + \"1 \" + PREFIX_REQUEST + \"2\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                String.format(Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REQUEST)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Reshiro":12,"-":52}},{"path":"src/test/java/seedu/innsync/logic/parser/UnstarCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.UnstarCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the UnstarCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the UnstarCommand, and therefore we test only one of them.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UnstarCommandParserTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UnstarCommandParser parser \u003d new UnstarCommandParser();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsUnstarCommand() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new UnstarCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, UnstarCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"monobeartae"},"content":"        assertParseFailure(parser, \"-1\", String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"monobeartae"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, UnstarCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"monobeartae"},"content":"        assertParseFailure(parser, \"0\", String.format(Messages.MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"monobeartae"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX, UnstarCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"monobeartae":4,"-":33}},{"path":"src/test/java/seedu/innsync/logic/parser/UntagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.logic.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.Messages.MESSAGE_PARSE_EXCEPTION;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.Messages;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.innsync.logic.commands.UntagCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UntagCommandParserTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private UntagCommandParser parser \u003d new UntagCommandParser();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsUntagCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1 t/\" + VALID_TAG_FRIEND,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"iuhiah"},"content":"                new UntagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND), null));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_multipleTags_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 t/friend t/husband\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_TAG)));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a t/1\", String.format(MESSAGE_PARSE_EXCEPTION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"iuhiah":1,"-":42}},{"path":"src/test/java/seedu/innsync/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.person;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_REQUEST_AMY;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.TypicalPersons.BOB;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.exceptions.DuplicateRequestException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.innsync.model.request.exceptions.RequestNotFoundException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.innsync.testutil.PersonBuilder;","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"        // different name but same phone and email -\u003e should be considered same person","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        // same name but different phone and email -\u003e should not be considered same person","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"        Person differentContactDetails \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"        assertFalse(ALICE.isSamePerson(differentContactDetails));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"        // different name, different phone, different email -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"        Person completelyDifferent \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"        assertFalse(ALICE.isSamePerson(completelyDifferent));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"        // same phone but different email -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"        Person samePhoneDifferentEmail \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"                .withPhone(ALICE.getPhone().value)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"        assertFalse(ALICE.isSamePerson(samePhoneDifferentEmail));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"        // same email but different phone -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"        Person sameEmailDifferentPhone \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"                .withEmail(ALICE.getEmail().value).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"        assertFalse(ALICE.isSamePerson(sameEmailDifferentPhone));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", memo\u003d\" + ALICE.getMemo()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + \", requests\u003d\" + ALICE.getRequests()","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + \", bookingTags\u003d\" + ALICE.getBookingTags() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + \", starred\u003d\" + ALICE.getStarred() + \"}\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void testClearRequests() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        aliceCopy.clearRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(aliceCopy.getRequests().isEmpty());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void testAddRequest() throws DuplicateRequestException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Request newRequest \u003d new Request(VALID_REQUEST_AMY);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        aliceCopy.clearRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        aliceCopy.addRequest(newRequest);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(aliceCopy.getRequests().contains(newRequest));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void testAddDuplicateRequestThrowsException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        aliceCopy.clearRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Request duplicateRequest \u003d new Request(VALID_REQUEST_AMY);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        aliceCopy.addRequest(new Request(VALID_REQUEST_AMY));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(DuplicateRequestException.class, () -\u003e aliceCopy.addRequest(duplicateRequest));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void testRemoveRequest() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Request request \u003d new Request(VALID_REQUEST_AMY);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        aliceCopy.clearRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        aliceCopy.addRequest(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        aliceCopy.removeRequest(request);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(aliceCopy.getRequests().contains(request));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void testRemoveRequestThrowsExceptionIfNotFound() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        aliceCopy.clearRequests();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Request nonExistentRequest \u003d new Request(VALID_REQUEST_AMY);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(RequestNotFoundException.class, () -\u003e aliceCopy.removeRequest(nonExistentRequest));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"varsha13152":25,"-":141}},{"path":"src/test/java/seedu/innsync/model/tag/BookingTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.innsync.model.tag;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_BOOKINGTAG_BEACHHOUSE;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.innsync.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class BookingTagTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BookingTag(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidBookingTag() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null booking tag","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e BookingTag.isValidBookingTag(null));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void invalidBookingTag() {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid date booking tag","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(() -\u003e BookingTag.isValidBookingTag(\"test to/020-10-10 to/2020-10-10\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(() -\u003e BookingTag.isValidBookingTag(\"test from/020-10-10 to/2020-10-10\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void constructor_validBookingTag_success() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        BookingTag bookingTag \u003d new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"Beach House\", bookingTag.bookingTagName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(LocalDate.of(2025, 6, 1), bookingTag.startDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(LocalDate.of(2025, 6, 10), bookingTag.endDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void constructor_validLeapYearBookingTag_success() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        BookingTag bookingTag \u003d new BookingTag(\"LeapYear from/2024-02-29 to/2024-03-01\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"LeapYear\", bookingTag.bookingTagName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(LocalDate.of(2024, 2, 29), bookingTag.startDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(LocalDate.of(2024, 3, 1), bookingTag.endDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void constructor_invalidLeapYearBookingTag_throwsIllegalArgumentException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"LeapYear from/2024-02-30 to/2024-03-01\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"LeapYear from/2024-01-29 to/2024-02-30\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"iuhiah"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"iuhiah"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"NotLeapYear from/2025-02-29 to/2025-03-01\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"iuhiah"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"NotLeapYear from/2025-01-29 to/2025-02-29\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void constructor_invalidBookingTag_throwsIllegalArgumentException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // missing tokens","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"InvalidTag\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"Resort from/2025-06-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"Resort to/2025-06-10\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // months without 31 days","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"Hotel from/2025-06-31 to/2025-07-01\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"Hotel from/2025-03-10 to/2025-04-31\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // start date after end date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookingTag(\"Hotel from/2025-06-10 to/2025-06-01\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void isValidBookingTagName_validFormat_returnsTrue() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(BookingTag.isValidBookingTag(VALID_BOOKINGTAG_BEACHHOUSE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void isValidBookingTagName_invalidFormat_returnsFalse() {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(BookingTag.isValidBookingTag(\"House 2025-07-01 to/2025-07-05\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(BookingTag.isValidBookingTag(\"Apartment from/2025-07-05 to/2025-07-01\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(BookingTag.isValidBookingTag(\"Bungalow from/2025-07-01\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void equals_sameBookingTag_returnsTrue() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final BookingTag tag1 \u003d new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final BookingTag tag2 \u003d new BookingTag(\"Beach House from/2025-06-01 to/2025-06-10\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(tag1, tag2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void equals_exactlyTheSameBookingTag_returnsTrue() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final BookingTag tag \u003d new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(tag, tag);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void equals_null_returnsFalse() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final BookingTag tag \u003d new BookingTag(VALID_BOOKINGTAG_BEACHHOUSE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertNotEquals(tag, null);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void equals_differentBookingTag_returnsFalse() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        BookingTag tag1 \u003d new BookingTag(\"Mansion from/2025-08-01 to/2025-08-10\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        BookingTag tag2 \u003d new BookingTag(\"Cabin from/2025-08-01 to/2025-08-10\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertNotEquals(tag1, tag2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"iuhiah":3,"-":109}},{"path":"src/test/java/seedu/innsync/storage/JsonAdaptedRequestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"monobeartae"},"content":"package seedu.innsync.storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"monobeartae"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"monobeartae"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_REQUEST_AMY;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"monobeartae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"monobeartae"},"content":"import seedu.innsync.model.request.Request;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"monobeartae"},"content":"public class JsonAdaptedRequestTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"monobeartae"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"monobeartae"},"content":"    public void toModelType_validRequestDetails_returnsRequest() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"monobeartae"},"content":"        Request request \u003d new Request(VALID_REQUEST_AMY);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"monobeartae"},"content":"        JsonAdaptedRequest jsonRequest \u003d new JsonAdaptedRequest(request);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"monobeartae"},"content":"        assertEquals(request, jsonRequest.toModelType());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"monobeartae"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"monobeartae"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"monobeartae":17}},{"path":"src/test/java/seedu/innsync/storage/JsonAdaptedTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"monobeartae"},"content":"package seedu.innsync.storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"monobeartae"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"monobeartae"},"content":"import static seedu.innsync.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"monobeartae"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"monobeartae"},"content":"import seedu.innsync.model.tag.Tag;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"monobeartae"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"monobeartae"},"content":"public class JsonAdaptedTagTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"monobeartae"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"monobeartae"},"content":"    public void toModelType_validTagDetails_returnsTag() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"monobeartae"},"content":"        Tag tag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"monobeartae"},"content":"        JsonAdaptedTag jsonTag \u003d new JsonAdaptedTag(VALID_TAG_FRIEND);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"monobeartae"},"content":"        assertEquals(tag, jsonTag.toModelType());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"monobeartae"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"monobeartae"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"monobeartae":18}}]
