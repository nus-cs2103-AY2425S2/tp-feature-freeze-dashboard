[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# CareBook Developer Guide","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shuang26"},"content":"Some of CareBook features are adapted from the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"As such, CareBook contains some of the code and documentation from AddressBook-Level3. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"The list of third-party libraries used are: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete A10A`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete A10A\")` API call as an example.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete A10A` Command\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteStudentCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteStudentCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteStudentCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a student).\u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the CareBook data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* can save both CareBook data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"* Daycare teacher managing daily rosters of 30 to 40 students (aged 1 to 12)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"* Can type fast","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Value proposition**: CareBook helps daycare teachers manage classroom and parent communication by providing instant CLI access to students’, parents’, colleagues’ contacts and streamlining repetitive tasks like daily attendance and maintaining student records.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"| Priority | As a …​                              | I want to …​                                                                               | So that I can…​                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"|----------|--------------------------------------|--------------------------------------------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `* * *`  | potential user exploring the product | see the instruction guide                                                                  | easily know how the app works                             |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"| `* * *`  | daycare teacher                      | view the students\u0027 and parents\u0027 contacts                                                   | disseminate information to them                           |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"| `* * *`  | daycare teacher                      | add student details to the system                                                          | keep records up to date as children enrol or leave        |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* * *`  | daycare teacher                      | remove student details from the system                                                     | keep records up to date as children enrol or leave        |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `* * *`  | forgetful teacher                    | search for contacts by phone number                                                        | quickly identify who is calling/who to call               |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"| `* * *`  | daycare teacher                      | mark students as present                                                                   | efficiently take attendance during busy mornings          |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | quickly search for a child\u0027s emergency contact details                                     | immediately inform parents in case of emergencies         |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | generate a summary of daily/monthly attendance                                             | track attendance accurately                               |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"| `* *`    | new user                             | copy-paste the parents\u0027 contacts from the app                                              | easily send an email to all parents                       |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"| `* *`    | forgetful user                       | filter the students in my class by subjects                                                | plan the class for the day better                         |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | view all classes scheduled for the day                                                     | prepare for my daily routine                              |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | make a note of my student (e.g., behaviour, meals, incidents)                              | keep track of important details                           |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | edit student details from the system                                                       | keep records up to date as children enrol or leave        |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | export student details                                                                     | transfer student details to other systems                 |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | export parent details                                                                      | transfer parent details to other systems                  |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | filter students by age group                                                               | access information for age-based activities               |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | create a custom group for students                                                         | organise activities for special occasions                 |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | flag important information (e.g. medical conditions/allergies) about a student             | quickly access important details in times of crisis       |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | access an audit log of student information updates                                         | track when and what information was modified              |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | record students\u0027 absence with their reasons                                                | maintain accurate records and organise makeup lessons     |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | see which students share the same emergency contact                                        | coordinate communication for siblings in the class        |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | view basic student information (age, name, class) without accessing their complete records | quickly identify students                                 |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | receive alerts when a student\u0027s information is updated                                     | stay informed about important changes                     |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| `* *`    | daycare teacher                      | undo previous commands                                                                     | revert any errors                                         |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"| `*`      | daycare teacher                      | schedule and send pre-set messages to parents                                              | remind them about upcoming events or tasks effortlessly   |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `*`      | daycare teacher                      | receive automated alerts if a child is absent for multiple days                            | follow up with parents if needed                          |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `*`      | daycare teacher                      | set reminders for student-specific events (e.g., medication time)                          | avoid missing important occasions                         |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"| `*`      | expert user                          | sort students\u0027 records by various criteria (e.g., name)                                    | find information more efficiently                         |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"| `*`      | forgetful user                       | set a preferred name for each student                                                      | remember their names and address them properly            |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `*`      | daycare teacher                      | see attendance trends over a certain period                                                | identify students who have been missing classes           |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"| `*`      | daycare teacher                      | print a list of students with their emergency contacts as a PDF                            | have a copy for quick reference in case of a power outage |","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `CareBook` and the **Actor** is the `Daycare Teacher`, unless specified otherwise.)\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"#### Use case: UC1 - Add a New Student ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"1. User requests to add a student. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"2. CareBook validates student details (student name, parent name, student ID, phone number, email address and address). ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"3. CareBook adds the new student. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"4. CareBook confirms successful addition.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid  student name, parent name, student ID, phone number, email address, or address.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"* 2b. CareBook detects a duplicate student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"* 2c. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"  * 2c1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"#### Use case: UC2 - Edit a Student ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"1. User requests to edit a student with new details by using student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"2. CareBook verifies that the student exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"3. CareBook updates the student with the new details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"4. CareBook confirms successful edit.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid student ID or is unable to find student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"#### Use case: UC3 - Delete a Student ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"1. User requests to delete a student by student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"2. CareBook verifies that the student exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"3. CareBook removes the student.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"4. CareBook confirms successful removal.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid student ID or is unable to find student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"#### Use case: UC4 - View All Students","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. User requests to list all students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"2. CareBook displays a list of all students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an empty list of students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"#### Use case: UC5 - Find a Student by Student ID","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"1. User requests to find a student by student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"2. CareBook verifies that the student exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"3. CareBook retrieves the student’s details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"4. CareBook displays the student’s information.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid student ID or is unable to find student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"#### Use case: UC6 - Mark a Student Attendance as Present","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. User requests to mark a student as present by student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"2. CareBook verifies that the student exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"3. CareBook updates the attendance record for that student.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"4. CareBook confirms that the student has been marked present.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid student ID or is unable to find student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"#### Use case: UC7 - Mark a Student Attendance as Absent","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. User requests to mark a student as absent by student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"2. CareBook verifies that the student exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"3. CareBook updates the attendance record for that student.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"4. CareBook confirms that the student has been marked absent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid student ID or is unable to find student ID.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an incorrect command format or unknown command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"#### Use case: UC8 - Clear All Students","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. User requests to clear all students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"2. CareBook clears all students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"#### Use case: UC9 - View the Instruction Guide","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. User requests for help.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"2. CareBook displays a list of all commands, their respective parameters, and an example of usage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"#### Use case: UC10 - Mark All Students Attendance as Present","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. User requests to mark all students as present.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"2. CareBook updates the attendance record for every student as present.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"3. CareBook confirms that all students have been marked present.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an empty list of students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"#### Use case: UC11 - Mark All Students Attendance as Absent","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"shuang26"},"content":"1. User requests to mark all students as absent.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"2. CareBook updates the attendance record for every student as absent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"3. CareBook confirms that all students have been marked absent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"shuang26"},"content":"   Use case ends.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"shuang26"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"shuang26"},"content":"**Extensions**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"shuang26"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an empty list of students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"#### Use case: UC12 - Export All Students Information","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. User requests to export all students information with a filename.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"2. CareBook saves all students information into the directory where the CareBook application is located.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"shuang26"},"content":"   Use case ends.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"shuang26"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"shuang26"},"content":"**Extensions**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"shuang26"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"* 2a. CareBook detects an invalid filename.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"    * 2a1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"* 2b. CareBook detects an empty list of students.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"    * 2b1. CareBook displays an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 50 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"3.  System does not take more than 1s to load all data from files when launching.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"4.  All commands execute in less than 1s, including saving of data to files.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"6.  Commands should be intuitive and easy to remember.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"7.  Data should be saved after each change-causing command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"8.  Error messages should offer support to user (help user get the right commands).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"9.  The app should not require complex installation steps.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"10. It should be a lightweight application (\u003c100MB) and not require additional dependencies beyond Java.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"shuang26"},"content":"* **Command**: An instruction entered by the Daycare Teacher into the CareBook system to perform a specific action (e.g., \"add\", \"delete\", \"find\", \"list\", \"mark\", \"help\").","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"shuang26"},"content":"* **Command Format**: The required structure and syntax for a command, including any necessary parameters (e.g., \"add \u003csn/StudentName\u003e \u003cid/StudentId\u003e \u003cpn/ParentName\u003e \u003cp/Phone\u003e \u003ce/Email\u003e \u003ca/Address\u003e\" for adding a student).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"* **Daycare Teacher**: The primary user of the CareBook application, responsible for managing student records and attendance.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"* **Student Record**: A set of data representing a student\u0027s personal information, including details like student ID, name, parent contact, and attendance.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"* **Validation**: The system’s process of checking that entered data (e.g., Student ID, ParentPhoneNumber) meets predefined rules before accepting it.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"#### Launch and shutdown","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. **Initial launch**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"   1. Download the `CareBook.jar` file and copy into an empty folder","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"   2. Ensure you have `Java 17` or above installed in your computer. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"   3. Open a command terminal, `cd` into the folder you placed your .jar file and type `java -jar CareBook.jar` and press enter to run CareBook application.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"      **Expected:** ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"      * Shows the GUI with a set of sample students. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"      * The window size may not be optimum.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"2. **Saving window preferences**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"   1. Re-launch the app by typing `java -jar CareBook.jar` and pressing enter.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"      **Expected**: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"      * The most recent window size and location is retained.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"3. **Verifying Logs during launch**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"   1. Launch the app by typing `java -jar CareBook.jar` and pressing enter.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"   2. Observe the logs printed in the terminal during startup.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"      **Expected**: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"      * Logs should be displayed with appropriate timestamps.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"      * Warnings about JavaFX configuration may appear but should not affect functionality. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"#### Deleting a student","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. **Deleting a student while all students are being shown**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Test case: `delete A10A`\u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"      **Expected**: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"      * Student with ID A10A is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Test case: `delete A99Z`\u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"      **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"      * No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete a10a`, `...` (where student ID is not capitalised)\u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"      **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"      * Similar to previous.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"2.  **Deleting a Student When No Students Are Displayed**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"    1. Prerequisites: Clear the list using the `clear` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"    2. Test case: `delete A99Z`\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"       **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"       * No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"#### Saving data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"1. **Dealing with missing data files**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"   1. Navigate to the application\u0027s `data` directory.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"   2. Delete or rename the data file (e.g., addressbook.json). ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"   3. Launch the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"      **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"       * The application should create a new default data file if one does not exist.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"       * The list of students should contain default sample student data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"       * A warning message (e.g., “Creating a new data file data\\addressbook.json populated with a sample AddressBook.”) should be logged.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"2. **Dealing with corrupted data files**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"    1. Navigate to the application\u0027s `data` directory and open `addressbook.json` in a text editor.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"    2. Modify the content to be invalid JSON (e.g., remove a closing brace or change a key name to an invalid format).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"    3. Save the file and launch the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"       **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"        * The application should detect the corruption and handle it.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"        * A warning message (e.g., \"WARNING: Error reading from jsonFile file data\\addressbook.json: ...\") should be logged.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"        * The app will launch with an empty student list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"        * The application should not crash and should remain functional.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"3. **Ensuring data is saved after adding/deleting a student**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"    1. Launch the app and modify the data by adding/deleting a student.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"    2. Close the application and re-open it.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"       **Expected:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"        * The added/deleted student should appear/not appear in the list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"1. **Difficulty Level and Challenges Faced**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"   Our project builds on AddressBook Level 3 (AB3) but required significant refactoring to better fit our target users\u0027 needs. As a result, the complexity of data management, validation, and UI representation increased.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"    **Key challenges included:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"    * Extensive refactoring: From `person` model to `student` model.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"    * Editing and updating test cases: Ensuring existing test cases remained valid after structural changes while writing new ones for added functionalities.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"    * Maintaining code consistency: Ensuring that refactored components integrated smoothly without introducing regressions.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"2. **Effort Required**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"   The project effort was distributed across key areas:\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"   * Feature Development (45%) – Modifying existing commands and implementing new commands (e.g. mark, markall, export).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"   * Testing \u0026 Debugging (30%) – Updating test cases, refactoring test structure, and ensuring correctness after modifications.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"   * Data Management \u0026 Storage (25%) – Modifying JSON storage to handle new fields in `Student` model.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"3. **Achievements**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"    * Successfully modified AB3 to align with our target users\u0027 needs while maintaining its core functionality.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"    * Refactored the codebase effectively, improving maintainability and extensibility.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"1. **Clearing attendance records**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"   Currently, attendance records accumulate over time, which can make it difficult for users to manage large amounts of data. We plan to introduce a bulk clearance feature that allows users to clear all the attendance records in CareBook.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"_{ more enhancement features to be added …​ }_","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"-":679,"shuang26":12}},{"path":"src/main/java/seedu/address/ui/FindWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WeiHungLoh"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for the Find Window.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * This version only shows the result in the PersonListPanel.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindWindow.class);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"FindWindow.fxml\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private VBox studentListPanelPlaceholder;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StudentFindWindowListPanel studentListPanel;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new FindWindow with the given Stage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the FindWindow.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindWindow(Stage root) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WeiHungLoh"},"content":"        Stage stage \u003d getRoot();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WeiHungLoh"},"content":"        stage.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WeiHungLoh"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WeiHungLoh"},"content":"        stage.setTitle(\"Find Window (Press ESC to exit and return to Main Window)\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WeiHungLoh"},"content":"        stage.setMinWidth(1000);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WeiHungLoh"},"content":"        stage.setMinHeight(400);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WeiHungLoh"},"content":"        stage.setResizable(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WeiHungLoh"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WeiHungLoh"},"content":"        if (stage.getScene() !\u003d null) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WeiHungLoh"},"content":"            stage.getScene().addEventFilter(javafx.scene.input.KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WeiHungLoh"},"content":"                if (event.getCode() \u003d\u003d javafx.scene.input.KeyCode.ESCAPE) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WeiHungLoh"},"content":"                    hide();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WeiHungLoh"},"content":"                    event.consume();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WeiHungLoh"},"content":"                }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WeiHungLoh"},"content":"            });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WeiHungLoh"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a new FindWindow.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public FindWindow() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Fills up the placeholder of this window","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param studentList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void fillInnerParts(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        studentListPanel \u003d new StudentFindWindowListPanel(studentList);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        studentListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Closes the Find window.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private void handleClose() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Opens the Find window.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing find window\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if the Find window is currently being shown.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Hides the Find window.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Focuses on the Find window.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"WeiHungLoh":17,"-":89}}]
