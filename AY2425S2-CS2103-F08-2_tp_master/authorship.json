[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# InsureBook Developer Guide","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Libraries used:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * JavaFX: Main GUI library","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * JUnit5: Testing framework","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * Jackson: JSON processing library (jackson-databind, jackson-datatype-jsr310)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Gradle: Build automation tool","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Checkstyle: Code style checking","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * JaCoCo: Code coverage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Shadow: JAR packaging","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* UI Design:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Original AddressBook-Level3 source code from SE-EDU initiative at https://github.com/se-edu/","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The **_Architecture Diagram_** given above explains the high-level design of InsureBook.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes `Main` and `MainApp`) is in charge of the app launch and shut down.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"*   [**`UI`**](#ui-component): The UI of InsureBook.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"*   [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"*   [**`Model`**](#model-component): Holds the data of InsureBook in memory.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"*   [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"*   defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"*   implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `RenewalsTable`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"*   executes user commands using the `Logic` component.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"*   listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"*   keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"*   depends on some classes in the `Model` component, as it displays `Person` and `Policy` objects residing in the `Model`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"#### Person Card UI","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"The person card UI is implemented using the following components:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"*   `PersonListCard.fxml`: Defines the layout of each person card, including:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    *   Name and ID","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    *   Contact information (phone, email, address)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    *   Tags","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"*   `PersonCard.java`: Controls the display of person information in the card:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    *   Binds UI elements to person data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    *   Manages tag display","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"#### Person Details UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"*   `PersonDetailPanel.fxml`: Defines the layout of the display for a person\u0027s details, including:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    *   Policy Number","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    *   Renewal Date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    *   Policy Type","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    *   Notes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"*   `PersonDetailPanel.java`: Controls the display and updating of information of current selected person:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    *   Binds UI elements (labels for policy number, renewal date, and notes) to the underlying person data model","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    *   Formats the renewal date display with the prefix \"Renewal date: \" for clarity","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    *   Dynamically updates the panel’s content when a different person is selected in the main list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    *   Ensures that the Notes field, if it contains a lengthy string, wraps onto multiple lines without expanding the panel’s width beyond its allocated space","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"The person card provides a compact view of all essential client information, making it easy for insurance agents to quickly access client details and track policy renewals. The renewal date is prominently displayed with a clear label to help agents quickly identify when policies need to be renewed.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"*   When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"*   All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"*   stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"*   stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"*   stores a `UserPref` object that represents the user\u0027s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"*   does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"*   can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"*   inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"*   depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"### Policy Renewal Feature","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"The policy renewal feature allows insurance agents to track and manage policy renewals for their clients. It is implemented using the following components:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"#### Policy Class","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"The `Policy` class represents an insurance policy and contains:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"*   Policy number (in format POL-XXX)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"*   Renewal date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"*   Methods to calculate days until renewal","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"#### ViewRenewalsCommand","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `ViewRenewalsCommand` allows users to view policies due for renewal within a specified number of days:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"*   Takes a parameter for number of days (1-365)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"*   Optional sort parameter (by name or date)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"*   Filters the person list based on policy renewal dates","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"*   Updates the UI to show filtered results","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The renewal tracking mechanism is facilitated by the `Policy` class and the `ViewRenewalsCommand`. Here\u0027s how it works:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. When a user executes `viewrenewals n/30`, the command is parsed by `ViewRenewalsCommandParser`.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"1. The parser validates the days parameter (must be 1-365) and optional sort parameter.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"1. A new `ViewRenewalsCommand` is created with the validated parameters.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"1. When executed, the command:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    * Filters the person list to include only those with policies due within the specified days","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    * Updates the model\u0027s filtered person list","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    * Updates the renewals table in the UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Returns a command result with the number of matching entries","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the viewrenewals operation works:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ViewRenewalsSequenceDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Aspect: How to calculate renewal due dates**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** Calculate days until renewal on demand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    *   Pros: More memory efficient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    *   Cons: May impact performance if calculated frequently","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"*   **Alternative 2:** Store days until renewal as a field","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    *   Pros: Faster retrieval","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    *   Cons: Needs to be updated daily","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Aspect: Where to implement filtering logic**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** In the command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    *   Pros: Keeps filtering logic with the command that needs it","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    *   Cons: Logic might be duplicated if needed elsewhere","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"*   **Alternative 2:** In the Model","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    *   Pros: Centralizes filtering logic","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    *   Cons: Makes Model more complex","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Renewal Date Update Feature","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"The renewal date update feature allows insurance agents to directly update a client\u0027s policy renewal date by specifying the policy number, without needing to find the client\u0027s index in the list. This feature streamlines the renewal date management process.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"The renewal date update functionality is implemented through the `RenewCommand` class, which follows the command pattern used throughout the application. The feature is primarily made up of the following components:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"1. `RenewCommand` - Executes the updating of a renewal date for a client with a specific policy number","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. `RenewCommandParser` - Parses and validates the user input into a RenewCommand object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"The following class diagram shows the structure of the Renew Command:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/RenewCommandClassDiagram.puml\" width\u003d\"400\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"The feature works through the following process flow:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"1. The user enters a command in the format `renew pol/POLICY_NUMBER r/RENEWAL_DATE`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"1. The `LogicManager` passes the command string to `AddressBookParser`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"1. `AddressBookParser` identifies the command as a `renew` command and delegates to `RenewCommandParser`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"1. `RenewCommandParser` extracts and validates:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    * Policy number (must be a valid policy number format)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Renewal date (must be a valid date in DD-MM-YYYY format)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"1. `LogicManager` calls the `execute()` method of the command object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"1. The `RenewCommand`:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    * Filters the list of persons to find those with the specified policy number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    * Validates that exactly one match is found (not zero, not multiple)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    * Creates a new `Person` with the updated renewal date while preserving other fields (including policy type)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    * Updates the model with the new `Person` object","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"    * Returns a `CommandResult` with a success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the renew operation works:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/RenewSequenceDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Aspect: How to identify the client to update:**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** Use policy number as identifier.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"    *   Pros: More intuitive for insurance agents who often reference clients by policy number.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    *   Cons: Requires handling cases where multiple clients have the same policy number.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"*   **Alternative 2:** Use client index in the displayed list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    *   Pros: Consistent with other commands like `edit` and `delete`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    *   Cons: Less convenient as agents need to find the index first.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Aspect: Error handling for duplicate policy numbers:**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** Show error and suggest using `edit` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"    *   Pros: Prevents unintended updates to the wrong client.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    *   Cons: Less convenient when there are duplicate policy numbers.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"*   **Alternative 2:** Update all clients with matching policy numbers.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    *   Pros: More convenient if updating all matching policies is the intended action.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"    *   Cons: High risk of unintended updates; insurance operations generally require precision.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Find Persons Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"The `FindCommand` allows users to search for persons in the address book by specifying various attributes. This feature is enhanced to support searching across all person attributes, providing a flexible and comprehensive search capability.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### FindCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"The `FindCommand` enables users to search for persons based on any attribute, such as name, address, phone number, email, tags or policy number. It is implemented using the following components:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* `FindCommand`: Executes the search operation.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* `FindCommandParser`: Parses and validates the user input into a FindCommand object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"* `FindPersonPredicate`: A predicate that evaluates whether a person matches the search criteria.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"#### FindPersonPredicate","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"The `FindPersonPredicate` class is responsible for evaluating whether a person matches the search criteria. It is implemented as follows:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"Attributes: The predicate stores the search criteria for each attribute in their own predicate object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"Evaluation:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"* The `test` method checks if a person matches the search criteria by evaluating each attribute.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"* It supports partial matches and is case-insensitive.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"* For each attribute, it checks if the person\u0027s attribute contains the search value.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"The following class diagram shows the structure of the FindPersonPredicate:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FindPersonPredicateClassDiagram.puml\" width\u003d\"500\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"The following partial sequence diagram shows how the test operation works:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FindPersonPredicateSequenceDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"* Aspect: How to handle multiple search criteria","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"  * Current Choice: Combine all criteria using logical OR.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    * Pros: Ensures that a person is considered a match if any of the specified attributes match, providing more flexible search results.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"    * Cons: May result in more matches if multiple criteria are specified.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"  * Alternative: Use logical AND to require all criteria to match.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"    * Pros: Ensures that all specified attributes must match, providing precise search results.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"    * Cons: May result in fewer matches if multiple criteria are specified.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"* Aspect: Case sensitivity and partial matches","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"  * Current Choice: Use case-insensitive and partial matches.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"    * Pros: More user-friendly and flexible, accommodating various input styles.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"    * Cons: May result in unintended matches if search values are too general.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Filter Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"The `filter` command allows users to view policies due for renewal within a specified date range:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"*   Takes two parameters, startDate and endDate to specify the date range","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"*   Optional sort parameter (by date or name); defaults to date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"*   Filters the person list based on policy renewal dates","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"*   Updates the UI to show filtered results, and the filter specified when calling this command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"The following class diagram shows how the filter command updates the UI:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FilterDateCommandClassDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the filter command works:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FilterDateCommandSequenceDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Policy Type Feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"#### Current Implementation","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"The policy type feature enhances the insurance management capabilities of the application by allowing users to categorize policies into specific types (Life, Health, Property, Vehicle, and Travel). This helps insurance agents quickly identify and manage different types of policies.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"The implementation consists of the following key components:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. **`PolicyType` Enum** - Defines the available policy types and provides utilities for validation and conversion.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    public enum PolicyType {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        LIFE, HEALTH, PROPERTY, VEHICLE, TRAVEL;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public static PolicyType fromString(String type) { ... }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"        public static boolean isValidPolicyType(String test) { ... }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"1. **`Policy` Class Extension** - The existing `Policy` class has been enhanced to include a `PolicyType` field.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"    public class Policy {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"        // Existing fields","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        public final String policyNumber;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"        public final RenewalDate renewalDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"        // New field","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"        private final PolicyType type;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"        // Constructors that handle policy type","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"        public Policy(String policyNumber, String renewalDate, String type) { ... }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"        // Getter for policy type","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"        public PolicyType getType() { ... }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. **Command Parsers** - The parsers for `AddCommand`, `EditCommand`, and `FindCommand` have been updated to recognize and process the policy type prefix (`pt/`).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. **UI Components** - The `PersonCard` and `RenewalsTable` UI components have been modified to display the policy type.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. **Predicate for Searching** - A `PolicyTypeContainsKeywordsPredicate` class has been added to support searching by policy type.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Aspect: Implementation of Policy Types**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** Use an enumeration to represent policy types.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"    *   Pros: Type safety, easy validation, prevents invalid policy types.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    *   Cons: Less flexible if new types need to be added (requires code changes).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"*   **Alternative 2:** Use a string field without constraints.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"    *   Pros: More flexible, users can add any type they want.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"    *   Cons: Less type safety, harder to validate, potential for inconsistent data (e.g., \"Health\" vs \"health\").","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Aspect: Storage of Policy Type**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"*   **Alternative 1 (current choice):** Store as part of the Policy object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"    *   Pros: Logical grouping, keeps policy information together.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"    *   Cons: Increases complexity of the Policy class.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"*   **Alternative 2:** Store as a separate field in the Person object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    *   Pros: Simpler Policy class.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"    *   Cons: Less logical grouping, policy information is split between different attributes.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"#### Example Usage","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"The following sequence diagram shows how adding a person with a policy type works:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AddPersonWithPolicyTypeSequenceDiagram.puml\" width\u003d\"800\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"When the user adds a new person with a policy type:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. The `AddCommandParser` parses the command including the policy type prefix.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"2. A new `Policy` object is created with the specified policy type.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"3. This `Policy` is included in the new `Person` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"4. The Model stores the new person and returns success.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"5. A `CommandResult` is returned to indicate success.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"The UI components will automatically update to reflect the changes in the Model.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"*   [Documentation guide](Documentation.md)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"*   [Testing guide](Testing.md)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"*   [Logging guide](Logging.md)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"*   [Configuration guide](Configuration.md)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"*   [DevOps guide](DevOps.md)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"*   Insurance Agents who need to keep track of Customers / Potential Customers","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"*   Moderate Tech saviness.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"*   prefer desktop apps over other types","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"*   can type fast","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"*   prefers typing to mouse interactions","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"*   is reasonably comfortable using CLI apps","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"**Value proposition**: It solves the issue of managing a large clientele by simplifying client tracking, automating follow-ups, and staying organized. By using InsureBook, insurance agents can focus more on growth and client retention, rather than spending more time on admin tasks and more time on sales.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"MakiseKurisuX"},"content":"| -------- | --------------- | -------------------------------- | --------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | add new clients                  | reach out to them when needed                                       |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | view a list of clients           | quickly access current and potential clients                        |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | update client information        | ensure records remain accurate                                      |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | delete a client entry            | remove outdated clients                                             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | search for a client              | quickly find them through their details                             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | filter clients by renewal date   | prioritize follow-ups effectively                                   |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | tag clients for sorting \u0026 search | organize and categorize my clients                                  |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | set reminders for renewals       | never miss important deadlines                                      |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | persist client data              | ensure no data is lost                                              |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"| `* * *`  | Insurance Agent | filter and sort clients by tags  | manage clients more efficiently                                     |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"| `* *`    | Insurance Agent | add notes to a client’s profile  | remember key details about them                                     |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"MakiseKurisuX"},"content":"| `* *`    | Insurance Agent | sort my clients by tag  | so that I can quickly rank my clients based on the number of tags they have. |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"_{More to be added}_","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Use Cases","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `Client Management System` and the **Actor** is the `Insurance Agent`, unless specified otherwise)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"**Use case: Add a new client**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to add a new client.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. System prompts for client details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. Insurance Agent enters required details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. System validates and saves the new client.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"-   4a. The provided details are invalid.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"    -   4a1. System shows an error message.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"    -   4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"-   4b. A client with the same name and phone number already exists.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"    -   4b1. System shows a duplicate warning and rejects the addition.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"**Use case: View a list of clients**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to list clients.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. System displays all stored clients in alphabetical order.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"-   2a. No clients have been added.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"    -   2a1. System shows \"No clients added yet.\"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"**Use case: Update client information**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to update a client\u0027s information.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. System prompts for the client index and new details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. Insurance Agent provides updates.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. System validates and updates the information.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"-   4a. Provided details are invalid.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"    -   4a1. System shows an error message.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"    -   4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"-   4b. Client does not exist.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"    -   4b1. System shows an error message.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"**Use case: Delete a client**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to list clients.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. System shows a list of clients.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to delete a specific client.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. System deletes the client.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"MakiseKurisuX"},"content":"-   2a. The given index is invalid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"MakiseKurisuX"},"content":"    -   2a1. System shows an error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"MakiseKurisuX"},"content":"    -   2a2. Use case resumes at step 2.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"**Use case: Search for a client**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to search for a client by specific criteria.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. System displays matching clients.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"-   2a. No matching clients found.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"    -   2a1. System shows \"No clients found.\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"**Use case: Filter clients by renewal date**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to filter clients by renewal date.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"1. System displays clients with renewals within the specified period.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"-   2a. No clients match the criteria.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"    -   2a1. System shows \"No upcoming renewals.\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"**Use case: Tag clients for sorting \u0026 search**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to tag a client.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"1. System adds the tag to the client\u0027s record.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"-   2a. Tag exceeds character limit.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"    -   2a1. System truncates the tag and shows a warning.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"-   2b. Tag is a duplicate.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"    -   2b1. System shows \"Tag already exists.\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"**Use case: Set reminders for renewals**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to set a renewal reminder for a client.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. System schedules the reminder.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"-   2a. Client does not have a policy renewal date.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"    -   2a1. System shows an error message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"**Use case: Persist client data**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"1. System automatically saves client data when changes are made.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"-   1a. System encounters an error while saving.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"    -   1a1. System shows an error message.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"**Use case: Filter and sort clients by tags**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"1. Insurance Agent requests to filter clients by specific tags.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"1. System displays a list of clients with the matching tags.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"-   2a. No clients match the specified tags.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"    -   2a1. System shows \"No clients found for the selected tags.\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"1. Should be able to hold up to 1000 clients without noticeable sluggishness in performance.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"1. A user with above-average typing speed should be able to accomplish most tasks faster using commands than using the mouse.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"1. Client data should persist even if the system shuts down unexpectedly.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"-   **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"-   **Client**: A person managed within the system with relevant details such as contact, policy information, and tags.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"-   **Tag**: A custom keyword used to categorize clients for sorting and filtering.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"MakiseKurisuX"},"content":"    1. Use the `java -jar InsureBook.jar` command to run the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"MakiseKurisuX"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"MakiseKurisuX"},"content":"**Note:** The Application will default to full-screen mode.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"MakiseKurisuX"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":9,"-":760}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# InsureBook User Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MakiseKurisuX"},"content":"**InsureBook** is a **desktop application** built to help insurance agents **manage and organize their client information more effectively**. Its primary purpose is to streamline the day-to-day workflow of agents, allowing them to **store, access, update and keep track of client data with ease**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MakiseKurisuX"},"content":"By combining the speed of a **Command Line Interface (CLI)** with the familiarity of a **Graphical User Interface (GUI)**, InsureBook is optimized for fast, efficient use. If you\u0027re a quick typist, you\u0027ll find that InsureBook lets you **perform contact management tasks faster than traditional point-and-click apps** — all while maintaining clarity and control over your client base.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MakiseKurisuX"},"content":"As a result, with InsureBook, we\u0027re not just insuring policies—we\u0027re insuring smiles!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103-F08-2/tp/releases).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MakiseKurisuX"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your InsureBook.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuyang011"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar InsureBook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pol/123456` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"*   Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"*   Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"*   Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"*   Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"*   Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"*   If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pol/POLICY_NUMBER [pt/POLICY_TYPE] [r/RENEWAL_DATE] [note/NOTE] [t/TAG]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MakiseKurisuX"},"content":"*   Name: Names must only include alphanumeric characters and spaces.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MakiseKurisuX"},"content":"*   Phone Number: Phone numbers must follow the E.164 standard.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MakiseKurisuX"},"content":"*   Email: The email must be in the localpart@domain format.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MakiseKurisuX"},"content":"*   Address: The address can be any string value, but it must not be blank.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MakiseKurisuX"},"content":"*   Policy Number: The policy number must consist only of digits, ensuring that it is numeric and non‑blank.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MakiseKurisuX"},"content":"*   Policy Type: Only the following case‑insensitive policy types are allowed: Life, Health, Property, Vehicle, Travel.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MakiseKurisuX"},"content":"*   Renewal Date: The date must follow the DD-MM-YYYY format.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MakiseKurisuX"},"content":"*   Note: There are no specific restrictions for notes; any string is accepted as a valid note.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MakiseKurisuX"},"content":"*   Tag: A valid tag name must be entirely alphanumeric.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"*   `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pol/123456 pt/Life r/31-12-2024 note/Basketball Player`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"*   `add n/Betsy Crowe t/friend pol/654321 pt/Health e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MakiseKurisuX"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MakiseKurisuX"},"content":"**Tip:** Names such as X Æ A-Xii Musk is not valid unfortunately.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MakiseKurisuX"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"Each person card in the list displays:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"*   Name","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"*   Phone number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"*   Email address","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"*   Physical address","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"*   Policy number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"*   Policy type (Life, Health, Property, Vehicle, or Travel)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"*   Renewal date (displayed as \"Renewal date: DD-MM-YYYY\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"*   Tags (if any)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"The policy type and renewal date are clearly labeled to help insurance agents quickly identify the types of policies and when they need to be renewed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [pol/POLICY_NUMBER] [pt/POLICY_TYPE] [r/RENEWAL_DATE] [note/NOTE] [t/TAG]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"*   Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"*   At least one of the optional fields must be provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"*   Existing values will be updated to the input values.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"*   When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"*   You can remove all the person\u0027s tags by typing `t/` without","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"*   `edit 1 p/91234567 e/johndoe@example.com pt/Health r/31-12-2024` Edits the phone number, email address, policy type and renewal date of the 1st person to be `91234567`, `johndoe@example.com`, `Health` and `31-12-2024` respectively.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"*   `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Locating persons by keyword: `find`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Searches given person fields by specific keyword and returns any matching entries","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jovin-Ang"},"content":"Format: `find [n/NAME]… [p/PHONE]… [e/EMAIL]… [a/ADDRESS]… [pol/POLICY_NUMBER]… [pt/POLICY_TYPE]… [t/TAG]… [s/SORT_ORDER]`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"*   At least one of the optional fields must be provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jovin-Ang"},"content":"*   Each field may be provided more than once except `SORT_ORDER`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jovin-Ang"},"content":"*   `NAME` and `ADDRESS` field may contain more than one word.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"*   The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"*   The order of the values matter for a field but not for different fields. e.g. `n/Hans Bo` will not match `Bo Hans` but `n/Hans n/Bo` will match `Bo Hans`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"*   Partial words will also be matched e.g. `n/Han` will match `Hans`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"*   Partial search for emails must be concatenated with `@` followed by at least 2 characters e.g. `e/ice@ex` will match `alice@example.com` but `alice@e` will not match `alice@example.com`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"*   Persons matching at least one field will be returned (i.e. `OR` search).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    e.g. `n/Hans n/Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"*   Tags are supported. You can add one or more tags using `t/TAG`. The search for tags is not case-sensitive and must be an exact word.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"*   Policy types are supported. You can search for specific policy types using `pt/POLICY_TYPE`. Valid policy types are: Life, Health, Property, Vehicle, and Travel. The search is not case-sensitive.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jovin-Ang"},"content":"*   The search results can be sorted using `s/SORT_ORDER` by `name` or by `tag` only. The default sort order is by name. Tag sorting sorts by entries with the most number of tags first.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jovin-Ang"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"**Note:** The sorting order is case-sensitive and follows ASCII values. This means lowercase letters are ordered after uppercase ones. For example, `alice` will appear after `Bernice`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"*   `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"*   `find n/Amy p/999` returns `Amy Goh (96372716)` and `Local Police (999)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"*   `find n/alex n/david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"*   `find e/ice@example.com e/bob@ex` returns `alice@example.com` and `bob@example.com`\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"*   `find t/colleagues` returns `Bernice Yu` and `Roy Balakrishnan`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"*   `find pt/Health` returns all persons with health insurance policies","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"*   `find pt/Life pt/Health` returns all persons with either life or health insurance policies","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"*   `find t/friends t/colleagues s/tag` returns entries containing one or more of the tags `friends` or `colleagues`, sorted by entries with most number of tags first.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"*   Deletes the person at the specified `INDEX`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"*   The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"*   The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"*   `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"*   `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Updating a policy renewal date : `renew`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Updates the renewal date of a client\u0027s policy by directly using their policy number, without needing to search for their index.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Format: `renew pol/POLICY_NUMBER r/RENEWAL_DATE`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"*   The `pol/POLICY_NUMBER` parameter must be a valid policy number in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"*   The `r/RENEWAL_DATE` parameter must be in the format `DD-MM-YYYY`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"*   If multiple clients have the same policy number, an error message will be shown. In this case, use the `edit` command with the client\u0027s index instead.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"*   `renew pol/123456 r/31-12-2025` - Updates the renewal date for policy 123456 to December 31, 2025","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Viewing upcoming policy renewals : `viewrenewals`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"Helps insurance agents proactively track and manage upcoming policy renewals for their clients.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"Format: `viewrenewals [n/NEXT_N_DAYS] [s/SORT_ORDER]`","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"*   The `n/NEXT_N_DAYS` parameter is optional:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    *   Acceptable values: Positive integer between 1-365","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    *   If omitted: Defaults to 30 days","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    *   Error message: \"NEXT_N_DAYS must be a positive number between 1 and 365\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    *   Rationale: Setting an upper limit prevents performance issues with extremely large ranges","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"*   The `s/SORT_ORDER` parameter is optional:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    *   Acceptable values: \"date\" (chronological order), \"name\" (alphabetical order)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    *   Case-insensitive: Both \"DATE\" and \"date\" are valid","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    *   If omitted: Defaults to \"date\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    *   Error message: \"Invalid sort order. Use \u0027date\u0027 or \u0027name\u0027\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    *   Rationale: These two sort orders cover the most common use cases for reviewing renewals","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"The renewal table displays the following information for each policy:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"*   Client name","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"*   Policy number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"*   Policy type (Life, Health, Property, Vehicle, or Travel)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"*   Renewal date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"*   Days left until renewal","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"*   Contact number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"*   `viewrenewals` - Shows renewals due in the next 30 days, sorted by date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"*   `viewrenewals n/60` - Shows renewals due in the next 60 days, sorted by date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"*   `viewrenewals n/60 s/name` - Shows renewals due in the next 60 days, sorted alphabetically by name","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### View policy renewals in the specified date range: `filter`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"Enables insurance agents to find clients with policy renewals falling within a specific calendar range.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"Format: `filter sd/START_DATE ed/END_DATE [s/SORT_ORDER]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"The `s/SORT_ORDER` parameter is optional:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"*   Acceptable values: \"date\" (chronological) or \"name\" (alphabetical).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"*   Case-insensitive: Both \"DATE\" and \"date\" are valid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"*   Default: \"date\" if omitted.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"*   Error message: \"Invalid sort. Use \u0027date\u0027 or \u0027name\u0027 (case-insensitive)\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"*   Rationale: These two sort options cover the most common use cases for reviewing renewals.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"*   `filter sd/2025-03-01 ed/2025-03-31` - Shows renewals due from 2025-03-01 to 2025-03-31, sorted by date by default","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"*   `filter sd/2025-01-01 ed/2025-06-30 s/name` - Shows renewals due from 2025-01-01 to 2025-06-30, sorted by name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"MakiseKurisuX"},"content":"InsureBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"MakiseKurisuX"},"content":"InsureBook data are saved automatically as a JSON file `[JAR file location]/data/insurebook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"MakiseKurisuX"},"content":"If your changes to the data file makes its format invalid, InsureBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"MakiseKurisuX"},"content":"Furthermore, certain edits can cause the InsureBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"MakiseKurisuX"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InsureBook home folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"1. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| Action            | Format, Examples                                                                                                                                                                                                                               |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| **Add**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pol/POLICY_NUMBER [r/RENEWAL_DATE] [note/NOTE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 pol/183548 note/Is lovely t/friend t/colleague` |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| **Clear**         | `clear`                                                                                                                                                                                                                                        |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"| **Delete**        | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                            |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| **Edit**          | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [pol/POLICY_NUMBER] [r/RENEWAL_DATE] [note/NOTE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"| **Find**          | `find [n/NAME]… [p/PHONE]… [e/EMAIL]… [a/ADDRESS]… [pol/POLICY_NUMBER]… [t/TAG]… [s/SORT_ORDER]`\u003cbr\u003e e.g., `find n/James n/Jake p/98765432`                                                                                                    |","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"| **List**          | `list`                                                                                                                                                                                                                                         |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"| **Help**          | `help`                                                                                                                                                                                                                                         |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| **Renew**         | `renew pol/POLICY_NUMBER r/RENEWAL_DATE`\u003cbr\u003e e.g., `renew pol/123456 r/31-12-2025`                                                                                                                                                             |","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"| **View Renewals** | `viewrenewals [n/NEXT_N_DAYS] [s/SORT_ORDER]`\u003cbr\u003e e.g., `viewrenewals n/60 s/name`                                                                                                                                                             |","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"| **Filter**        | `filter sd/START_DATE ed/END_DATE [s/SORT_ORDER]`\u003cbr\u003e e.g., `filter sd/2025-01-01 ed/2025-06-30 s/name`                                                                                                                                        |","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"yuyang011":1,"Jovin-Ang":5,"MakiseKurisuX":27,"-":292}},{"path":"docs/diagrams/RenewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":RenewCommandParser\" as RenewCommandParser LOGIC_COLOR","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":RenewCommand\" as RenewCommand LOGIC_COLOR","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e AddressBookParser : renew command","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e RenewCommandParser : parse","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate RenewCommandParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"RenewCommandParser -\u003e RenewCommand : create","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate RenewCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"deactivate RenewCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"RenewCommandParser --\u003e AddressBookParser : RenewCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate RenewCommandParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"[-\u003e AddressBookParser : execute","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e RenewCommand : execute","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate RenewCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"johngao122"},"content":"RenewCommand -\u003e Model : getAddressBook().getPersonList()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"johngao122"},"content":"Model --\u003e RenewCommand : unfiltered list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"johngao122"},"content":"RenewCommand -\u003e Model : setPerson(personToUpdate, updatedPerson)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"RenewCommand --\u003e AddressBookParser : CommandResult","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"deactivate RenewCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c-- AddressBookParser : CommandResult","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"-":44,"johngao122":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY + \"POLICY_NUMBER \"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RENEWAL_DATE + \"DD-MM-YYYY] \"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POLICY_TYPE + \"TYPE] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY + \"123456 \"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MakiseKurisuX"},"content":"            + PREFIX_RENEWAL_DATE + \"31-12-2025 \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY_TYPE + \"Life \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_NOTE + \"Likes reading \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \"A person with this policy number already exists in the address book\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":96}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.COMPARATOR_ORIGINAL_ORDER;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POLICY + \"POLICY_NUMBER] \"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RENEWAL_DATE + \"DD-MM-YYYY] \"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POLICY_TYPE + \"TYPE] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY_TYPE + \"Health \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MakiseKurisuX"},"content":"            + PREFIX_RENEWAL_DATE + \"31-12-2025\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"johngao122"},"content":"    public static final String MESSAGE_DUPLICATE_POLICY \u003d \"Policy number already exists in another person\u0027s record\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"johngao122"},"content":"        if (!personToEdit.isSamePerson(editedPerson)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"johngao122"},"content":"            boolean hasDuplicatePolicy \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"johngao122"},"content":"                    .anyMatch(p -\u003e !p.equals(personToEdit) \u0026\u0026 p.isSamePerson(editedPerson));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"johngao122"},"content":"            if (hasDuplicatePolicy) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"johngao122"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_POLICY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"johngao122"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateSortedPersonList(COMPARATOR_ORIGINAL_ORDER);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Policy updatedPolicy;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (editPersonDescriptor.getPolicy().isPresent()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                || editPersonDescriptor.getRenewalDate().isPresent()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || editPersonDescriptor.getPolicyType().isPresent()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String policyNumber \u003d editPersonDescriptor.getPolicy()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    .map(Policy::getPolicyNumber)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    .orElse(personToEdit.getPolicy().getPolicyNumber());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            RenewalDate renewalDate \u003d editPersonDescriptor.getRenewalDate().orElse(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    personToEdit.getPolicy().renewalDate);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            PolicyType policyType \u003d editPersonDescriptor.getPolicyType().orElse(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    personToEdit.getPolicy().getType());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            updatedPolicy \u003d new Policy(policyNumber, renewalDate, policyType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            updatedPolicy \u003d personToEdit.getPolicy();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedPolicy,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                        updatedNote, updatedTags);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private Policy policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private RenewalDate renewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private PolicyType policyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private Note note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setPolicy(toCopy.policy);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            setRenewalDate(toCopy.renewalDate);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            setPolicyType(toCopy.policyType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, policy, renewalDate, policyType,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                                            tags, note);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.note \u003d note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void setPolicy(Policy policy) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            this.policy \u003d policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public Optional\u003cPolicy\u003e getPolicy() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(policy);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public void setRenewalDate(RenewalDate renewalDate) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            this.renewalDate \u003d renewalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public Optional\u003cRenewalDate\u003e getRenewalDate() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(renewalDate);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public void setPolicyType(PolicyType policyType) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"            this.policyType \u003d policyType;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public Optional\u003cPolicyType\u003e getPolicyType() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(policyType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(policy, otherEditPersonDescriptor.policy)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(renewalDate, otherEditPersonDescriptor.renewalDate)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(policyType, otherEditPersonDescriptor.policyType)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(note, otherEditPersonDescriptor.note);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    .add(\"policy\", policy)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    .add(\"renewalDate\", renewalDate)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    .add(\"policyType\", policyType)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":321,"johngao122":7}},{"path":"src/main/java/seedu/address/logic/commands/RenewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Updates the renewal date of a client in the address book.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RenewCommand extends Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"renew\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the renewal date of a client \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"identified by their policy number. \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY + \"POLICY_NUMBER \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_RENEWAL_DATE + \"DD-MM-YYYY\\n\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_POLICY + \"123456 \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_RENEWAL_DATE + \"31-12-2025\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RENEW_SUCCESS \u003d \"Updated renewal date for policy %1$s: %2$s\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_POLICY_NOT_FOUND \u003d \"No client with policy number %1$s was found\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_MULTIPLE_POLICIES \u003d \"Multiple clients with policy number %1$s found. \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Please use edit command with index instead.\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String policyNumber;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final RenewalDate newRenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a RenewCommand to update the specified client\u0027s renewal date","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public RenewCommand(String policyNumber, RenewalDate newRenewalDate) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(policyNumber);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(newRenewalDate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.policyNumber \u003d policyNumber;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.newRenewalDate \u003d newRenewalDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Find the person with the specified policy number","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"johngao122"},"content":"        List\u003cPerson\u003e matchingPersons \u003d model.getAddressBook().getPersonList().stream()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"johngao122"},"content":"                .filter(p -\u003e p.getPolicy().getPolicyNumber().equals(policyNumber)).toList();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"johngao122"},"content":"        if (matchingPersons.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_POLICY_NOT_FOUND, policyNumber));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"johngao122"},"content":"        if (matchingPersons.size() \u003e 1) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_MULTIPLE_POLICIES, policyNumber));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"johngao122"},"content":"        // NOTE: This is here because I do not want to use more","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"johngao122"},"content":"        // LOC to match the new no duplicate policy number requirement","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"johngao122"},"content":"        Person personToUpdate \u003d matchingPersons.get(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person updatedPerson \u003d createUpdatedPerson(personToUpdate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_RENEW_SUCCESS, policyNumber, newRenewalDate));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the updated renewal date.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Person createUpdatedPerson(Person personToUpdate) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert personToUpdate !\u003d null;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String policyNumber \u003d personToUpdate.getPolicy().getPolicyNumber();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PolicyType policyType \u003d personToUpdate.getPolicy().getType();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Policy updatedPolicy \u003d new Policy(policyNumber, newRenewalDate, policyType);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Person(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                personToUpdate.getName(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                personToUpdate.getPhone(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                personToUpdate.getEmail(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                personToUpdate.getAddress(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                updatedPolicy,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                personToUpdate.getNote(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                personToUpdate.getTags()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof RenewCommand)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        RenewCommand otherRenewCommand \u003d (RenewCommand) other;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return policyNumber.equals(otherRenewCommand.policyNumber)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 newRenewalDate.equals(otherRenewCommand.newRenewalDate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"-":95,"johngao122":8}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        PREFIX_POLICY, PREFIX_RENEWAL_DATE, PREFIX_POLICY_TYPE, PREFIX_NOTE, PREFIX_TAG);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                PREFIX_POLICY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                PREFIX_POLICY, PREFIX_RENEWAL_DATE, PREFIX_POLICY_TYPE, PREFIX_NOTE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Validate policy first since it\u0027s a common error","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String policyStr \u003d argMultimap.getValue(PREFIX_POLICY).get();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Policy.isValidPolicy(policyStr)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MakiseKurisuX"},"content":"        Policy policy \u003d createPolicy(argMultimap);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MakiseKurisuX"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MakiseKurisuX"},"content":"        Note note \u003d createNote(argMultimap);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MakiseKurisuX"},"content":"        Person person \u003d new Person(name, phone, email, address, policy, note, tagList);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MakiseKurisuX"},"content":"        return new AddCommand(person);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MakiseKurisuX"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MakiseKurisuX"},"content":"    private Policy createPolicy(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Policy policy;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_RENEWAL_DATE).isPresent()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                RenewalDate renewalDate \u003d ParserUtil.parseRenewalDate(argMultimap.getValue(PREFIX_RENEWAL_DATE).get());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                if (argMultimap.getValue(PREFIX_POLICY_TYPE).isPresent()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    PolicyType policyType \u003d ParserUtil.parsePolicyType(argMultimap.getValue(PREFIX_POLICY_TYPE).get());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    policy \u003d new Policy(argMultimap.getValue(PREFIX_POLICY).get(), renewalDate, policyType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    policy \u003d new Policy(argMultimap.getValue(PREFIX_POLICY).get(), renewalDate);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                throw pe;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MakiseKurisuX"},"content":"            if (argMultimap.getValue(PREFIX_POLICY_TYPE).isPresent()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MakiseKurisuX"},"content":"                PolicyType policyType \u003d ParserUtil.parsePolicyType(argMultimap.getValue(PREFIX_POLICY_TYPE).get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MakiseKurisuX"},"content":"                policy \u003d new Policy(argMultimap.getValue(PREFIX_POLICY).get(), new RenewalDate(), policyType);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                policy \u003d new Policy(argMultimap.getValue(PREFIX_POLICY).get());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MakiseKurisuX"},"content":"        return policy;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MakiseKurisuX"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MakiseKurisuX"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MakiseKurisuX"},"content":"    private Note createNote(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MakiseKurisuX"},"content":"            return ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MakiseKurisuX"},"content":"            return Note.EMPTY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":19,"-":94}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonsPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PhoneContainsNumbersPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyContainsNumbersPredicate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyTypeContainsKeywordsPredicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MakiseKurisuX"},"content":"    public static final String TAG_EMPTY \u003d \"Tag cannot be empty. Use a valid tag.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_SORT \u003d \"Invalid sort order. Use \u0027name\u0027 or \u0027tag\u0027\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    PREFIX_ADDRESS, PREFIX_POLICY, PREFIX_POLICY_TYPE, PREFIX_TAG, PREFIX_SORT_ORDER);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String sortOrder \u003d FindCommand.DEFAULT_SORT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jovin-Ang"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SORT_ORDER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jovin-Ang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate findPersonsPredicate \u003d new FindPersonsPredicate();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setNamePredicate(new NameContainsKeywordsPredicate(","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME))));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setPhonePredicate(new PhoneContainsNumbersPredicate(","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    ParserUtil.parsePhones(argMultimap.getAllValues(PREFIX_PHONE))));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setEmailPredicate(new EmailContainsKeywordsPredicate(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    ParserUtil.parseEmails(argMultimap.getAllValues(PREFIX_EMAIL))));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setAddressPredicate(new AddressContainsKeywordsPredicate(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    ParserUtil.parseAddresses(argMultimap.getAllValues(PREFIX_ADDRESS))));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_POLICY).isPresent()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setPolicyPredicate(new PolicyContainsNumbersPredicate(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    ParserUtil.parsePolicies(argMultimap.getAllValues(PREFIX_POLICY))));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_TYPE).isPresent()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setPolicyTypePredicate(new PolicyTypeContainsKeywordsPredicate(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jovin-Ang"},"content":"                    ParserUtil.parsePolicyTypes(argMultimap.getAllValues(PREFIX_POLICY_TYPE))));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MakiseKurisuX"},"content":"            String tagInput \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MakiseKurisuX"},"content":"            if (tagInput.trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MakiseKurisuX"},"content":"                throw new ParseException(TAG_EMPTY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MakiseKurisuX"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            findPersonsPredicate.setTagPredicate(new TagContainsKeywordsPredicate(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG))));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!findPersonsPredicate.isAnyPredicateSet()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(FindCommand.MESSAGE_NOT_FOUND);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_SORT_ORDER).isPresent()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            sortOrder \u003d argMultimap.getValue(PREFIX_SORT_ORDER).get().toLowerCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (!isValidSortOrder(sortOrder)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_INVALID_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new FindCommand(findPersonsPredicate, sortOrder);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private boolean isValidSortOrder(String sortOrder) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return FindCommand.SORT_BY_NAME.equals(sortOrder)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                || FindCommand.SORT_BY_TAG.equals(sortOrder);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"Jovin-Ang":3,"MakiseKurisuX":5,"-":97}},{"path":"src/main/java/seedu/address/logic/parser/RenewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RenewCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new RenewCommand object","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RenewCommandParser implements Parser\u003cRenewCommand\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the RenewCommand","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a RenewCommand object for execution.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public RenewCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POLICY, PREFIX_RENEWAL_DATE);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POLICY, PREFIX_RENEWAL_DATE)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RenewCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"johngao122"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_POLICY, PREFIX_RENEWAL_DATE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String policyNumber \u003d argMultimap.getValue(PREFIX_POLICY).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String renewalDate \u003d argMultimap.getValue(PREFIX_RENEWAL_DATE).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!Policy.isValidPolicy(policyNumber)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!RenewalDate.isValidRenewalDate(renewalDate)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(RenewalDate.DATE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new RenewCommand(policyNumber, new RenewalDate(renewalDate));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"-":54,"johngao122":2}},{"path":"src/main/java/seedu/address/logic/parser/ViewRenewalsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_N_DAYS;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewRenewalsCommand;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new ViewRenewalsCommand object","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ViewRenewalsCommandParser implements Parser\u003cViewRenewalsCommand\u003e {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"johngao122"},"content":"    public static final String MESSAGE_INVALID_DAYS \u003d \"NEXT_N_DAYS must be a positive integer between 1 and 365\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_SORT \u003d \"Invalid sort order. Use \u0027date\u0027 or \u0027name\u0027\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewRenewalsCommand","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a ViewRenewalsCommand object for execution.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ViewRenewalsCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                args, PREFIX_NEXT_N_DAYS, PREFIX_SORT_ORDER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        int days \u003d ViewRenewalsCommand.DEFAULT_DAYS;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String sortOrder \u003d ViewRenewalsCommand.DEFAULT_SORT;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NEXT_N_DAYS).isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                days \u003d Integer.parseInt(argMultimap.getValue(PREFIX_NEXT_N_DAYS).get());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                if (days \u003c 1 || days \u003e 365) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    throw new ParseException(MESSAGE_INVALID_DAYS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_INVALID_DAYS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_SORT_ORDER).isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            sortOrder \u003d argMultimap.getValue(PREFIX_SORT_ORDER).get().toLowerCase();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (!isValidSortOrder(sortOrder)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_INVALID_SORT);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new ViewRenewalsCommand(days, sortOrder);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private boolean isValidSortOrder(String sortOrder) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return ViewRenewalsCommand.SORT_BY_DATE.equals(sortOrder)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || ViewRenewalsCommand.SORT_BY_NAME.equals(sortOrder);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"-":53,"johngao122":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Policy policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Note note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Policy policy, Note note, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.note \u003d (note !\u003d null) ? note : Note.EMPTY;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Policy getPolicy() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getRenewalDate() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return policy.renewalDate.toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public LocalDate getRenewalDateValue() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return policy.renewalDate.value;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Note getNote() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"johngao122"},"content":"     * Returns true if both persons have the same policy number.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPolicy().getPolicyNumber().equals(getPolicy().getPolicyNumber());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 policy.equals(otherPerson.policy)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 note.equals(otherPerson.note)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, policy, note, tags);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"policy\", policy)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"note\", note)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":141,"johngao122":1}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MakiseKurisuX"},"content":"            \"Phone numbers should only contain numbers, and it should follow the E.164 Phone Number Standard\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MakiseKurisuX"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\+?[1-9]\\\\d{2,14}$\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":2,"-":59}},{"path":"src/main/java/seedu/address/model/person/PolicyTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Policy} type matches any of the keywords given.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PolicyTypeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Set\u003cPolicyType\u003e keywords;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code PolicyTypeContainsKeywordsPredicate}.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param keywords A set of strings to match against policy types","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jovin-Ang"},"content":"    public PolicyTypeContainsKeywordsPredicate(Set\u003cPolicyType\u003e keywords) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jovin-Ang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable set of policy type keywords, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns {@code Optional#empty()} if {@code keywords} is null.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cSet\u003cPolicyType\u003e\u003e getPolicyTypes() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return (keywords !\u003d null) ? Optional.of(Collections.unmodifiableSet(keywords)) : Optional.empty();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        PolicyType personPolicyType \u003d person.getPolicy().getType();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return keywords.contains(personPolicyType);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof PolicyTypeContainsKeywordsPredicate)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate otherPolicyTypeContainsKeywordsPredicate \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                (PolicyTypeContainsKeywordsPredicate) other;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return keywords.equals(otherPolicyTypeContainsKeywordsPredicate.keywords);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"Jovin-Ang":2,"-":57}},{"path":"src/main/java/seedu/address/model/person/RenewalDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a renewal date in the address book.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRenewalDate(String)}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class RenewalDate {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DATE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"johngao122"},"content":"            \"Renewal date should be a valid date in DD-MM-YYYY format and must be a future date\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final LocalDate value;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code RenewalDate} with renewal date set to 1 year from now.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public RenewalDate() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.value \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code RenewalDate} with a specific renewal date.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param renewalDate A valid renewal date in DD-MM-YYYY format.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public RenewalDate(String renewalDate) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(renewalDate);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(isValidRenewalDate(renewalDate), DATE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.value \u003d LocalDate.parse(renewalDate, DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid renewal date.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidRenewalDate(String test) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // First check regex","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!test.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            // Split into components","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String[] parts \u003d test.split(\"-\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            // validate month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (month \u003c 1 || month \u003e 12) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            // validate days(for leap years too)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            int maxDays;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            switch (month) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            case 4: case 6: case 9: case 11:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                maxDays \u003d 30;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            case 2:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                boolean isLeapYear \u003d (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0) || (year % 400 \u003d\u003d 0);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                maxDays \u003d isLeapYear ? 29 : 28;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                maxDays \u003d 31;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (day \u003c 1 || day \u003e maxDays) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"johngao122"},"content":"            LocalDate inputDate \u003d LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"johngao122"},"content":"            LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"johngao122"},"content":"            return inputDate.isAfter(now);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the number of days until renewal.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public long getDaysUntilRenewal() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return java.time.temporal.ChronoUnit.DAYS.between(LocalDate.now(), value);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if the renewal is due within the specified number of days.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean isRenewalDueWithin(int days) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        long daysUntil \u003d getDaysUntilRenewal();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return daysUntil \u003e\u003d 0 \u0026\u0026 daysUntil \u003c\u003d days;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return value.format(DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof RenewalDate)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        RenewalDate otherRenewalDate \u003d (RenewalDate) other;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return value.equals(otherRenewalDate.value);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":117,"johngao122":4}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private RenewalsTable renewalsTable;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private PersonDetailPanel personDetailPanel;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane renewalsTablePlaceholder;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane personDetailPanelPlaceholder;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Button showAllButton;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Label filterLabel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String lastUpdated \u003d logic.getModel().getAddressBook().getLastUpdatedString();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        int personCount \u003d logic.getFilteredPersonList().size();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        statusBarFooter \u003d new StatusBarFooter(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logic.getAddressBookFilePath(), lastUpdated, personCount);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, resultDisplay);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        renewalsTable \u003d new RenewalsTable(logic.getModel());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        renewalsTablePlaceholder.getChildren().add(renewalsTable.getRoot());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        personDetailPanel \u003d new PersonDetailPanel();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        personDetailPanelPlaceholder.getChildren().add(personDetailPanel.getRoot());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Observe changes in the filtered person list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        logic.getFilteredPersonList().addListener((ListChangeListener\u003c? super Person\u003e) observable -\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            boolean isFiltered \u003d logic.getFilteredPersonList().size()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    \u003c logic.getModel().getAddressBook().getPersonList().size();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            showAllButton.setVisible(isFiltered);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            showAllButton.setManaged(isFiltered);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        personListPanel.getListView().getSelectionModel().selectedItemProperty().addListener((","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            observable, oldSelection, newSelection) -\u003e {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                if (newSelection !\u003d null) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    personDetailPanel.setPerson(newSelection);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (personListPanel.getListView().getSelectionModel().getSelectedItem() !\u003d null) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            personDetailPanel.setPerson(personListPanel.getListView().getSelectionModel().getSelectedItem());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        primaryStage.setMaximized(true);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private void handleShowAll() throws CommandException, ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        executeCommand(\"list\"); // Reset filter to show all people","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Updates the filter label with the specified date range.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * If both startDate and endDate are not null, the label will be set to display","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * the range in the format: \"Filtered from [startDate] to [endDate]\".","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * @param startDate The start date of the filter range.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * @param endDate The end date of the filter range.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void updateFilterLabel(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (startDate !\u003d null \u0026\u0026 endDate !\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            filterLabel.setText(\"Filtered from \" + startDate.format(RenewalDate.DATE_FORMATTER)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    + \" to \" + endDate.format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            filterLabel.setStyle(\"-fx-text-fill: white; -fx-alignment: center;\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private void updateFilterLabelEmpty() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        filterLabel.setText(\"No active filter\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        filterLabel.setStyle(\"-fx-text-fill: white; -fx-alignment: center;\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (commandText.startsWith(\"find\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"                if (!logic.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    personListPanel.getListView().getSelectionModel().clearSelection();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    personListPanel.getListView().getSelectionModel().selectFirst();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    Person firstPerson \u003d personListPanel.getListView().getSelectionModel().getSelectedItem();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    personDetailPanel.setPerson(firstPerson);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    personListPanel.getListView().getSelectionModel().clearSelection();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    personDetailPanel.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (commandText.startsWith(\"filter\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"                String feedback \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                // Check if it contains a valid date range","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"                if (feedback.contains(\"between\") \u0026\u0026 feedback.contains(\".\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    String[] parts \u003d feedback.split(\"between|\\\\.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                        String[] dates \u003d parts[1].trim().split(\" and \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"                        if (dates.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"                            LocalDate startDate \u003d LocalDate.parse(dates[0].trim());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"                            LocalDate endDate \u003d LocalDate.parse(dates[1].trim());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"                            updateFilterLabel(startDate, endDate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"            } else if (commandText.startsWith(\"viewrenewals\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"                String feedback \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"                if (feedback.contains(\"between\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    String[] parts \u003d feedback.split(\"between|\\\\.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"                        String[] dates \u003d parts[1].trim().split(\" and \");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"                        if (dates.length \u003d\u003d 2) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                            LocalDate startDate \u003d LocalDate.parse(dates[0].trim(), RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"                            LocalDate endDate \u003d LocalDate.parse(dates[1].trim(), RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"                            updateFilterLabel(startDate, endDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    updateFilterLabelEmpty();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"                updateFilterLabelEmpty();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"            // Update renewals table after each command","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"            renewalsTable.updateRenewals(logic.getModel());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"MakiseKurisuX"},"content":"            if (logic.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"                renewalsTable.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"                personDetailPanel.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"            String newLastUpdated \u003d logic.getModel().getAddressBook().getLastUpdatedString();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            statusBarFooter.updateLastUpdated(newLastUpdated);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"            int newPersonCount \u003d logic.getFilteredPersonList().size();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"            statusBarFooter.updatePersonCount(newPersonCount);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":330}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"johngao122"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.FindPersonsPredicateBuilder;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_POLICY_AMY \u003d \"123456\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_POLICY_BOB \u003d \"654321\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"johngao122"},"content":"    public static final String VALID_RENEWAL_DATE_AMY \u003d LocalDate.now().plusYears(1)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"johngao122"},"content":"            .format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"johngao122"},"content":"    public static final String VALID_RENEWAL_DATE_BOB \u003d LocalDate.now().plusMonths(6)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"            .format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_POLICY_TYPE_LIFE \u003d \"Life\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_POLICY_TYPE_HEALTH \u003d \"Health\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_NOTE_AMY \u003d \"some note amy\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_NOTE_BOB \u003d \"some note bob\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_SORT_ORDER_NAME \u003d \"name\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_SORT_ORDER_TAG \u003d \"tag\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_SORT_ORDER_DATE \u003d \"date\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String POLICY_DESC_AMY \u003d \" \" + PREFIX_POLICY + VALID_POLICY_AMY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String POLICY_DESC_BOB \u003d \" \" + PREFIX_POLICY + VALID_POLICY_BOB;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String RENEWAL_DATE_DESC_AMY \u003d \" \" + PREFIX_RENEWAL_DATE + VALID_RENEWAL_DATE_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String RENEWAL_DATE_DESC_BOB \u003d \" \" + PREFIX_RENEWAL_DATE + VALID_RENEWAL_DATE_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String POLICY_TYPE_DESC_LIFE \u003d \" \" + PREFIX_POLICY_TYPE + VALID_POLICY_TYPE_LIFE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String POLICY_TYPE_DESC_HEALTH \u003d \" \" + PREFIX_POLICY_TYPE + VALID_POLICY_TYPE_HEALTH;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String SORT_ORDER_DESC_NAME \u003d \" \" + PREFIX_SORT_ORDER + VALID_SORT_ORDER_NAME;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String SORT_ORDER_DESC_TAG \u003d \" \" + PREFIX_SORT_ORDER + VALID_SORT_ORDER_TAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String SORT_ORDER_DESC_DATE \u003d \" \" + PREFIX_SORT_ORDER + VALID_SORT_ORDER_DATE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_POLICY_DESC \u003d \" \" + PREFIX_POLICY + \"123 456\"; // spaces not allowed in policies","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_RENEWAL_DATE_DESC \u003d \" \" + PREFIX_RENEWAL_DATE + \"31-13-2024\"; // invalid month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_SORT_ORDER_DESC \u003d \" \" + PREFIX_SORT_ORDER + \"invalid\"; // no such sort order","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withPolicy(VALID_POLICY_AMY).withRenewalDate(VALID_RENEWAL_DATE_AMY)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withPolicyType(VALID_POLICY_TYPE_LIFE)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPolicy(VALID_POLICY_BOB).withRenewalDate(VALID_RENEWAL_DATE_BOB)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withPolicyType(VALID_POLICY_TYPE_HEALTH)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new FindPersonsPredicateBuilder(person).build());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"-":159,"johngao122":6}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"johngao122"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_TYPE_HEALTH;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Get the original renewal date to use in expected result","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String renewalDate \u003d originalPerson.getPolicy().renewalDate.toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .withRenewalDate(renewalDate) // Use the same renewal date","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_policyTypeEditUnfilteredList_success() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInList).withPolicyType(VALID_POLICY_TYPE_HEALTH).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPolicyType(VALID_POLICY_TYPE_HEALTH).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(personInList, editedPerson);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"johngao122"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_POLICY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"johngao122"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"-":205,"johngao122":4}},{"path":"src/test/java/seedu/address/logic/commands/FilterDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FilterDateCommandTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Person alice;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Person bob;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Person charlie;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        alice \u003d new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                .withPhone(\"85355255\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@gmail.com\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"12345\", baseDate.format(RenewalDate.DATE_FORMATTER)).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        bob \u003d new PersonBuilder().withName(\"Bob\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .withPhone(\"85355255\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withEmail(\"bob@gmail.com\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(\"456, Clementi Ave 3, #05-333\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"67890\", baseDate.plusDays(10).format(RenewalDate.DATE_FORMATTER)).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        charlie \u003d new PersonBuilder().withName(\"Charlie\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .withPhone(\"85555255\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .withEmail(\"charlie@gmail.com\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .withAddress(\"789, Tampines St 12, #07-222\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"11111\", baseDate.plusDays(20).format(RenewalDate.DATE_FORMATTER)).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_emptyModel_noResults() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d baseDate.minusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d baseDate.plusDays(30);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FilterDateCommand command \u003d new FilterDateCommand(startDate, endDate, \"date\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(String.format(FilterDateCommand.MESSAGE_NO_RESULTS, startDate, endDate),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validDateRange_filtersCorrectly() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(alice);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(bob);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(charlie);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d baseDate.minusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d baseDate.plusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FilterDateCommand command \u003d new FilterDateCommand(startDate, endDate, \"date\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(String.format(FilterDateCommand.MESSAGE_FILTER_SUCCESS, 2, startDate, endDate),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getRenewalsList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(2, filteredList.size());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(filteredList.contains(alice));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(filteredList.contains(bob));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(filteredList.contains(charlie));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_sortByName_sortsCorrectly() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.addPerson(bob);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.addPerson(alice);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.addPerson(charlie);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d baseDate.minusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d baseDate.plusDays(30);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command \u003d new FilterDateCommand(startDate, endDate, \"name\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        command.execute(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getRenewalsList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(3, filteredList.size());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(alice, filteredList.get(0));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(bob, filteredList.get(1));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(charlie, filteredList.get(2));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_sortByDate_sortsCorrectly() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.addPerson(charlie);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.addPerson(bob);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.addPerson(alice);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d baseDate.minusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d baseDate.plusDays(30);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command \u003d new FilterDateCommand(startDate, endDate, \"date\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        command.execute(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getRenewalsList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(3, filteredList.size());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(alice, filteredList.get(0));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(bob, filteredList.get(1));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(charlie, filteredList.get(2));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_noResults_returnsNoResults() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"johngao122"},"content":"        LocalDate farFutureDate \u003d LocalDate.now().plusYears(5);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person futurePerson \u003d new PersonBuilder().withName(\"Future\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withPhone(\"88888888\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withEmail(\"future@gmail.com\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withAddress(\"Future Avenue\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"99999\", farFutureDate.format(RenewalDate.DATE_FORMATTER)).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        model.addPerson(futurePerson);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d baseDate.minusDays(10);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d baseDate.plusDays(30);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        FilterDateCommand command \u003d new FilterDateCommand(startDate, endDate, null);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(String.format(FilterDateCommand.MESSAGE_NO_RESULTS, startDate, endDate),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(model.getRenewalsList().isEmpty());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command1 \u003d new FilterDateCommand(baseDate, baseDate.plusDays(30), \"date\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command2 \u003d new FilterDateCommand(baseDate, baseDate.plusDays(30), \"date\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command3 \u003d new FilterDateCommand(baseDate.plusMonths(1), baseDate.plusMonths(2), \"date\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"johngao122"},"content":"        FilterDateCommand command4 \u003d new FilterDateCommand(baseDate, baseDate.plusDays(30), \"name\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(command1.equals(command1)); //same object","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(command1.equals(null)); // Null","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(command1.equals(new ClearCommand())); // Different type","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(command1.equals(command3)); // Different date range","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(command1.equals(command4)); // Different sorting","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"-":127,"johngao122":30}},{"path":"src/test/java/seedu/address/logic/commands/RenewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_BOB;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RENEWAL_DATE_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RENEWAL_DATE_BOB;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code RenewCommand}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class RenewCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validPolicyAndRenewalDate_success() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person updatedPerson \u003d new PersonBuilder(firstPerson).withRenewalDate(VALID_RENEWAL_DATE_BOB).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        RenewCommand renewCommand \u003d new RenewCommand(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                firstPerson.getPolicy().getPolicyNumber(), new RenewalDate(VALID_RENEWAL_DATE_BOB));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                RenewCommand.MESSAGE_RENEW_SUCCESS,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                firstPerson.getPolicy().getPolicyNumber(),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                VALID_RENEWAL_DATE_BOB);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, updatedPerson);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandSuccess(renewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_nonExistentPolicy_throwsCommandException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nonExistentPolicy \u003d \"999999\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        RenewCommand renewCommand \u003d new RenewCommand(nonExistentPolicy, new RenewalDate(VALID_RENEWAL_DATE_AMY));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RenewCommand.MESSAGE_POLICY_NOT_FOUND, nonExistentPolicy);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e renewCommand.execute(model));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_multiplePoliciesFound_throwsCommandException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Create a second person with the same policy number as the first person","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String existingPolicy \u003d firstPerson.getPolicy().getPolicyNumber();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person duplicatePolicyPerson \u003d new PersonBuilder()","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withName(\"Different Name\")","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPolicy(existingPolicy)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"johngao122"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e model.addPerson(duplicatePolicyPerson));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        RenewCommand renewFirstCommand \u003d new RenewCommand(VALID_POLICY_AMY, new RenewalDate(VALID_RENEWAL_DATE_AMY));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        RenewCommand renewSecondCommand \u003d new RenewCommand(VALID_POLICY_BOB, new RenewalDate(VALID_RENEWAL_DATE_BOB));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(renewFirstCommand.equals(renewFirstCommand));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        RenewCommand renewFirstCommandCopy \u003d new RenewCommand(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            VALID_POLICY_AMY,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE_AMY));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(renewFirstCommand.equals(renewFirstCommandCopy));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(renewFirstCommand.equals(1));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(renewFirstCommand.equals(null));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different policy -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(renewFirstCommand.equals(renewSecondCommand));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different renewal date -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        RenewCommand renewFirstCommandDifferentDate \u003d new RenewCommand(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            VALID_POLICY_AMY,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE_BOB));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(renewFirstCommand.equals(renewFirstCommandDifferentDate));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"-":92,"johngao122":2}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RENEWAL_DATE_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FilterDateCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonsPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RenewCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewRenewalsCommand;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.FindPersonsPredicateBuilder;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder(person).build();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + PersonUtil.getFindPersonDetails(predicate));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(predicate, FindCommand.DEFAULT_SORT), command);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_viewRenewals() throws Exception {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Test with default parameters","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ViewRenewalsCommand defaultCommand \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                (ViewRenewalsCommand) parser.parseCommand(ViewRenewalsCommand.COMMAND_WORD);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                new ViewRenewalsCommand(ViewRenewalsCommand.DEFAULT_DAYS, ViewRenewalsCommand.DEFAULT_SORT),","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                defaultCommand);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Test with custom parameters","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ViewRenewalsCommand customCommand \u003d (ViewRenewalsCommand) parser.parseCommand(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                ViewRenewalsCommand.COMMAND_WORD + \" n/60 s/name\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(new ViewRenewalsCommand(60, \"name\"), customCommand);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"johngao122"},"content":"        LocalDate startDate \u003d LocalDate.now().plusMonths(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"johngao122"},"content":"        LocalDate endDate \u003d startDate.plusMonths(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Test with default parameters","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        FilterDateCommand defaultCommand \u003d (FilterDateCommand) parser.parseCommand(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                FilterDateCommand.COMMAND_WORD + \" sd/\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        + startDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \" ed/\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                        + endDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new FilterDateCommand(startDate, endDate, \"date\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                defaultCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Test with custom parameters","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        FilterDateCommand customCommand \u003d (FilterDateCommand) parser.parseCommand(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                FilterDateCommand.COMMAND_WORD + \" sd/\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                        + startDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \" ed/\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                        + endDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \" s/name\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(new FilterDateCommand(startDate, endDate, \"name\"), customCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseCommand_renew() throws Exception {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        RenewCommand command \u003d (RenewCommand) parser.parseCommand(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                RenewCommand.COMMAND_WORD + \" pol/\" + VALID_POLICY_AMY + \" r/\" + VALID_RENEWAL_DATE_AMY);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(new RenewCommand(VALID_POLICY_AMY, new RenewalDate(VALID_RENEWAL_DATE_AMY)), command);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"-":150,"johngao122":2}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POLICY_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SORT_ORDER_DESC;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_TYPE_DESC_LIFE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_ORDER_DESC_NAME;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_ORDER_DESC_TAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_TYPE_LIFE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jovin-Ang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jovin-Ang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.FindPersonsPredicateBuilder;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", FindCommand.MESSAGE_NOT_FOUND);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // empty argument specified","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", FindCommand.MESSAGE_NOT_FOUND);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_POLICY_DESC, Policy.MESSAGE_CONSTRAINTS); // invalid policy","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid name","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + NAME_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + INVALID_ADDRESS_DESC + INVALID_POLICY_DESC + INVALID_TAG_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String userInput \u003d PHONE_DESC_BOB + NAME_DESC_AMY + POLICY_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder().withNames(VALID_NAME_AMY)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withPhones(VALID_PHONE_BOB).withEmails(VALID_EMAIL_AMY).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withPolicies(VALID_POLICY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FindCommand expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d NAME_DESC_AMY + PHONE_DESC_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder().withNames(VALID_NAME_AMY)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhones(VALID_PHONE_BOB).build();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        FindCommand expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder().withNames(VALID_NAME_AMY)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        FindCommand expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withPhones(VALID_PHONE_AMY).build();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withEmails(VALID_EMAIL_AMY).build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d ADDRESS_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withAddresses(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // policy","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d POLICY_DESC_AMY;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withPolicies(VALID_POLICY_AMY).build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // policy type","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d POLICY_TYPE_DESC_LIFE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withPolicyTypes(VALID_POLICY_TYPE_LIFE).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicateBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_success() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String userInput \u003d NAME_DESC_AMY + PHONE_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withNames(VALID_NAME_AMY, VALID_NAME_BOB).withPhones(VALID_PHONE_AMY, VALID_PHONE_BOB)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .withEmails(VALID_EMAIL_AMY, VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        FindCommand expectedCommand \u003d new FindCommand(predicate, FindCommand.DEFAULT_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String userInput \u003d INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        userInput \u003d INVALID_PHONE_DESC + INVALID_NAME_DESC","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_NAME_DESC","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Jovin-Ang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Jovin-Ang"},"content":"        // multiple sort orders","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Jovin-Ang"},"content":"        userInput \u003d NAME_DESC_AMY + PHONE_DESC_BOB + SORT_ORDER_DESC_NAME + SORT_ORDER_DESC_TAG;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Jovin-Ang"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Jovin-Ang"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SORT_ORDER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_validSortOrderSpecified_success() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // sort by name","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String userInput \u003d NAME_DESC_AMY + PHONE_DESC_BOB + SORT_ORDER_DESC_NAME;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        FindCommand.FindPersonsPredicate predicate \u003d new FindPersonsPredicateBuilder().withNames(VALID_NAME_AMY)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .withPhones(VALID_PHONE_BOB).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        FindCommand expectedCommand \u003d new FindCommand(predicate, FindCommand.SORT_BY_NAME);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // sort by tag","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        userInput \u003d NAME_DESC_AMY + PHONE_DESC_BOB + SORT_ORDER_DESC_TAG;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new FindCommand(predicate, FindCommand.SORT_BY_TAG);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_invalidSortOrderSpecified_failure() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // invalid sort order","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String userInput \u003d NAME_DESC_AMY + PHONE_DESC_BOB + INVALID_SORT_ORDER_DESC;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, FindCommandParser.MESSAGE_INVALID_SORT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27","isFullCredit":false}],"authorContributionMap":{"Jovin-Ang":7,"-":217}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MakiseKurisuX"},"content":"    private static final String INVALID_PHONE \u003d \"+11\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_POLICY \u003d \"123a\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME_1 \u003d \"Rachel Walker\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME_2 \u003d \"Johnson Goh\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE_1 \u003d \"123456\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE_2 \u003d \"789012\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_POLICY \u003d \"123456\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME_1 + WHITESPACE;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseNames_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNames(null));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseNames_collectionWithInvalidNames_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhones(Arrays.asList(VALID_NAME_1, INVALID_NAME)));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseNames_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parsePhones(Collections.emptyList()).isEmpty());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseNames_collectionWithValidNames_returnsNameSet() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cName\u003e actualNameSet \u003d ParserUtil.parseNames(Arrays.asList(VALID_NAME_1, VALID_NAME_2));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cName\u003e expectedNameSet \u003d new HashSet\u003cName\u003e(Arrays.asList(new Name(VALID_NAME_1), new Name(VALID_NAME_2)));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedNameSet, actualNameSet);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE_1));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE_1 + WHITESPACE;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE_1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parsePhones_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhones(null));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parsePhones_collectionWithInvalidPhones_throwsParseException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhones(Arrays.asList(VALID_PHONE_1, INVALID_PHONE)));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parsePhones_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parsePhones(Collections.emptyList()).isEmpty());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parsePhones_collectionWithValidPhones_returnsPhoneSet() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Set\u003cPhone\u003e actualPhoneSet \u003d ParserUtil.parsePhones(Arrays.asList(VALID_PHONE_1, VALID_PHONE_2));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Set\u003cPhone\u003e expectedPhoneSet \u003d new HashSet\u003cPhone\u003e(Arrays.asList(","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                new Phone(VALID_PHONE_1), new Phone(VALID_PHONE_2)));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhoneSet, actualPhoneSet);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parsePolicy_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePolicy((String) null));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parsePolicy_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicy(INVALID_POLICY));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parsePolicy_validValueWithoutWhitespace_returnsPolicy() throws Exception {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Policy expectedPolicy \u003d new Policy(VALID_POLICY);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(expectedPolicy, ParserUtil.parsePolicy(VALID_POLICY));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parsePolicy_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String policyWithWhitespace \u003d WHITESPACE + VALID_POLICY + WHITESPACE;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Policy expectedPolicy \u003d new Policy(VALID_POLICY);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(expectedPolicy, ParserUtil.parsePolicy(policyWithWhitespace));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseNote_null_throwsNullPointerException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNote((String) null));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseNote_validValueWithoutWhitespace_returnsNote() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String validNote \u003d \"Test note\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(new Note(validNote), ParserUtil.parseNote(validNote));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseNote_validValueWithWhitespace_returnsTrimmedNote() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String noteWithWhitespace \u003d WHITESPACE + \"Test note\" + WHITESPACE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(new Note(\"Test note\"), ParserUtil.parseNote(noteWithWhitespace));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":288}},{"path":"src/test/java/seedu/address/logic/parser/RenewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POLICY_DESC;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RENEWAL_DATE_DESC;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_DESC_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RENEWAL_DATE_DESC_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RENEWAL_DATE_AMY;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"johngao122"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"johngao122"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RenewCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class RenewCommandParserTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private RenewCommandParser parser \u003d new RenewCommandParser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Valid policy number and renewal date","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new RenewCommand(VALID_POLICY_AMY, new RenewalDate(VALID_RENEWAL_DATE_AMY)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"  \" + POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new RenewCommand(VALID_POLICY_AMY, new RenewalDate(VALID_RENEWAL_DATE_AMY)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RenewCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // missing policy prefix","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_POLICY_AMY + RENEWAL_DATE_DESC_AMY, expectedMessage);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // missing renewal date prefix","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + VALID_RENEWAL_DATE_AMY, expectedMessage);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // missing both prefixes","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_POLICY_AMY + VALID_RENEWAL_DATE_AMY, expectedMessage);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // missing renewal date value","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + PREFIX_RENEWAL_DATE + \" \", expectedMessage);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // invalid policy number","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_POLICY_DESC + RENEWAL_DATE_DESC_AMY, Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // invalid renewal date","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + INVALID_RENEWAL_DATE_DESC, RenewalDate.DATE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // invalid policy number and invalid renewal date","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_POLICY_DESC + INVALID_RENEWAL_DATE_DESC, Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"johngao122"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"johngao122"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"johngao122"},"content":"        // duplicate policy prefix","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"johngao122"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY + POLICY_DESC_AMY,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"johngao122"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POLICY));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"johngao122"},"content":"        // duplicate renewal date prefix","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"johngao122"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY + RENEWAL_DATE_DESC_AMY,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"johngao122"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_RENEWAL_DATE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"johngao122"},"content":"        // both prefixes duplicated","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"johngao122"},"content":"        assertParseFailure(parser, POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY + POLICY_DESC_AMY + RENEWAL_DATE_DESC_AMY,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"johngao122"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POLICY, PREFIX_RENEWAL_DATE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"johngao122"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"-":62,"johngao122":17}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.FindPersonsPredicateBuilder;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getRenewalsList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getRenewalsList().remove(0));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void updateSortedRenewalsList_nullComparator_throwsNullPointerException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateSortedRenewalsList(null));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void updateSortedRenewalsList_validComparator_sortsList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Create persons with different renewal dates","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String nextWeek \u003d LocalDate.now().plusDays(7).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"johngao122"},"content":"        String nextMonth \u003d LocalDate.now().plusMonths(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"johngao122"},"content":"        Person personTomorrow \u003d new PersonBuilder().withName(\"Tomorrow Person\").withPolicy(\"111111\", tomorrow).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"johngao122"},"content":"        Person personNextWeek \u003d new PersonBuilder().withName(\"NextWeek Person\").withPolicy(\"222222\", nextWeek).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"johngao122"},"content":"        Person personNextMonth \u003d new PersonBuilder().withName(\"NextMonth Person\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"333333\", nextMonth).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Add persons to model","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"johngao122"},"content":"        modelManager.addPerson(personNextMonth);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.addPerson(personTomorrow);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"johngao122"},"content":"        modelManager.addPerson(personNextWeek);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Update renewals list with all persons","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Sort by days until renewal (ascending)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e daysUntilRenewalComparator \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Comparator.comparingLong(person -\u003e person.getPolicy().getDaysUntilRenewal());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        modelManager.updateSortedRenewalsList(daysUntilRenewalComparator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Check that the list is sorted correctly","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedList \u003d modelManager.getRenewalsList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(3, sortedList.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"johngao122"},"content":"        assertEquals(personTomorrow, sortedList.get(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextWeek, sortedList.get(1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextMonth, sortedList.get(2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // Sort by name","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"johngao122"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d Comparator.comparing(person -\u003e person.getName().fullName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.updateSortedRenewalsList(nameComparator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // Check that the list is sorted by name","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        sortedList \u003d modelManager.getRenewalsList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(3, sortedList.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextMonth, sortedList.get(0)); // \"NextMonth Person\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextWeek, sortedList.get(1)); // \"NextWeek Person\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(personTomorrow, sortedList.get(2)); // \"Tomorrow Person\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void updateRenewalsList_withExistingComparator_maintainsSorting() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Create persons with different renewal dates","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String nextWeek \u003d LocalDate.now().plusDays(7).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"johngao122"},"content":"        String nextMonth \u003d LocalDate.now().plusMonths(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"johngao122"},"content":"        Person personTomorrow \u003d new PersonBuilder()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"johngao122"},"content":"                .withName(\"Tomorrow Person\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"111111\", tomorrow)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"johngao122"},"content":"                .build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"johngao122"},"content":"        Person personNextWeek \u003d new PersonBuilder()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"johngao122"},"content":"                .withName(\"NextWeek Person\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"222222\", nextWeek)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"johngao122"},"content":"                .build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"johngao122"},"content":"        Person personNextMonth \u003d new PersonBuilder()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"johngao122"},"content":"                .withName(\"NextMonth Person\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"333333\", nextMonth)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"johngao122"},"content":"                .build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Add persons to model","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"johngao122"},"content":"        modelManager.addPerson(personNextMonth);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        modelManager.addPerson(personTomorrow);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"johngao122"},"content":"        modelManager.addPerson(personNextWeek);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Set a comparator first","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e daysUntilRenewalComparator \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                Comparator.comparingLong(person -\u003e person.getPolicy().getDaysUntilRenewal());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        modelManager.updateSortedRenewalsList(daysUntilRenewalComparator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Now update the renewals list - it should maintain the sorting","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        modelManager.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Check that the list is still sorted correctly","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedList \u003d modelManager.getRenewalsList();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(3, sortedList.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"johngao122"},"content":"        assertEquals(personTomorrow, sortedList.get(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextWeek, sortedList.get(1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"johngao122"},"content":"        assertEquals(personNextMonth, sortedList.get(2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        modelManagerCopy.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // different renewalsList -\u003e returns false","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        modelManager.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        modelManagerCopy.updateRenewalsList(p -\u003e false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new FindPersonsPredicateBuilder(ALICE).build());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        modelManagerCopy.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        modelManager.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        modelManagerCopy.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void addPerson_updatesLastUpdated() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // After adding a person, lastUpdated should be set.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertNotNull(modelManager.getAddressBook().getLastUpdated());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void deletePerson_updatesLastUpdated() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        LocalDateTime afterAdd \u003d modelManager.getAddressBook().getLastUpdated();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // Delete the person and check that lastUpdated is updated.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        LocalDateTime afterDelete \u003d modelManager.getAddressBook().getLastUpdated();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertNotNull(afterDelete);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // It is expected that the time will progress; thus afterDelete should be after or equal to afterAdd.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertTrue(afterDelete.isAfter(afterAdd) || afterDelete.isEqual(afterAdd));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void setPerson_updatesLastUpdated() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        LocalDateTime afterAdd \u003d modelManager.getAddressBook().getLastUpdated();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // Replace ALICE with BENSON (using a typical person) to test that lastUpdated is updated.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        modelManager.setPerson(ALICE, BENSON);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        LocalDateTime afterSet \u003d modelManager.getAddressBook().getLastUpdated();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertNotNull(afterSet);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // Ensure that lastUpdated is updated.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertTrue(afterSet.isAfter(afterAdd) || afterSet.isEqual(afterAdd));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void equals_differentRenewalsComparator_returnsFalse() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ModelManager modelManager1 \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        ModelManager modelManager2 \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // Set different comparators","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        modelManager1.updateSortedRenewalsList(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"                Comparator.comparing(person -\u003e person.getName().fullName));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        modelManager2.updateSortedRenewalsList(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                Comparator.comparingLong(person -\u003e person.getPolicy().getDaysUntilRenewal()));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // Models should not be equal due to different comparators","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertFalse(modelManager1.equals(modelManager2));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void equals_differentFilteredRenewalsList_returnsFalse() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        ModelManager modelManager1 \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        ModelManager modelManager2 \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // Update renewals list with all persons","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        modelManager1.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        modelManager2.updateRenewalsList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // Apply different predicates to the filtered renewals list","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        modelManager1.setFilteredRenewalsListPredicate(p -\u003e true);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        modelManager2.setFilteredRenewalsListPredicate(p -\u003e false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // Models should not be equal due to different filtered renewals lists","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertFalse(modelManager1.equals(modelManager2));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public void updateSortedPersonList_nullComparator_resetsToOriginalOrder() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"johngao122"},"content":"        // Ensure no duplicate policy numbers in the test data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"johngao122"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").withPolicy(\"111111\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"johngao122"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPolicy(\"222222\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"johngao122"},"content":"        Person person3 \u003d new PersonBuilder().withName(\"Charlie\").withPolicy(\"333333\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"johngao122"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person3);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"johngao122"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"johngao122"},"content":"        modelManager.updateSortedPersonList(Comparator.comparing(p -\u003e p.getName().fullName));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"johngao122"},"content":"        modelManager.updateSortedPersonList(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"johngao122"},"content":"        assertEquals(modelManager.getFilteredPersonList(), modelManager.getFilteredPersonList());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public void updateSortedPersonList_validComparator_doesNotThrowException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"johngao122"},"content":"        // Ensure no duplicate policy numbers in the test data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"johngao122"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").withPolicy(\"111111\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"johngao122"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").withPolicy(\"222222\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"johngao122"},"content":"        Person person3 \u003d new PersonBuilder().withName(\"Charlie\").withPolicy(\"333333\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"johngao122"},"content":"        addressBook.addPerson(person3);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"johngao122"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"johngao122"},"content":"        modelManager.updateSortedPersonList(Comparator.comparing(p -\u003e p.getName().fullName));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void getRenewalsComparator_returnsCorrectComparator() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"        // Initially the comparator should be null","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.getRenewalsComparator() !\u003d null);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"        // Set a comparator","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d Comparator.comparing(person -\u003e person.getName().fullName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        modelManager.updateSortedRenewalsList(nameComparator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        // Check that getRenewalsComparator returns the correct comparator","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"        assertEquals(nameComparator, modelManager.getRenewalsComparator());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"        // Set a different comparator","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e daysUntilRenewalComparator \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"                Comparator.comparingLong(person -\u003e person.getPolicy().getDaysUntilRenewal());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"        modelManager.updateSortedRenewalsList(daysUntilRenewalComparator);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"        // Check that getRenewalsComparator returns the updated comparator","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        assertEquals(daysUntilRenewalComparator, modelManager.getRenewalsComparator());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"-":282,"johngao122":54}},{"path":"src/test/java/seedu/address/model/RenewalProcessorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.RenewalProcessor.RenewalEntry;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RenewalProcessorTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void renewalEntry_createFromPerson_allFieldsCorrect() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        RenewalEntry entry \u003d new RenewalEntry(person);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(person.getName().toString(), entry.getClient());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(person.getPolicy().policyNumber, entry.getPolicy());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(person.getPolicy().renewalDate.value, entry.getRenewalDate());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(person.getPolicy().getDaysUntilRenewal(), entry.getDaysLeft());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(\"Life\", entry.getType()); // Current placeholder value","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(person.getPhone().toString(), entry.getContact());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"johngao122"},"content":"    public void processRenewals_withMultiplePersons_preservesOrder() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person person1 \u003d new PersonBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"111111\", LocalDate.now().plusDays(10).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person2 \u003d new PersonBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withName(\"Bob\")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"222222\", LocalDate.now().plusDays(5).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person3 \u003d new PersonBuilder()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withName(\"Charlie\")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"johngao122"},"content":"                .withPolicy(\"333333\", LocalDate.now().plusDays(15).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e persons \u003d Arrays.asList(person1, person2, person3);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        RenewalTableData tableData \u003d RenewalProcessor.processRenewals(persons);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cRenewalEntry\u003e entries \u003d tableData.getEntries();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"johngao122"},"content":"        // Check that order is preserved","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(3, entries.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"johngao122"},"content":"        assertEquals(\"Alice\", entries.get(0).getClient());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"johngao122"},"content":"        assertEquals(\"Bob\", entries.get(1).getClient());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"johngao122"},"content":"        assertEquals(\"Charlie\", entries.get(2).getClient());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void processRenewals_withEmptyList_returnsEmptyTableData() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        RenewalTableData tableData \u003d RenewalProcessor.processRenewals(Arrays.asList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotNull(tableData);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(0, tableData.getEntries().size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"-":56,"johngao122":8}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_BOB;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"johngao122"},"content":"        // same policy number, all other attributes different -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"johngao122"},"content":"        // different policy number -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPolicy(VALID_POLICY_BOB).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"johngao122"},"content":"        // different name but same policy number -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"johngao122"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"        // name differs in case, same policy number -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BENSON).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"johngao122"},"content":"        assertTrue(BENSON.isSamePerson(editedBob));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"johngao122"},"content":"        // name has trailing spaces, same policy number -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BENSON).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"johngao122"},"content":"        assertTrue(BENSON.isSamePerson(editedBob));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BENSON));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different policy -\u003e returns false","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPolicy(VALID_POLICY_BOB).build();","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNote(\"A different... note\").build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", policy\u003d\" + ALICE.getPolicy()","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", note\u003d\" + ALICE.getNote() + \"}\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"-":105,"johngao122":8}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MakiseKurisuX"},"content":"        assertFalse(Phone.isValidPhone(\"93121534111111111111111111111111111111\")); // obviously not a valid phone number","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":60}},{"path":"src/test/java/seedu/address/model/person/PolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PolicyTest {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String VALID_POLICY_NUMBER \u003d \"123456\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String VALID_RENEWAL_DATE \u003d LocalDate.now().plusDays(30)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            .format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(null));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            (RenewalDate) null));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            (PolicyType) null));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_invalidPolicy_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String invalidPolicy \u003d \"\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(invalidPolicy));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            invalidPolicy,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            invalidPolicy,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            PolicyType.LIFE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void constructor_invalidRenewalDate_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String invalidDate \u003d \"invalid-date\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new RenewalDate(invalidDate)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new RenewalDate(invalidDate),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PolicyType.LIFE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void constructor_invalidDateFormat_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidButMatchingDate \u003d \"31-13-2024\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER, new RenewalDate(invalidButMatchingDate)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER, new RenewalDate(invalidButMatchingDate), PolicyType.LIFE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void constructor_invalidPolicyType_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.fromString(\"Invalid\")));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void constructor_defaultRenewalDate_setsToOneYear() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(VALID_POLICY_NUMBER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        LocalDate expectedDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, policy.renewalDate.value);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.LIFE, policy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void constructor_withPolicyType_setsCorrectType() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.HEALTH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.HEALTH, policy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void constructor_allPolicyTypes_setsCorrectType() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Policy lifePolicy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.LIFE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Policy healthPolicy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.HEALTH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Policy propertyPolicy \u003d new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            new RenewalDate(VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            PolicyType.PROPERTY);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Policy vehiclePolicy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.VEHICLE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Policy travelPolicy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE), PolicyType.TRAVEL);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.LIFE, lifePolicy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.HEALTH, healthPolicy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.PROPERTY, propertyPolicy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.VEHICLE, vehiclePolicy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.TRAVEL, travelPolicy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void constructor_twoParams_setsDefaultType() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(VALID_RENEWAL_DATE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.LIFE, policy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void isValidPolicy() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null policy number","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Policy.isValidPolicy(null));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid policy numbers","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidPolicy(\"\")); // empty string","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidPolicy(\" \")); // spaces only","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidPolicy(\"policy\")); // non-numeric","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidPolicy(\"1033p041\")); // alphabets within digits","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidPolicy(\"3912 1534\")); // spaces within digits","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // valid policy numbers","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(Policy.isValidPolicy(\"1\")); // exactly 1 number","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(Policy.isValidPolicy(\"647274521\"));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(Policy.isValidPolicy(\"12492648284628492623\")); // long policy numbers","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // null renewal date","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(null));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid formats","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"\")); // empty string","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\" \")); // spaces only","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"2024-03-15\")); // wrong format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"15/03/2024\")); // wrong format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"a1-03-2024\")); // non-numeric day","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"15-b3-2024\")); // non-numeric month","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"15-03-20c4\")); // non-numeric year","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"32-03-2024\")); // invalid day","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"15-13-2024\")); // invalid month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"29-02-2023\")); // invalid date (non-leap year)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"31-04-2024\")); // invalid date (April has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"31-06-2024\")); // invalid date (June has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"31-09-2024\")); // invalid date (September has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(Policy.isValidRenewalDate(\"31-11-2024\")); // invalid date (November has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"johngao122"},"content":"        // past dates and today should be invalid","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"johngao122"},"content":"        String pastDate \u003d LocalDate.now().minusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"johngao122"},"content":"        assertFalse(Policy.isValidRenewalDate(pastDate)); // yesterday","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"johngao122"},"content":"        assertFalse(Policy.isValidRenewalDate(LocalDate.now().format(RenewalDate.DATE_FORMATTER))); // today","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"johngao122"},"content":"        // valid future dates","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"johngao122"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"johngao122"},"content":"        String nextMonth \u003d LocalDate.now().plusMonths(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"johngao122"},"content":"        String nextYear \u003d LocalDate.now().plusYears(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"johngao122"},"content":"        assertTrue(Policy.isValidRenewalDate(tomorrow)); // tomorrow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"johngao122"},"content":"        assertTrue(Policy.isValidRenewalDate(nextMonth)); // next month","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"johngao122"},"content":"        assertTrue(Policy.isValidRenewalDate(nextYear)); // next year","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void isRenewalDueWithin() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String futureDate \u003d LocalDate.now().plusDays(30).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(futureDate));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(policy.isRenewalDueWithin(60)); // within range","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(policy.isRenewalDueWithin(30)); // exactly on range","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(policy.isRenewalDueWithin(15)); // outside range","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String date \u003d LocalDate.now().plusDays(30).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(VALID_POLICY_NUMBER, new RenewalDate(date));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(policy.equals(new Policy(VALID_POLICY_NUMBER, new RenewalDate(date))));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(policy.equals(policy));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(policy.equals(null));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(policy.equals(5.0f));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different policy number -\u003e returns false","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(policy.equals(new Policy(\"999999\", new RenewalDate(date))));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different renewal date -\u003e returns false","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String differentDate \u003d LocalDate.now().plusDays(60).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(policy.equals(new Policy(VALID_POLICY_NUMBER, new RenewalDate(differentDate))));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different policy type -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(policy.equals(new Policy(VALID_POLICY_NUMBER, new RenewalDate(date), PolicyType.HEALTH)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // same policy type -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertTrue(policy.equals(new Policy(VALID_POLICY_NUMBER, new RenewalDate(date), PolicyType.LIFE)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void getDaysUntilRenewal_futureDate_returnsPositiveDays() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \"123456\",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            new RenewalDate(LocalDate.now()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .plusDays(5)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .format(RenewalDate.DATE_FORMATTER)));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(5, policy.getDaysUntilRenewal());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void constructor_singleParam_setsRenewalDateToOneYear() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(\"123456\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(LocalDate.now().plusYears(1), policy.renewalDate.value);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(PolicyType.LIFE, policy.getType());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void toString_returnsCorrectString() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Policy policy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.HEALTH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String expected \u003d String.format(\"Policy[%s] Type: %s Renewal: %s\",","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \"123456\", \"Health\", VALID_RENEWAL_DATE);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(expected, policy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void toString_allPolicyTypes_returnsCorrectString() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Policy lifePolicy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.LIFE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Policy healthPolicy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.HEALTH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Policy propertyPolicy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.PROPERTY);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Policy vehiclePolicy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.VEHICLE);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Policy travelPolicy \u003d new Policy(\"123456\", new RenewalDate(VALID_RENEWAL_DATE), PolicyType.TRAVEL);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(String.format(\"Policy[%s] Type: %s Renewal: %s\", \"123456\", \"Life\", VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"                lifePolicy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(String.format(\"Policy[%s] Type: %s Renewal: %s\", \"123456\", \"Health\", VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                healthPolicy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertEquals(String.format(\"Policy[%s] Type: %s Renewal: %s\", \"123456\", \"Property\", VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                propertyPolicy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(String.format(\"Policy[%s] Type: %s Renewal: %s\", \"123456\", \"Vehicle\", VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                vehiclePolicy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(String.format(\"Policy[%s] Type: %s Renewal: %s\", \"123456\", \"Travel\", VALID_RENEWAL_DATE),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                travelPolicy.toString());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-09","isFullCredit":false}],"authorContributionMap":{"-":234,"johngao122":12}},{"path":"src/test/java/seedu/address/model/person/PolicyTypeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PolicyTypeContainsKeywordsPredicateTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jovin-Ang"},"content":"        Set\u003cPolicyType\u003e firstPredicateKeywordSet \u003d Set.of(PolicyType.LIFE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jovin-Ang"},"content":"        Set\u003cPolicyType\u003e secondPredicateKeywordSet \u003d Set.of(PolicyType.LIFE, PolicyType.HEALTH);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"                new PolicyTypeContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new PolicyTypeContainsKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new PolicyTypeContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_policyTypeContainsKeywords_returnsTrue() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Exact match","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jovin-Ang"},"content":"                new PolicyTypeContainsKeywordsPredicate(Set.of(PolicyType.LIFE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicyType(\"Life\").build()));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Case insensitive","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jovin-Ang"},"content":"        predicate \u003d new PolicyTypeContainsKeywordsPredicate(Set.of(PolicyType.fromString(\"life\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicyType(\"LIFE\").build()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Multiple keywords, one matching","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jovin-Ang"},"content":"        predicate \u003d new PolicyTypeContainsKeywordsPredicate(Set.of(PolicyType.fromString(\"PROPERTY\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jovin-Ang"},"content":"                PolicyType.fromString(\"LIFE\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicyType(\"LIFE\").build()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_policyTypeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate predicate \u003d new PolicyTypeContainsKeywordsPredicate(new HashSet\u003c\u003e());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicyType(\"LIFE\").build()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jovin-Ang"},"content":"        predicate \u003d new PolicyTypeContainsKeywordsPredicate(Set.of(PolicyType.fromString(\"VEHICLE\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicyType(\"LIFE\").build()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jovin-Ang"},"content":"        Set\u003cPolicyType\u003e keywords \u003d Set.of(PolicyType.HEALTH, PolicyType.LIFE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        PolicyTypeContainsKeywordsPredicate predicate \u003d new PolicyTypeContainsKeywordsPredicate(keywords);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String actual \u003d predicate.toString();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(actual.startsWith(PolicyTypeContainsKeywordsPredicate.class.getCanonicalName()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(actual.contains(\"Health\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(actual.contains(\"Life\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"Jovin-Ang":8,"-":73}},{"path":"src/test/java/seedu/address/model/person/RenewalDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class RenewalDateTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RenewalDate(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidRenewalDate_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidDate \u003d \"invalid-date\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RenewalDate(invalidDate));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_invalidDateFormat_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // This date string matches the regex but is not a valid date","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String invalidButMatchingDate \u003d \"31-13-2024\"; // invalid month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RenewalDate(invalidButMatchingDate));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_defaultRenewalDate_setsToOneYear() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        RenewalDate renewalDate \u003d new RenewalDate();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        LocalDate expectedDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, renewalDate.value);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null renewal date","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // invalid formats","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"\")); // empty string","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\" \")); // spaces only","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"2024-03-15\")); // wrong format","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"15/03/2024\")); // wrong format","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"a1-03-2024\")); // non-numeric day","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"15-b3-2024\")); // non-numeric month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"15-03-20c4\")); // non-numeric year","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"32-03-2024\")); // invalid day","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"15-13-2024\")); // invalid month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"29-02-2023\")); // invalid date (non-leap year)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"31-04-2024\")); // invalid date (April has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"31-06-2024\")); // invalid date (June has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"31-09-2024\")); // invalid date (September has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"31-11-2024\")); // invalid date (November has 30 days)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"johngao122"},"content":"        // past dates","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"johngao122"},"content":"        String pastDate \u003d LocalDate.now().minusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(pastDate)); // yesterday","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(LocalDate.now().format(RenewalDate.DATE_FORMATTER))); // today","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"johngao122"},"content":"        // valid future dates","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"johngao122"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"johngao122"},"content":"        String nextMonth \u003d LocalDate.now().plusMonths(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"johngao122"},"content":"        String nextYear \u003d LocalDate.now().plusYears(1).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(tomorrow)); // tomorrow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(nextMonth)); // next month","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(nextYear)); // next year","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate_thirtyDayMonths() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"johngao122"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"johngao122"},"content":"        while (futureDate.getMonthValue() !\u003d 4) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"johngao122"},"content":"            futureDate \u003d futureDate.plusMonths(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"johngao122"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"johngao122"},"content":"        String aprilDate \u003d String.format(\"30-%02d-%d\", futureDate.getMonthValue(), futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"johngao122"},"content":"        String invalidAprilDate \u003d String.format(\"31-%02d-%d\", futureDate.getMonthValue(), futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // April (4), June (6), September (9), November (11)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(aprilDate)); // valid last day","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidAprilDate)); // invalid day","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"johngao122"},"content":"        // Get future dates for other months","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"johngao122"},"content":"        LocalDate juneDate \u003d futureDate.plusMonths(2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"johngao122"},"content":"        LocalDate septDate \u003d futureDate.plusMonths(5);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"johngao122"},"content":"        LocalDate novDate \u003d futureDate.plusMonths(7);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"johngao122"},"content":"        String juneValidDate \u003d String.format(\"30-%02d-%d\", juneDate.getMonthValue(), juneDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"johngao122"},"content":"        String juneInvalidDate \u003d String.format(\"31-%02d-%d\", juneDate.getMonthValue(), juneDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(juneValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(juneInvalidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"johngao122"},"content":"        String septValidDate \u003d String.format(\"30-%02d-%d\", septDate.getMonthValue(), septDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"johngao122"},"content":"        String septInvalidDate \u003d String.format(\"31-%02d-%d\", septDate.getMonthValue(), septDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(septValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(septInvalidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"johngao122"},"content":"        String novValidDate \u003d String.format(\"30-%02d-%d\", novDate.getMonthValue(), novDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"johngao122"},"content":"        String novInvalidDate \u003d String.format(\"31-%02d-%d\", novDate.getMonthValue(), novDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(novValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(novInvalidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate_thirtyOneDayMonths() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"johngao122"},"content":"        // Get a future date in January 2024 or later","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"johngao122"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"johngao122"},"content":"        while (futureDate.getMonthValue() !\u003d 1) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"johngao122"},"content":"            futureDate \u003d futureDate.plusMonths(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"johngao122"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // January (1), March (3), May (5), July (7), August (8), October (10), December (12)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"johngao122"},"content":"        String janDate \u003d String.format(\"31-%02d-%d\", futureDate.getMonthValue(), futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(janDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"johngao122"},"content":"        LocalDate marchDate \u003d futureDate.plusMonths(2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"johngao122"},"content":"        LocalDate mayDate \u003d futureDate.plusMonths(4);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"johngao122"},"content":"        LocalDate julyDate \u003d futureDate.plusMonths(6);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"johngao122"},"content":"        LocalDate augDate \u003d futureDate.plusMonths(7);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"johngao122"},"content":"        LocalDate octDate \u003d futureDate.plusMonths(9);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"johngao122"},"content":"        LocalDate decDate \u003d futureDate.plusMonths(11);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"johngao122"},"content":"        String marchValidDate \u003d String.format(\"31-%02d-%d\", marchDate.getMonthValue(), marchDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"johngao122"},"content":"        String mayValidDate \u003d String.format(\"31-%02d-%d\", mayDate.getMonthValue(), mayDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"johngao122"},"content":"        String julyValidDate \u003d String.format(\"31-%02d-%d\", julyDate.getMonthValue(), julyDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"johngao122"},"content":"        String augValidDate \u003d String.format(\"31-%02d-%d\", augDate.getMonthValue(), augDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"johngao122"},"content":"        String octValidDate \u003d String.format(\"31-%02d-%d\", octDate.getMonthValue(), octDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"johngao122"},"content":"        String decValidDate \u003d String.format(\"31-%02d-%d\", decDate.getMonthValue(), decDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(marchValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(mayValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(julyValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(augValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(octValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(decValidDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate_februaryLeapYearRules() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"johngao122"},"content":"        // Get next leap year after current year","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"johngao122"},"content":"        int currentYear \u003d LocalDate.now().getYear();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"johngao122"},"content":"        int nextLeapYear \u003d currentYear + (4 - (currentYear % 4));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"johngao122"},"content":"        if (nextLeapYear \u003c\u003d currentYear) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"johngao122"},"content":"            nextLeapYear +\u003d 4;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"johngao122"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // Regular leap year (divisible by 4)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"johngao122"},"content":"        String leapYearDate \u003d String.format(\"29-02-%d\", nextLeapYear);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"johngao122"},"content":"        String nonLeapYearDate \u003d String.format(\"29-02-%d\", nextLeapYear + 1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"johngao122"},"content":"        String invalidFebDate1 \u003d String.format(\"30-02-%d\", nextLeapYear);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"johngao122"},"content":"        String invalidFebDate2 \u003d String.format(\"31-02-%d\", nextLeapYear);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(leapYearDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(nonLeapYearDate)); // Not a leap year","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"29-02-2100\")); // Century year not divisible by 400","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(\"29-02-2000\")); // Past date, should be invalid","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidFebDate1)); // Invalid days for any February","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidFebDate2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void isValidRenewalDate_boundaryConditions() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"johngao122"},"content":"        // Get future dates","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"johngao122"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // First day of month","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"johngao122"},"content":"        String firstDayDate1 \u003d String.format(\"01-%02d-%d\", futureDate.getMonthValue(), futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"johngao122"},"content":"        String firstDayDate2 \u003d String.format(\"01-%02d-%d\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"johngao122"},"content":"                futureDate.plusMonths(1).getMonthValue(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"johngao122"},"content":"                futureDate.plusMonths(1).getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"johngao122"},"content":"        String firstDayDate3 \u003d String.format(\"01-%02d-%d\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"johngao122"},"content":"                futureDate.plusMonths(2).getMonthValue(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"johngao122"},"content":"                futureDate.plusMonths(2).getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(firstDayDate1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(firstDayDate2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"johngao122"},"content":"        assertTrue(RenewalDate.isValidRenewalDate(firstDayDate3));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"johngao122"},"content":"        // Invalid dates","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"johngao122"},"content":"        String invalidZeroDay \u003d String.format(\"00-%02d-%d\", futureDate.getMonthValue(), futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"johngao122"},"content":"        String invalidZeroMonth \u003d String.format(\"01-00-%d\", futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"johngao122"},"content":"        String invalidMonth \u003d String.format(\"01-13-%d\", futureDate.getYear());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidZeroDay));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidZeroMonth));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"johngao122"},"content":"        assertFalse(RenewalDate.isValidRenewalDate(invalidMonth));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void getDaysUntilRenewal_futureDate_returnsPositiveDays() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        RenewalDate renewalDate \u003d new RenewalDate(LocalDate.now().plusDays(5).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(5, renewalDate.getDaysUntilRenewal());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void getDaysUntilRenewal_pastDate_returnsNegativeDays() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"johngao122"},"content":"        // We can\u0027t test past dates since they\u0027re invalid for RenewalDate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"johngao122"},"content":"        // This test is no longer applicable","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"johngao122"},"content":"        assertTrue(true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void getDaysUntilRenewal_today_returnsZero() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"johngao122"},"content":"        // We can\u0027t test today\u0027s date since it\u0027s invalid for RenewalDate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"johngao122"},"content":"        // This test is no longer applicable","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"johngao122"},"content":"        assertTrue(true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void isRenewalDueWithin() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        RenewalDate renewalDate \u003d new RenewalDate(LocalDate.now().plusDays(30).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(renewalDate.isRenewalDueWithin(60)); // within range","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(renewalDate.isRenewalDueWithin(30)); // exactly on range","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertFalse(renewalDate.isRenewalDueWithin(15)); // outside range","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String date \u003d LocalDate.now().plusDays(30).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        RenewalDate renewalDate \u003d new RenewalDate(date);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertTrue(renewalDate.equals(new RenewalDate(date)));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertTrue(renewalDate.equals(renewalDate));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertFalse(renewalDate.equals(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertFalse(renewalDate.equals(5.0f));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String differentDate \u003d LocalDate.now().plusDays(60).format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertFalse(renewalDate.equals(new RenewalDate(differentDate)));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":120,"johngao122":116}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MakiseKurisuX"},"content":"    private static final String INVALID_PHONE \u003d \"+11\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_POLICY \u003d \"123a\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_RENEWAL_DATE \u003d \"32-13-2024\"; // invalid date format","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_POLICY_TYPE \u003d \"Invalid Type\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_POLICY \u003d BENSON.getPolicy().policyNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_RENEWAL_DATE \u003d BENSON.getPolicy().renewalDate.toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_POLICY_TYPE \u003d BENSON.getPolicy().getType().toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            assertEquals(Name.MESSAGE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                VALID_NOTE, VALID_POLICY, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()), e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(Phone.MESSAGE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                VALID_NOTE, VALID_POLICY, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()), e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(Email.MESSAGE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                VALID_NOTE, VALID_POLICY, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()), e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            assertEquals(Address.MESSAGE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                VALID_NOTE, VALID_POLICY, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()), e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPolicy_throwsIllegalValueException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            assertEquals(Policy.MESSAGE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toModelType_nullPolicy_throwsIllegalValueException() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"                null, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            assertEquals(String.format(MISSING_FIELD_MESSAGE_FORMAT, Policy.class.getSimpleName()), e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toModelType_nullNote_returnsPersonWithEmptyNote() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                VALID_RENEWAL_DATE, VALID_POLICY_TYPE, null, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(Note.EMPTY, person.toModelType().getNote());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, invalidTags);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            // Success","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void toModelType_invalidRenewalDate_throwsIllegalValueException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                        VALID_NOTE, INVALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            person.toModelType();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            fail(\"Expected IllegalValueException was not thrown\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            assertEquals(RenewalDate.DATE_CONSTRAINTS, e.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void toModelType_validFormatButInvalidDateValue_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // Test various invalid dates that match the format","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String[] invalidDates \u003d {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            \"31-04-2023\", // April 31st doesn\u0027t exist","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \"29-02-2023\" // 2023 is not a leap year","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        for (String invalidDate : invalidDates) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POLICY,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    VALID_NOTE, invalidDate, VALID_POLICY_TYPE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            assertThrows(IllegalValueException.class, () -\u003e person.toModelType());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void toModelType_exceptionWhenCreatingPolicy_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"                VALID_NOTE, VALID_POLICY, VALID_RENEWAL_DATE, VALID_POLICY_TYPE, VALID_TAGS) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            protected Policy createPolicy(String policyNumber, String renewalDate, String policyType) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                throw new RuntimeException(\"Simulated exception\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, () -\u003e person.toModelType());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void toModelType_nullRenewalDate_returnsPersonWithDefaultRenewalDate() throws Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"                VALID_POLICY, null, VALID_POLICY_TYPE, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            Person modelPerson \u003d person.toModelType();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // Check that a Policy object was created","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertNotNull(modelPerson.getPolicy());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"            // Check that the policy number is correct","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            assertTrue(VALID_POLICY.contains(modelPerson.getPolicy().policyNumber));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            // Check that the renewal date is approximately 1 year from now (within 1 day)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            LocalDate expectedDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            LocalDate actualDate \u003d modelPerson.getPolicy().renewalDate.value;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            long daysDifference \u003d Math.abs(expectedDate.toEpochDay() - actualDate.toEpochDay());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            assertTrue(daysDifference \u003c\u003d 1, \"Renewal date should be approximately 1 year from now\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // If this happens, the test should fail","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"            fail(\"Unexpected IllegalValueException: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public void toModelType_nullPolicyType_returnsPersonWithDefaultPolicyType() throws Exception {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                VALID_POLICY, VALID_RENEWAL_DATE, null, VALID_NOTE, VALID_TAGS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Person modelPerson \u003d person.toModelType();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // Check that a Policy object was created with a default policy type (LIFE)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertEquals(\"LIFE\", modelPerson.getPolicy().getType().toString().toUpperCase());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"MakiseKurisuX":1,"-":272}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path INVALID_LAST_UPDATED_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                                                    .resolve(\"invalidLastUpdatedAddressBook.json\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path MISSING_LAST_UPDATED_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                                                    .resolve(\"missingLastUpdatedAddressBook.json\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNotNull(addressBookFromFile.getLastUpdated());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"johngao122"},"content":"        assertEquals(addressBookFromFile.getPersonList().size(), typicalPersonsAddressBook.getPersonList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"johngao122"},"content":"        for (int i \u003d 0; i \u003c addressBookFromFile.getPersonList().size(); i++) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"johngao122"},"content":"            Person personFromFile \u003d addressBookFromFile.getPersonList().get(i);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"johngao122"},"content":"            Person typicalPerson \u003d typicalPersonsAddressBook.getPersonList().get(i);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getName(), typicalPerson.getName(), \"Name mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getPhone(), typicalPerson.getPhone(), \"Phone mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getEmail(), typicalPerson.getEmail(), \"Email mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getAddress(), typicalPerson.getAddress(), \"Address mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getPolicy().getPolicyNumber(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"johngao122"},"content":"                    typicalPerson.getPolicy().getPolicyNumber(), \"Policy number mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getPolicy().getType(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"                    typicalPerson.getPolicy().getType(), \"Policy type mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"johngao122"},"content":"            assertEquals(personFromFile.getTags(), typicalPerson.getTags(), \"Tags mismatch\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"johngao122"},"content":"            assertNotNull(personFromFile.getRenewalDate(), \"Renewal date should not be null\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"johngao122"},"content":"            assertNotNull(typicalPerson.getRenewalDate(), \"Typical person renewal date should not be null\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"johngao122"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_missingLastUpdated_success() throws Exception {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(MISSING_LAST_UPDATED_FILE,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d dataFromFile.toModelType();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Verify that lastUpdated was set to a default value","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertNotNull(addressBook.getLastUpdated());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Verify it\u0027s a recent timestamp (within the last minute)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        LocalDateTime lastUpdated \u003d addressBook.getLastUpdated();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        long secondsDiff \u003d java.time.Duration.between(lastUpdated, now).getSeconds();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(secondsDiff \u003c 60, \"Last updated timestamp should be recent\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"-":67,"johngao122":17}},{"path":"src/test/java/seedu/address/storage/UpdateTestData.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"johngao122"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"johngao122"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"johngao122"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"johngao122"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"johngao122"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"johngao122"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"johngao122"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"johngao122"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"johngao122"},"content":"/**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"johngao122"},"content":" * A utility class to update test data files with dynamic dates.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"johngao122"},"content":" */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"johngao122"},"content":"public class UpdateTestData {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"johngao122"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"johngao122"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"johngao122"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"johngao122"},"content":"        LocalDate baseDate \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"johngao122"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"johngao122"},"content":"        String content \u003d Files.readString(TYPICAL_PERSONS_FILE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE}}\", baseDate.format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_5}}\", baseDate.plusDays(5).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_10}}\", baseDate.plusDays(10).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_15}}\", baseDate.plusDays(15).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_20}}\", baseDate.plusDays(20).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_25}}\", baseDate.plusDays(25).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{BASE_DATE_PLUS_30}}\", baseDate.plusDays(30).format(RenewalDate.DATE_FORMATTER));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"johngao122"},"content":"        content \u003d content.replace(\"{{CURRENT_DATE}}\", currentDate.format(DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"johngao122"},"content":"        Files.writeString(TYPICAL_PERSONS_FILE, content);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"johngao122"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"johngao122"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"johngao122":38}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setPolicy(person.getPolicy());","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"johngao122"},"content":"        descriptor.setRenewalDate(person.getPolicy().renewalDate);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"johngao122"},"content":"        descriptor.setPolicyType(person.getPolicy().getType());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setNote(person.getNote());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Policy} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPolicy(String policy) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"johngao122"},"content":"        Policy newPolicy \u003d new Policy(policy, descriptor.getRenewalDate().orElse(new RenewalDate()),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"johngao122"},"content":"                descriptor.getPolicyType().orElse(PolicyType.LIFE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"johngao122"},"content":"        descriptor.setPolicy(newPolicy);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code RenewalDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withRenewalDate(String renewalDate) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        descriptor.setRenewalDate(new RenewalDate(renewalDate));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code PolicyType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPolicyType(String policyType) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        descriptor.setPolicyType(PolicyType.fromString(policyType));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Note} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withNote(String note) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05","isFullCredit":false}],"authorContributionMap":{"-":124,"johngao122":5}},{"path":"src/test/java/seedu/address/testutil/FindPersonsPredicateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonsPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PhoneContainsNumbersPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyContainsNumbersPredicate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jovin-Ang"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyTypeContainsKeywordsPredicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class to help with building FindPersonsPredicate objects.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindPersonsPredicateBuilder {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private FindPersonsPredicate predicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicate();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder(FindPersonsPredicate predicate) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.predicate \u003d new FindPersonsPredicate(predicate);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns an {@code FindPersonsPredicate} with predicates containing {@code person}\u0027s details","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder(Person person) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        predicate \u003d new FindPersonsPredicate();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        predicate.setNamePredicate(new NameContainsKeywordsPredicate(Set.of(person.getName())));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        predicate.setPhonePredicate(new PhoneContainsNumbersPredicate(Set.of(person.getPhone())));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        predicate.setEmailPredicate(new EmailContainsKeywordsPredicate(Set.of(person.getEmail())));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        predicate.setAddressPredicate(new AddressContainsKeywordsPredicate(Set.of(person.getAddress())));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate.setPolicyPredicate(new PolicyContainsNumbersPredicate(Set.of(person.getPolicy())));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses the {@code names} into a {@code NameContainsKeywordsPredicate} and set it to the","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withNames(String... names) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cName\u003e nameSet \u003d Stream.of(names).map(Name::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate.setNamePredicate(new NameContainsKeywordsPredicate(nameSet));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses the {@code phones} into a {@code PhoneContainsNumbersPredicate} and set it to the","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withPhones(String... phones) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Set\u003cPhone\u003e phoneSet \u003d Stream.of(phones).map(Phone::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate.setPhonePredicate(new PhoneContainsNumbersPredicate(phoneSet));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code emails} into a {@code EmailContainsNumbersPredicate} and set it to the","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withEmails(String... emails) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Set\u003cEmail\u003e emailSet \u003d Stream.of(emails).map(Email::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        predicate.setEmailPredicate(new EmailContainsKeywordsPredicate(emailSet));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code addresses} into a {@code AddressContainsKeywordsPredicate} and set it to the","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withAddresses(String... addresses) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Set\u003cAddress\u003e addressSet \u003d Stream.of(addresses).map(Address::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        predicate.setAddressPredicate(new AddressContainsKeywordsPredicate(addressSet));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses the {@code policies} into a {@code PolicyContainsNumbersPredicate} and set it to the","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withPolicies(String... policies) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Set\u003cPolicy\u003e policySet \u003d Stream.of(policies)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(Policy::new)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        predicate.setPolicyPredicate(new PolicyContainsNumbersPredicate(policySet));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses the {@code policyTypes} into a {@code PolicyTypeContainsKeywordsPredicate} and set it to the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withPolicyTypes(String... policyTypes) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jovin-Ang"},"content":"        Set\u003cPolicyType\u003e policyTypeSet \u003d Stream.of(policyTypes).map(PolicyType::fromString)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        predicate.setPolicyTypePredicate(new PolicyTypeContainsKeywordsPredicate(policyTypeSet));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code TagContainsKeywordsPredicate} and sets it to the","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code FindPersonsPredicate} that we are building.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public FindPersonsPredicateBuilder withTags(String... tags) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        predicate.setTagPredicate(new TagContainsKeywordsPredicate(tagSet));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public FindPersonsPredicate build() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return predicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"Jovin-Ang":2,"-":125}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"johngao122"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.PolicyType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_POLICY \u003d \"654321\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"johngao122"},"content":"    public static final String DEFAULT_RENEWAL_DATE \u003d LocalDate.now().plusYears(1)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"johngao122"},"content":"            .format(RenewalDate.DATE_FORMATTER);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Policy policy;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Note note;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"johngao122"},"content":"        policy \u003d new Policy(DEFAULT_POLICY, new RenewalDate(DEFAULT_RENEWAL_DATE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        note \u003d Note.EMPTY;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        policy \u003d personToCopy.getPolicy();","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withPolicy(String policy) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.policy \u003d new Policy(policy);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building with specific policy number and renewal date.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public PersonBuilder withPolicy(String policyNumber, String renewalDate) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.policy \u003d new Policy(policyNumber, new RenewalDate(renewalDate));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building with a specific renewal date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public PersonBuilder withRenewalDate(String renewalDate) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.policy \u003d new Policy(this.policy.policyNumber, new RenewalDate(renewalDate));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building with a specific policy type.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public PersonBuilder withPolicyType(String policyType) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        this.policy \u003d new Policy(this.policy.policyNumber, this.policy.renewalDate, PolicyType.fromString(policyType));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, policy, note, tags);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03","isFullCredit":false}],"authorContributionMap":{"-":146,"johngao122":4}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"johngao122"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_TYPE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RENEWAL_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand.FindPersonsPredicate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_POLICY + person.getPolicy().policyNumber + \" \");","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_RENEWAL_DATE + person.getRenewalDate() + \" \");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"        sb.append(PREFIX_POLICY_TYPE + person.getPolicy().getType().toString() + \" \");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!person.getNote().toString().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sb.append(PREFIX_NOTE + person.getNote().toString() + \" \");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.getPolicy().ifPresent(policy -\u003e sb.append(PREFIX_POLICY).append(policy.policyNumber).append(\" \"));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.getRenewalDate()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .ifPresent(renewalDate -\u003e sb.append(PREFIX_RENEWAL_DATE).append(renewalDate)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .append(\" \"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"johngao122"},"content":"        descriptor.getPolicyType()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"johngao122"},"content":"                .ifPresent(policyType -\u003e sb.append(PREFIX_POLICY_TYPE).append(policyType.toString())","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"johngao122"},"content":"                .append(\" \"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.getNote().ifPresent(n -\u003e sb.append(PREFIX_NOTE).append(n.toString()).append(\" \"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code FindPersonsPredicate}\u0027s predicate.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static String getFindPersonDetails(FindPersonsPredicate predicate) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (predicate.getNamePredicate().isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (predicate.getNamePredicate().get().getNames().isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Set\u003cName\u003e names \u003d predicate.getNamePredicate().get().getNames().get();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                names.forEach(s -\u003e sb.append(PREFIX_NAME).append(s.fullName).append(\" \"));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (predicate.getPhonePredicate().isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            if (predicate.getPhonePredicate().get().getNumbers().isPresent()) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Set\u003cPhone\u003e numbers \u003d predicate.getPhonePredicate().get().getNumbers().get();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                numbers.forEach(s -\u003e sb.append(PREFIX_PHONE).append(s.value).append(\" \"));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (predicate.getEmailPredicate().isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (predicate.getEmailPredicate().get().getEmails().isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Set\u003cEmail\u003e emails \u003d predicate.getEmailPredicate().get().getEmails().get();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                emails.forEach(s -\u003e sb.append(PREFIX_EMAIL).append(s.value).append(\" \"));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (predicate.getAddressPredicate().isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (predicate.getAddressPredicate().get().getAddresses().isPresent()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Set\u003cAddress\u003e addresses \u003d predicate.getAddressPredicate().get().getAddresses().get();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                addresses.forEach(s -\u003e sb.append(PREFIX_ADDRESS).append(s.value).append(\" \"));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (predicate.getPolicyPredicate().isPresent()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (predicate.getPolicyPredicate().get().getPolicies().isPresent()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Set\u003cPolicy\u003e numbers \u003d predicate.getPolicyPredicate().get().getPolicies().get();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                numbers.forEach(s -\u003e sb.append(PREFIX_POLICY).append(s.policyNumber).append(\" \"));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (predicate.getTagPredicate().isPresent()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (predicate.getTagPredicate().get().getTags().isPresent()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Set\u003cTag\u003e tags \u003d predicate.getTagPredicate().get().getTags().get();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05","isFullCredit":false}],"authorContributionMap":{"-":125,"johngao122":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_AMY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_BOB;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"johngao122"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"johngao122"},"content":"import seedu.address.model.person.RenewalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"johngao122"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"johngao122"},"content":"    public static final LocalDate BASE_DATE \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"johngao122"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\").withPolicy(\"135792\")","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"johngao122"},"content":"            .withRenewalDate(BASE_DATE.format(RenewalDate.DATE_FORMATTER)).withPolicyType(\"Life\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPolicy(\"792468\")","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"johngao122"},"content":"            .withRenewalDate(BASE_DATE.plusDays(5).format(RenewalDate.DATE_FORMATTER)).withPolicyType(\"Health\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withNote(\"some note\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"877665\").withRenewalDate(BASE_DATE.plusDays(10).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Property\").withNote(\"some note\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"233445\").withRenewalDate(BASE_DATE.plusDays(15).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Vehicle\").withTags(\"friends\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"321098\").withRenewalDate(BASE_DATE.plusDays(20).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Travel\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNote(\"some note\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"789012\").withRenewalDate(BASE_DATE.plusDays(25).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Life\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withNote(\"some note\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"678901\").withRenewalDate(BASE_DATE.plusDays(30).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Health\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withPolicy(VALID_POLICY_AMY)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withNote(\"some note amy\").withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withPolicy(VALID_POLICY_BOB)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withNote(\"some note bob\").withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"johngao122"},"content":"    // Manually added","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"johngao122"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"johngao122"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"886885\").withRenewalDate(BASE_DATE.plusDays(35).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"johngao122"},"content":"            .withPolicyType(\"Property\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"johngao122"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"johngao122"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"johngao122"},"content":"            .withPolicy(\"889880\").withRenewalDate(BASE_DATE.plusDays(40).format(RenewalDate.DATE_FORMATTER))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"johngao122"},"content":"            .build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13","isFullCredit":false}],"authorContributionMap":{"-":72,"johngao122":26}}]
