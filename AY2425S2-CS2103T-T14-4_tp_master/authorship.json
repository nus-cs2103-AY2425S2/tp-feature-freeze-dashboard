[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"AI Usage","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Existing problems, target direction, and name ideas: Used by Xinkang to brainstorm all of these (Google AI studio)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* User stories: Used by Xinkang to brainstorm target user and come up with user stories. User stories were later edited to fit the required format (Google AI studio)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Feature Specifications: Used by Xinkang to write initial feature specifications in the required format. Final product was edited to accommodate changes from other group members (O3 mini)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Code: Used by Dallas for autocompletion and refactoring (GitHub Copilot)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Javadoc comments: Generated by Marcus to satisfy Checkstyle (ChatGPT, DeepSeek)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xk1234"},"content":"* Code and Tests: Used by Xinkang for refactoring, checking, and writing boilerplate(Variety of AI tools)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [ _PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [ `Main`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [ `MainApp`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shutdown.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shutdown, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BladerX11"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BladerX11"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside components being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [ `Ui.java`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [ `MainWindow`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [ `MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BladerX11"},"content":"* depends on some classes in the `Model` component, as it displays `Person` objects residing in the `Model`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"**API** : [ `Logic.java`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram. \u003c/div\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"**API** : [ `Model.java`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BladerX11"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"**API** : [ `Storage.java`](https://github.com/AY2425S2-CS2103T-T14-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Filtering the persons list","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"The filtering mechanism is facilitated by the `Model` interface with the following operations:","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e)`— Filters which `Person` are displayed to the user. This method uses Java\u0027s `Predicate` interface, for which there are multiple implementing classes.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `Model#getFilteredPersonList()`— Returns the current list of filtered `Person`.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/FilteringDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"The filtering mechanism works as follows:","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 1. When a filtering command is executed, the command\u0027s parser creates an appropriate `Predicate` based on the user input and passes it to the command.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 2. The command then calls `model.updateFilteredPersonList(predicate)` to apply the filter.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 3. The UI automatically updates to display only the filtered persons.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Aspect: How to implement complex filtering:**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Composite predicates are used that combine simpler predicates.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    * Pros: More maintainable as there is less repeated code.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    * Cons: May be more complex to implement initially.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* **Alternative 2:** Independent predicates.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    * Pros: Easier to implement as filtering the logic can be directly used.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    * Cons: It is less maintainable as the same logic may be re-implemented multiple times.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BladerX11"},"content":"    * Cons: We must ensure that the implementation of each individual command is correct.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* Network marketeer","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* Has a need to manage a significant number of persons","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"* Each person has a commission to track","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"* Can type fast","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Value proposition**: Manage persons faster than a typical mouse/GUI driven app and easily track commission of persons.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"| Priority | As a …                           | I want to …                                         | So that I can…                                                         |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"|:--------:|----------------------------------|-----------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"| `* * *`  | New user                         | See usage instructions                              | Refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Add a new person                                    |                                                                        |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Edit a person                                       | Change the information reflected when their information changes        |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Delete a person                                     | Remove entries that I no longer need                                   |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Find a person by name                               | Locate details of persons without having to go through the entire list |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Show all persons                                    | Manage them together                                                   |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `* * *`  | User                             | Close the app                                       |                                                                        |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"|  `* *`   | User                             | Clear my persons                                    | Start from a fresh state                                               |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"|  `* *`   | User                             | Add existing persons to currently displayed persons | Quickly create a custom view of persons                                |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"| `* * *`  | Marketeer with a segmented lists | Find a person by tags                               | Quickly access specific groups of persons                              |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `* * *`  | Data enthusiast                  | Export reports                                      | Further analyze with external systems                                  |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"| `* * *`  | Team leader                      | Record the commission earned from team members      | Monitor the financial impact of my team expansion                      |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"|  `* *`   | Time-conscious communicator      | Send bulk messages to specific groups of persons    | Share updates quickly without crafting individual messages             |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"|  `* *`   | Well connected person            | Sort persons by attributes                          | Locate a person easily                                                 |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"|  `* *`   | Efficient user                   | Tag multiple persons at once                        | Quickly organize large groups of persons                               |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"|  `* *`   | Efficient user                   | Remove tags from multiple persons at once           | Clear out unused tags from all my persons                              |","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"|   `*`    | Team leader                      | Visualize my network of downlines                   | Monitor the progress of my team expansion                              |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AscendNetwork` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"**Use case: UC1 - Show all persons**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"2. AddressBook shows the list of all persons.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Use case: UC2 - Add a person**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"1. User requests to add a person","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"2. AscendNetwork adds the person","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"* 1a. The user uses invalid format.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    * 1a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"* 1b. The user tries to add a person that is already in the contact.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"    * 1b1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Use case: UC3 - Edit a person**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003eshows all contacts (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"2.  User requests to edit a specific person in the list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BladerX11"},"content":"3.  User states which fields to update and provides updated details.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"4.  AscendNetwork edits the person with updated details.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"* 3a. The details provided are invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"    * 3a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Use case: UC4 - Delete a person**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003eshows all persons (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BladerX11"},"content":"2.  User requests to delete a specific person in the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BladerX11"},"content":"3.  AscendNetwork deletes the person.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Use case: UC5 - Find persons by name and tag**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003eshows all persons (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"2.  User requests to find persons with names and tags.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"BladerX11"},"content":"3.  AscendNetwork shows all persons that pass the filter.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"BladerX11"},"content":"    Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"* 2a. The user does not provide any filter criteria.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"BladerX11"},"content":"* 2b. The user provides filter in an incorrect format.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    * 2b1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"BladerX11"},"content":"* 3a. No persons pass the filter. No persons are shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Use case: UC6 - Add commission received from person**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003eshows all persons (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"2.  User requests to add commission received from a specific downline in the list and specifies the amount of commission received.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"4.  AscendNetwork records the commission received from that person.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"* 3a. User provides invalid input for the commission amount (e.g., non-numeric).","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"    * 3b1. AscendNetwork shows an error message indicating invalid commission amount.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"**Use case: UC7 - Tag multiple persons at once**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. User \u003cins\u003efinds persons by name and tag (UC5)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"2. User requests to tag all persons currently shown.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"3. AscendNetwork adds the tags to all persons currently shown.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"BladerX11"},"content":"* 2a. The user does not provide any tags to add.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"* 2b. The user provides tags with invalid format.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"    * 2b1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"* 2c. No persons are currently shown.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"    * 2c1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"**Use case: UC8 - Mail to multiple persons**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. User \u003cins\u003efind persons by name and tag (UC5)\u003c/ins\u003e.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"2. User requests to generate a `mailto` link for all persons currently on the list.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"3. AscendNetwork generates and displays the requested link.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"4. User copies the link to their browser\u0027s address bar to open the system mail client.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"**Use case: UC9 - Sorting displayed List**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003eshows all persons (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"2.  User issues a command to sort the displayed list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"3.  AscendNetwork sorts the displayed list based on the specified criteria.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"4.  AscendNetwork displays the sorted list of persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"* 2a. User provides an invalid sort command format or missing sort criteria.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message indicating the invalid command format or missing criteria.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"* 2b. User provides an unsupported sort criteria.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"    * 2b1. AscendNetwork shows an error message indicating that the specified criteria is not supported for sorting.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"**Use case: UC10 - Export multiple matching persons**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"1.  User \u003cins\u003efinds persons by name and tag (UC5)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"2.  User requests to export the details of the currently displayed persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"3.  User provides the file name to export the file to.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"4.  User selects which fields to export from the currently displayed persons.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"5.  AscendNetwork exports persons to the specified file name.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"**Extensions**   ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"* 3a. The file name is not valid.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"* 4a. The user selects invalid fields.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"    * 3a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"**Use case: UC11 - Remove Tag from multiple persons at once**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. User \u003cins\u003efinds persons by name and tag (UC5)\u003c/ins\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"2. User requests to remove some tags from all persons shown.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"3. AscendNetwork removes the tags from all persons shown.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"BladerX11"},"content":"* 2a. The user does not provide any tags to remove.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"    * 2a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"* 2b. The user provides tags with invalid format.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"    * 2b1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"* 2c. No persons are currently shown.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"    * 2c1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"**Use case: UC12 - Add existing persons to the list**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"xk1234"},"content":"1. User requests to add persons by their names to the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"BladerX11"},"content":"2. AscendNetwork adds those persons that pass the filter to the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"* 1a. The user does not provide any name keyword.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"    * 1a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"BladerX11"},"content":"* 1b. The user provides keywords that don\u0027t exist in the address book.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"BladerX11"},"content":"    * 1b1. AscendNetwork shows that 0 persons are added.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"xk1234"},"content":"**Use case: UC13 - Summarize information about current list of persons**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"xk1234"},"content":"**MSS**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"xk1234"},"content":"1. User requests to see summary information about persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"xk1234"},"content":"2. AscendNetwork displays summary information about persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"xk1234"},"content":"Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"xk1234"},"content":"**Use case: UC14 - See the persons with the highest or lowest commissions**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"xk1234"},"content":"**MSS**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"xk1234"},"content":"1. User requests to see the persons with the highest or lowest commissions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"xk1234"},"content":"2. AscendNetwork displays the persons with the highest or lowest commissions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"xk1234"},"content":"Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"xk1234"},"content":"**Extensions**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"xk1234"},"content":"* 1a. The user does not provide any sort direction.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"xk1234"},"content":"    * 1a1. AscendNetwork shows an error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"xk1234"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"xk1234"},"content":"* 1b. The user provides an invalid sort direction.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"xk1234"},"content":"    * 1b1. AscendNetwork shows an error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"BladerX11"},"content":"**Use case: UC15 - Clear all persons**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"BladerX11"},"content":"**MSS**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"BladerX11"},"content":"1. User requests to clear all persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"BladerX11"},"content":"2. AscendNetwork clears all persons from its data.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"BladerX11"},"content":"   Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"xumarcus"},"content":"**Use case: UC15 - Display help window**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"xumarcus"},"content":"**MSS**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"xumarcus"},"content":"1. User requests for help on how to use AscendNetwork.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"xumarcus"},"content":"2. AscendNetwork displays a window with a link to the user guide.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"xumarcus"},"content":"Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"xumarcus"},"content":"**Extensions**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"xumarcus"},"content":"* 1a. The help window is already open.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"xumarcus"},"content":"    * 1a1. AscendNetwork refocuses the window.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"xumarcus"},"content":"      Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"3. A user with above-average typing speed for regular English text (i.e., not code, not system admin commands) should be able to accomplish most tasks faster using commands than using the mouse.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"4. The application should be fully portable and should not require installation. Users should be able to run the application by executing a single JAR file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"5. The software should be developed incrementally, ensuring a stable, working product at every stage of development.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"6. The application should be optimized for a screen resolution of at least `1920x1080`, ensuring usability at resolutions as low as `1280x720`. It should also support scaling factors of `100%`, `125%` and remain functional at `150%`.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"7. Data should be stored in a human-editable text file, allowing advanced users to modify it manually if needed.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"8. The product should not require an internet connection for core functionality, ensuring usability in offline environments.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"9. The software should follow an object-oriented design, using OOP principles to manage data and features effectively.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"10. No third-party database management system (DBMS) should be used to store data.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"11. The application should not depend on a remote server for its functionality, ensuring that it remains accessible even after project completion.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"12. The software package, including all dependencies, should not exceed `100MB`, and documentation files should not exceed `15MB` per file.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"13. The software should ensure a smooth user experience across Windows, macOS, and Linux by avoiding OS-dependent libraries and system-specific functionalities.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"14. The primary mode of interaction should be through a command-line interface (CLI), with the GUI primarily used for visual feedback. A CLI input should be faster than its GUI alternative whenever applicable.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"15. The software should be testable, avoiding features that introduce unnecessary complexity in manual or automated testing, such as account-based authentication, audio-based interactions, or extensive reliance on external APIs.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"16. The final product should be delivered in a single JAR file. If this is not possible, all required files should be packaged into a single ZIP archive.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"* **Person/Contact**: An entry in the AscendNetwork","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"* **Downline**: A person that is lower in the marketing network than the user","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"* **Commission**: The amount of money received from the person through sales","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"BladerX11"},"content":"    1. Download the jar file and copy it into an empty folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"BladerX11"},"content":"    1. Double-click the jar file. Expected: Shows the GUI with a set of sample persons. The window size may not be optimum.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"       Expected: First person is deleted from the list. Details of the deleted person shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"xk1234"},"content":"### Summary Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"xk1234"},"content":"1. Summarize the statistics while all persons are being shown","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"xk1234"},"content":"    1. Prerequisites: Ensure there are multiple persons on the list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"xk1234"},"content":"    2. Test case: `summary`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"xk1234"},"content":"        Expected: Statistics for the list that is currently displayed are displayed, including the number of contacts, total commission, highest commission, lowest commission, and the average commission","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"xk1234"},"content":"    3. Test case: `find n/NAME` where NAME is the name of a unique person in the list, then `summary`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"xk1234"},"content":"        Expected: Statistics for the one person that is currently displayed are displayed, including the number of contacts, total commission, highest commission, lowest commission, and the average commission","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"xk1234"},"content":"1. Summarizing statistics when list is empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"xk1234"},"content":"   1. Prerequisites: List is empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"xk1234"},"content":"   ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"xk1234"},"content":"   2. `summary`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"xk1234"},"content":"      \"List is empty, nothing to do\" error message should be displayed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"xk1234"},"content":"### Commission View Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"xk1234"},"content":"1. Displays the commissions within the current list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"xk1234"},"content":"    1. Prerequisites: Ensure there are multiple persons with different commissions on the list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"xk1234"},"content":"    2. Test case: `comm s/asc`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"xk1234"},"content":"       Expected: PERSON, $COMMISSION displayed where COMMISSION is listed in ascending order","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"xk1234"},"content":"    3. Test case: `comm s/desc`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"xk1234"},"content":"       Expected: PERSON, $COMMISSION displayed where COMMISSION is listed in descending order","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"xk1234"},"content":"       4. Test case: `comm`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"xk1234"},"content":"       Expected: \"Invalid command format! comm s/\u003cdirection\u003e where \u003cdirection\u003e is either asc or desc. Example: comm s/asc\" error message is printed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"xk1234"},"content":"1. Sorting by commission when list is empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"xk1234"},"content":"   1. Test case: `comm s/asc`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"xk1234"},"content":"        Expected: \"List is empty, nothing to do\" error message should be displayed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"BladerX11"},"content":"### Find multiple person","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"BladerX11"},"content":"1. Find multiple persons to only show a subset","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `find n/NAME t/TAG` (where `NAME` and `TAG` matches at least one word in the name and tag respectively of at least one same person)\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"BladerX11"},"content":"       Expected: Only the persons who match are displayed. The number of matched persons is shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `find n/ t/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"BladerX11"},"content":"       Expected: No filtering is done. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"BladerX11"},"content":"### Tag multiple person","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"BladerX11"},"content":"1. Tagging all listed persons","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"BladerX11"},"content":"    1. Prerequisites: At least one person is displayed on the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `tag customer`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"BladerX11"},"content":"       Expected: All persons currently listed are tagged with `customer`. The number of people with the tag added is shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `tag`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"BladerX11"},"content":"       Expected: No person is tagged. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"xumarcus"},"content":"### Removing tags","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"BladerX11"},"content":"1. Removing tag from all listed persons","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"BladerX11"},"content":"    1. Prerequisites: At least one person is displayed on the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `rmtag customer`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"BladerX11"},"content":"       Expected: All persons currently listed have the `customer` tag removed from them. The number of people with the tag removed is shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"BladerX11"},"content":"    1. Test case: `rmtag`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"BladerX11"},"content":"       Expected: No person has tags removed. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"xumarcus"},"content":"### Exporting contacts to CSV","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"xumarcus"},"content":"1. Exporting all visible contacts with full details","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export data.csv`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"xumarcus"},"content":"       Expected: A file named `data.csv` is created in AscendNetwork\u0027s current directory. All contact details (name, phone, email, address, commission) from the visible list are exported. A success message is shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export data.csv` (when `data.csv` already exists)\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"xumarcus"},"content":"       Expected: Export fails. Error message shown in the status message indicating the file already exists.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export DATA.csv` (when `data.csv` already exists in a system that is case-aware but case-insensitive e.g. Windows)\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"xumarcus"},"content":"       Expected: Export fails. Error message shown in the status message indicating the file already exists.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"xumarcus"},"content":"2. Exporting filtered contacts with selected attributes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: Use `find` to filter the contacts, e.g., `find n/Alice`. Ensure at least one contact matches.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export filtered.csv a/name a/email`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"xumarcus"},"content":"       Expected: A file named `filtered.csv` is created, containing only the names and emails of visible contacts. A success message is shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export data.csv a/phone a/PHONE`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"xumarcus"},"content":"       Expected: Export fails, since there are duplicate attributes requested (`phone` and `PHONE` are considered the same), with relevant error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export data.csv a/`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"xumarcus"},"content":"       Expected: Export fails, since there are invalid attributes requested, with relevant error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"xumarcus"},"content":"3. Exporting when there are no visible contacts.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: Use `find` to filter the contacts, e.g., `find n/Alice`. Ensure no contact matches.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `export data.csv`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"xumarcus"},"content":"       Expected: Export fails, since there are no visible contacts to export.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"xumarcus"},"content":"### Generating mailto link","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"xumarcus"},"content":"1. Generating a mailto link from all visible contacts","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Ensure contacts have valid email addresses.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `mailto`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"xumarcus"},"content":"       Expected: A mailto link is generated with emails of all visible contacts. A pop-up window is opened with a \u0027Copy URL\u0027 button. When clicked, the button overwrites the system clipboard with the generated mailto link. AscendNetwork displays success message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"xumarcus"},"content":"2. Generating a mailto link when no persons are visible","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: List all persons using the `list` command. No persons in the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `mailto`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"xumarcus"},"content":"       Expected: No mailto link is generated. Pop-up window is not opened. AscendNetwork displays error message indicating there are no contacts to include.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"xumarcus"},"content":"3. Generating a mailto link after `help` command has been used","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"xumarcus"},"content":"    1. Prerequisites: `help` command is executed and the window is left open.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"xumarcus"},"content":"    1. Test case: `mailto`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"xumarcus"},"content":"       Expected: Contents of the window is replaced with those related to `mailto`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"Bill-1"},"content":"### Adding a commission","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"Bill-1"},"content":"1. Adding commission to the specified indexed person.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"Bill-1"},"content":"    1. Prerequisites: Multiple persons in the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"Bill-1"},"content":"    2. Test case: `addc 1 c/12` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"Bill-1"},"content":"       Expected: 12 commission is added to the first person.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"Bill-1"},"content":"    3. Test case: `addc 1 c/1000000000` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"Bill-1"},"content":"       Expected: Invalid commission. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"Bill-1"},"content":"### Including a persons","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"Bill-1"},"content":"1. Including specific persons to the list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"Bill-1"},"content":"    1. Test case: `incl n/NAME` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"Bill-1"},"content":"       Expected: Persons matched added to the list. The number of persons added to list is shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"Bill-1"},"content":"    2. Test case: `incl 1 n/` \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"Bill-1"},"content":"       Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"BladerX11"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"BladerX11"},"content":"## **Appendix: Planned enhancements**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"BladerX11"},"content":"Team size: 4","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"BladerX11"},"content":"1. **Allow finding by other attributes**: The current find command is able to find persons by both name and tags. We plan to extend its capabilities to cover all attributes of a person in ways that are meaningful for it e.g. the commission attribute can be filtered by a range using an upper and lower limit. This would allow users to better organize their contacts and use commands that operate on the displayed list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"BladerX11"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"Bill-1"},"content":"1. **Allow including by other attributes**: The current incl command only use name to include persons to the currently displayed list. We plan to extend its capabilities to cover all attributes of a person. e.g. the persons can be included by their common addresses. This would allow users to better organize their contacts and use commands that operate on the displayed list","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"BladerX11"},"content":"1. **Enable copying contact details**: The current UI does not allow text in the person list to be copied onto users\u0027 clipboards. We plan to create this capability so that users can copy over existing contact details into other software, rather than manually typing them out.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"xumarcus"},"content":"1. **Support non-alphanumeric inputs in all fields**: AscendNetwork currently doesn\u0027t allow certain names (e.g. s/o, d/o in Indian, Ah-Beng in Chinese), emails, and addresses for ease of implementation. We plan to relax our input validation to support more valid legal names, emails and addresses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"xumarcus"},"content":"1. **Indicate conflicting file name in export**: Currently AscendNetwork will fail to `export` if a similarly-named file is already present. The app does not indicate which is the conflicting file name (e.g. `data.csv` vs `DATA.csv`). We plan to improve this along with other error reporting.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"xumarcus"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"xumarcus"},"content":"This project required significant effort and collaboration across the team to achieve the goals we set out. Below, we summarize the key aspects of the project’s difficulty, challenges, time investment, and achievements.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"xumarcus"},"content":"### Difficulty Level and Scope","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"xumarcus"},"content":"Compared to AB3, which manages only a single attribute (e.g. Name), our project introduces and modifies several commands to handle multiple attributes, each with distinct behaviors, like Email and Phone, of multiple Persons. This added significant design and implementation complexity. For instance, commands such as find, tag, comm, and export had to be adapted to operate across different attributes, each with its own filtering and sorting criteria. This means that we have to make careful architectural decisions to avoid code duplication while maintaining command clarity and correctness across all supported attributes. A notable addition is the Commission attribute , which introduced its own set of challenges. We built extensive functionalities around commissions, including:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"xumarcus"},"content":"- Sorting commissions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"xumarcus"},"content":"- Summing total commissions across a filtered list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"xumarcus"},"content":"- Implementing overflow-safe arithmetic operations, ensuring financial calculations remain accurate even when dealing with large datasets or values.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"xumarcus"},"content":"Other features include:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"xumarcus"},"content":"- Expansion of Functionality: We doubled the number of supported commands, which required not only implementing new logic but also ensuring consistency, test coverage, and appropriate error handling.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"xumarcus"},"content":"- Filtering and Sorting: We introduced an extensive and flexible filtering and sorting feature, enabling users to query and organize data with high specificity. This required designing and implementing a modular filter system that could compose multiple conditions and work across entity types.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"xumarcus"},"content":"- Export function: There are challenges related to format compatibility, error resilience, and testing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"xumarcus"},"content":"- Documentation: We produced extensive documentation, covering user guides, developer guides, and architectural decisions. This required significant effort to ensure clarity, accuracy, and accessibility for both technical and non-technical audiences.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"xumarcus"},"content":"### Effort Required","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"xumarcus"},"content":"The project effort was spread across design (20%), implementation (50%), testing (15%), and documentation (15%). The team also conducted multiple rounds of code reviews, user testing, and bug fixes to ensure quality. We did not rely on external libraries for any part of the project. All functionality, including filtering, summarizing and external system interaction, was developed in-house. This means 100% of the effort represents original work, with no time saved through external reuse.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"xumarcus"},"content":"### Achievements","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"xumarcus"},"content":"- Code coverage improved from 75% to 79%, despite the larger codebase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"xumarcus"},"content":"- Number of commands supported was doubled.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"xumarcus"},"content":"- Filtering and sorting features are now significantly more powerful and flexible.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"xumarcus"},"content":"- The system can now interact with external systems, broadening its real-world applicability.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"xumarcus"},"content":"- We delivered extensive documentation, greatly improving the maintainability and usability of the system.","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"xumarcus":102,"xk1234":58,"BladerX11":70,"-":602,"Bill-1":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"### Who is AscendNetwork for?","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"AscendNetwork is built with **network marketeers** in mind—people who often deal with numerous customers, and subordinates. It is specially designed for those who prefer or are comfortable with typing commands. By centralizing all contact information, you can organise and keep track of important contact details and stats.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**:information_source: Note:** We assume you have basic familiarity with your computer, such as downloading files and opening folders. Where advanced technical actions are required, we will guide you step-by-step.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"### What can you expect?","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. A **fast** way to input and manage contacts. If you can type quickly, you’ll love the efficiency.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. A **user-friendly interface** that still leverages simple text commands (just like chatting in a messaging app).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Open up your “command terminal”**.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * A command terminal is a program where you can type text-based commands to your computer.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * On **Windows**, look for “Command Prompt” or “PowerShell” in your Start Menu.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * On **Mac**, open “Terminal” from your Applications \u003e Utilities folder.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * On **Linux**, open the terminal you have installed.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. **Check if Java 17 (or above) is installed**.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Type into the terminal:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     ```sh","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     java -version","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     You should see a string that includes the text 17. For example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     ```sh","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     java version \"17\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     Java(TM) SE Runtime Environment (build 17)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     Java HotSpot(TM) 64-Bit Server VM (build 23.2-b04, mixed mode)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"   * If Java is not found, or if the version is not 17, please follow the instruction on Oracle\u0027s website for your platform:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * [Windows](https://docs.oracle.com/en/java/javase/17/install/installation-jdk-microsoft-windows-platforms.html#GUID-DAF345BA-B3E7-4CF2-B87A-B6662D691840)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * [Mac](https://docs.oracle.com/en/java/javase/17/install/installation-jdk-macos.html#GUID-F575EB4A-70D3-4AB4-A20E-DBE95171AB5F)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * [Linux](https://docs.oracle.com/en/java/javase/17/install/installation-jdk-linux-platforms.html#GUID-4A6BD592-1840-4BB4-A758-4CD49E9EE88B)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     Afterwards, repeat the step above to verify if it is installed.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. **Download the latest `AscendNetwork.jar` file** from our [GitHub releases page](https://github.com/AY2425S2-CS2103T-T14-4/tp/releases).","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"   ![Download Jar](images/DownloadJar.png)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. **Place the `.jar` file** into the folder you want to use as the “home folder” for AscendNetwork, which stores your data.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * For example, you could create a folder called `AscendNetworkHome` on your Desktop.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. **Run AscendNetwork**.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * Still in your command terminal, use the `cd` command to move into that folder. For example:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     ```sh","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     cd Desktop/AscendNetworkHome","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Then type:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     ```sh","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     java -jar AscendNetwork.jar","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * After a few seconds, the AscendNetwork interface should appear. You will see some sample contacts included by default.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"   ![AscendNetwork User Interface](images/Ui.png)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"6. **Try out some commands** in the command box.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ![Insert screenshot of a user typing commands, if available](images/CommandInput.png)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"   * **`help`** : Opens the help window.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all existing contacts.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BladerX11"},"content":"   * **`add n/John Doe p/98765432 e/johnd@example.com a/John Street, block 123, #01-01`** : Adds a contact named `John Doe`, whose contact number is `98765432`, has an `email of johnd@example.com` and lives at `John Street, block 123, #01-01`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * **`delete 3`** : Deletes the 3rd contact in the current list.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes **all** contacts.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * **`exit`** : Closes the app.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**:information_source: AscendNetwork commands follow a straightforward format:**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"* **UPPER_CASE** words are placeholders (e.g., `NAME` in `add n/NAME`).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* **Square brackets `[ ]`** indicate optional items (e.g., `[t/TAG]`).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"* **Items with `...`** can appear multiple times or not at all (e.g., `[t/TAG]...`).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"* **Curly braces `{ }` separated by `|`** mean “choose one” (e.g., `{n/NAME | t/TAG}`).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"* **Parameters can be in any order.**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"* **Extraneous parameters** are ignored for commands that do not accept any (e.g., `help 123` is treated as `help`).","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xumarcus"},"content":"* **Alphanumeric** means only English characters without diacritics (ASCII) and Arabic numerals `0, 1, 2, 3, 4, 5, 6, 7, 8, 9` are allowed. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"_If you are reading this from a PDF, watch out for spacing issues when copying multi-line commands._","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BladerX11"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Adding a contact: `add`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"Adds a contact to the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS c/COMMISSION [t/TAG]...​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"A contact can have any number of tags (including 0)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BladerX11"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BladerX11"},"content":"If multiple contacts have the same name, different spacing and casing can be used.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BladerX11"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bill-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Bill-1"},"content":"​Keep your character count under 30 to ensure all parameters display properly in the app. However, character count is not limited in case your information needs it.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bill-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Provide **all fields**—tag is optional.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"* NAME uses **only alphanumeric characters and spaces**. It must **not be blank**.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BladerX11"},"content":"* The name of contacts cannot be **exactly the same** so that you do not accidentally add the same person twice. Phone number, email and address can be the same for contacts with common information e.g. same workplace","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bill-1"},"content":"* PHONE_NUMBER is a **number** that is **at least 3** digits and **at most 20** digits long to allow numbers from many countries.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* ADDRESS accepts any value, but it must **not be blank**.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* EMAIL follows the **local-part@domain** format. Please note:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"  1. Include **only alphanumeric characters and these special characters, excluding the parentheses: (+_.-)** in the local part. It must **not start or end with a special character**.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"  2. After the local part, add an \u0027@\u0027 followed by a domain name composed of labels separated by periods.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     - The domain name **must end** with a domain label that is **at least 2** characters long.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     - Each domain label should **start and end** with an alphanumeric character.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     - Each domain label may contain **only alphanumeric** characters, with hyphens allowed in between if necessary.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bill-1"},"content":"* COMMISSION is a **non-negative integer** number, **not starting with 0**. It must be **at most 9** digits long, and **cannot be blank**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* TAG consists of **alphanumeric** characters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 c/0`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe c/10000 e/betsycrowe@example.com a/Chicago ave p/1234567 t/customer`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  ![result for \u0027add n/Betsy Crowe c/10000 e/betsycrowe@example.com a/Chicago ave p/1234567 t/customer\u0027](images/addBetsyCroweResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Editing a contact : `edit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"Edits an existing contact in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [c/COMMISSION] [t/TAG]...​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"Update your contact details if you make a mistake","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contact list. The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* **At least one of** the optional fields must be provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Removes the existing tags of the contact when edits i.e. adding of tags is not cumulative.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"* You can remove all the contacts’ tags by typing `t/` without","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"*  `edit 3 c/120` Edits the commission of the 3rd contact to be `120`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"   ![result for \u0027edit 3 c/120\u0027](images/editCommissionResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Locating your contacts: `find`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"Finds contacts by matching name and tag keywords you provide.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"Format: `find {n/NAME_KEYWORD [NAME_KEYWORD]... [t/TAG_KEYWORD...] | t/TAG_KEYWORD [TAG_KEYWORD]... [n/NAME_KEYWORD...]}`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip**: Run this command to control which contacts are affected by commands that act on ones which the app displays\u003c/div\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `NAME_KEYWORD` is a **single word** searching only name. e.g. In `n/Hans Bo` both `Hans` and `Bo` are keywords","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `TAG_KEYWORD` is a **single word** searching only tags. e.g. In `t/downline customer` both `downline` and `customer` are keywords","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"* Supply **at least one** of `n/NAME_KEYWORD` or `t/TAG_KEYWORD`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"* When providing only `NAME_KEYWORD`, finds contacts whose name contain at least one keyword (i.e. `OR` search). e.g. Providing `n/Hans Bo` finds `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"* When providing only `TAG_KEYWORD`, finds contacts whose tags contain at least one keyword (i.e. `OR` search). e.g. Providing `t/downline customer` finds contacts with tags `downline` and `family`, as well as contacts with tags `customer` and `friend`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"* When providing both `NAME_KEYWORD` and `TAG_KEYWORD`, finds contacts matching both name and tag search (i.e. `AND` search between name and tags). e.g. Providing `n/Hans Bo t/downline customer` finds `Hans Gruber` and with tags `downline` and `family`, but not `Bo Yang` with tags `family` and `friend`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* Searching ignores case. e.g `n/hans` matches `Hans` name, `t/customer` matches `Customer` tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `n/Hans Bo` matches `Bo Hans` name, `t/downline customer` matches `customer` and `downline` tags","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BladerX11"},"content":"* Matches whole words to only show desired results. e.g. `n/Han` does not match `Hans` name, `t/downlines` does not match `downline` tag","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"* `find n/John` finds `john` and `John Doe`","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"* `find n/alex david t/downline customer` finds `Alex Yeoh` with tag `downline`, `David Li` with tag `customer`\u003cbr\u003e","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/alex david t/downline customer\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Tagging multiple contacts at once: `tag`","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Adds tag(s) you specify to multiple contacts.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `tag TAG [TAG]...`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** Ensure you filter to the correct group of contacts before using the command, or it may add tags to contacts unintentionally.\u003c/div\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"* Display **at least one contact** before running the command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"* `TAG` is a word of **digits or letters (both uppercase and lowercase)**. e.g. `customer1`","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Adds all `Tag` to your contacts which the app currently displays. e.g. Running `tag customer` when only `Hans` and `Bo` are displayed adds the `customer` tag only to them.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Appends to your contact\u0027s existing tags instead of replacing. e.g. Running `tag vip` when a displayed contact with `customer` tag changes their tag to `customer vip`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Skips contacts who already have all `TAG`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"* `tag downline` adds the `downline` tag to all your contacts in the current list.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"* `find n/david irfan` followed by `tag customer vip` adds both `customer` and `vip` tags to contacts in the result of `find` command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/david irfan\u0027 then \u0027tag customer vip\u0027](images/findTagResult.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Removing tags from multiple contacts: `rmtag`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"Removes tag(s) you specify from multiple contacts.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"Format: `rmtag TAG [TAG]...`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** Ensure you filter to the correct group of contacts before using the command, or it may remove tags from contacts unintentionally.\u003c/div\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** You can use this command to manage temporary tags that no longer applies to multiple contacts at the same time. e.g. An event that ended.\u003c/div\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Display **at least one contact** before running the command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `TAG` is a word of **digits or letters (both uppercase and lowercase)**. e.g. `customer1`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"* Removes all `Tag` from your contacts the app currently displays. e.g. Running `rmtag customer` when only `Hans` and `Bo`, that both have `customer`, are displayed tag removes it only from them.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* Skips contacts who do not have any `TAG`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"* `rmtag meeting` removes the `meeting` tag from all your contacts in the displayed list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"* `find n/david irfan` followed by `rmtag customer vip` removes both `customer` and `vip` tags from contacts in the result of `find` command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/david irfan\u0027 then \u0027rmtag customer vip\u0027](images/findRmtagResult.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Including your contacts by name to specific group: `incl`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"Adding contacts with matching name from your contacts to the list.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `incl n/NAME_KEYWORD [NAME_KEYWORD]...`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Bill-1"},"content":"You can add contact filtered out by the find command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `NAME_KEYWORD` is same as defined above.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* Supply **at least one** of `n/NAME_KEYWORD`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* It includes contacts whose name contain at least one keyword. e.g. Providing `n/Hans Bo` includes `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `n/Hans Bo` matches `Bo Hans` name","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"* Searching ignores case for the name. e.g `n/hans` matches `Hans` name","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"* Matches only full words e.g. `n/Han` does not match `Hans` name","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"* `incl n/John` finds `john` and `John Doe`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Bill-1"},"content":"* First `find n/alex david`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Bill-1"},"content":"  ![result for \u0027find n/alex david t/downline customer\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Bill-1"},"content":"* Then, `incl n/betsy` adds `Betsy Crowe` to the list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/john betsy\u0027 then \u0027incl n/Li\u0027](images/findInclResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Add commission to the contact: `addc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"Adds commission to the contact. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"Format: `addc INDEX c/COMMISSION`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"Quickly add commission to your contact without manually calculating and editing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"* Adds commission to the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contacts list. The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* The commission value **must be a non-negative integer** and can have **up to 9 digits.**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"* `addc 1 c/12`: Adds 12 commission to the 1st contact. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  ![result for \u0027addc\u0027](images/addcResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Export contacts to a CSV file: `export`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"Effortlessly export your contacts to a CSV file that can be edited in software like Excel or Google Sheets.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"Format: `export FILE_NAME [a/ATTRIBUTE]...`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"xumarcus"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** The command will fail if the file already exists, so that your data won\u0027t be lost unintentionally. On some systems like Windows, file names are case-insensitive. For example, if you already have a `DATA.csv`, then AscendNetwork cannot export your data to `data.csv`.\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Use filters before exporting to segment your contacts, e.g., exporting only high-commission leads.\u003c/div\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* `FILE_NAME` is a file name that **starts with only alphanumeric characters** and **ends with the suffix `.csv`**. We recommend that you keep its length **under 256 characters**.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"* `ATTRIBUTE` may be **`name`, `phone`, `email`, `address`, or `commission`**. It is case-insensitive. You should not use the same `ATTRIBUTE` twice.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* Exports the currently displayed contacts only. Use `find` and/or other commands to refine your selection before running this command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* `export data.csv a/NAME a/email`: Exports only names and emails—perfect for email campaigns!","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"* `export data.csv`: Exports all details of the currently displayed contacts to `data.csv`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"![result for \u0027export\u0027](images/exportResult.png)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Deleting a contact : `delete`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"Deletes contact you specify from the application.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* `INDEX` is a **positive integer** that matches **a contact\u0027s position** that the app currently displays. e.g. 1, 2, 3, ...","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* Deletes the contacts the app currently displays at position `INDEX`.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"* `find n/Alex` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/Alex\u0027 then \u0027delete 1\u0027](images/findDeleteResult.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Clearing all contacts : `clear`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"Clears all contacts from the application.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** This will delete **ALL** contacts, regardless if they are displayed or not.\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** You can use this command to start a fresh list of contacts.\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"* `clear` clears all contacts","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"  ![result for \u0027clear\u0027](images/clearResult.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Mail to multiple contacts: `mailto`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"Quickly create an email link to send messages to multiple contacts using your preferred email client.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"Format: `mailto`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** You should first filter to the correct group of contacts\u003c/div\u003e","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"xumarcus"},"content":"* You will need to copy the link and paste it into your browser\u0027s address bar to send emails.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"xumarcus"},"content":"* After pasting it into the address bar, the default email client set on your system will be opened and filled with email addresses so that you can send the email quickly to the displayed contacts in AscendNetwork.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"* Includes the currently displayed contacts only. (in the `mailto://` link) Use `find` and/or other commands to refine your selection before running this command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"* `mailto`: Generates a link that opens your email client with recipients pre-filled.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"  ![result for \u0027mailto\u0027](images/mailtoResult.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"### Sorting commissions by amount : `comm`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"Sorts the currently displayed list of commissions by their amount in ascending or descending order.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"Format: `comm s/DIR`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Use this command to easily view commissions starting from the lowest amount.\u003c/div\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* `DIR` is `asc` for ascending and `desc` for descending","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"* `comm s/asc` sorts the displayed commissions from the smallest amount to the largest amount and prints it in the program display.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"  ![result for \u0027comm s/asc\u0027](images/commSortAscResult.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Displaying summary statistics : `summary`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"xk1234"},"content":"Displays a summary of key statistics: total number of contacts, total commission, highest commission, lowest commission, and average commission across all contacts displayed on screen in easy to read format.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"Format: `summary`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"xk1234"},"content":"Any additional parameters added are legal but will not affect behaviour.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Use this command for a quick statistical overview of your stored data without needing to list all entries.\u003c/div\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"* `summary` displays the general statistics for all contacts.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"  ![result for \u0027summary\u0027](images/summaryResult.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"## Managing your data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"AscendNetwork saves its data in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"AscendNetwork saves its data automatically as a JSON file `[JAR file location]/data/addressbook.json`. JSON (short for JavaScript Object Notation) is a text-based data format that is human-readable. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AscendNetwork will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AscendNetwork to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"BladerX11"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"BladerX11"},"content":"**A**: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AscendNetwork home folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Q**: How can I back up my data?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"**A**: You can manually back up your `addressbook.json` file by copying it to a safe location.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"**Q**: Can I import contacts from another system?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"**A**: Currently, AscendNetwork does not support direct imports from CSV or other contact management systems.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Q**: Can I export contacts to another system?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"**A**: Yes, you can export selected contacts as CSV with the `export` command. Then you can import contacts from CSV to external systems that support imports, such as Google Contacts.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"**Q**: Can multiple users access the same address book?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"**A**: AscendNetwork is designed for single-user use. If multiple users need to access the same contact database, they must manually share the `addressbook.json` file.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"**Q**: Will AscendNetwork work on mobile devices?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"**A**: No, AscendNetwork is designed for desktop operating systems such as Windows, macOS, and Linux.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Q**: Will AscendNetwork work on older operating systems?\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"**A**: No, AscendNetwork is designed for modern desktop operating systems such as Windows 10 or later, macOS 10.15 or later, and Ubuntu 18.04 or later. AscendNetwork might not work on other Linux distros or custom setups.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Q**: Will AscendNetwork data be saved properly on older storage media, such as floppy disks or DVDs?\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"**A**: No, AscendNetwork is designed for modern storage media like USB, and file systems like NTFS.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Q**: Does AscendNetwork require an internet connection?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"**A**: No, all data is stored locally on your device, and the app works entirely offline.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Q**: How many contacts can AscendNetwork keep?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"**A**: While there is no hard limit, we advise not having more than 1000 contacts for performance reasons.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Q**: How do I update AscendNetwork to a newer version?\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"**A**: Download the latest .jar file from [here](https://github.com/AY2425S2-CS2103T-T14-4/tp/releases) and replace your existing .jar file with the new one. Your data will remain intact if it is stored in the same folder.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Find** | `find {n/NAME_KEYWORD [NAME_KEYWORD]... [t/TAG_KEYWORD...] \\| t/TAG_KEYWORD [TAG_KEYWORD]... [n/NAME_KEYWORD...]}` \u003cbr\u003e e.g., `find n/James Jake t/downline customer`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"**Addc** | `addc INDEX c/COMMISSION` \u003cbr\u003e e.g. `addc 4 c/1500`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Tag** | `tag TAG [TAG]...` e.g. `tag customer vip`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"**Remove Tag** | `rmtag TAG [TAG]...`\u003cbr\u003e e.g. `rmtag customer vip`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"**Export** | `export FILE_NAME [a/ATTRIBUTE]...`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Mailto** | `mailto`","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Incl** | `incl n/NAME_KEYWORD [NAME_KEYWORD]...` \u003cbr\u003e e.g. `incl n/James joe`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Comm** | `comm s/SORT_DIRECTION` \u003cbr\u003e e.g. `comm s/asc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"**summary** | `summary` \u003cbr\u003e e.g. `summary`","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"xumarcus":5,"xk1234":2,"BladerX11":9,"-":433,"Bill-1":11}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Commission","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u0027 Added Enumeration for attributes.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nAttribute\" as Attribute","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xk1234"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xk1234"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xk1234"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xk1234"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xk1234"},"content":"Person *--\u003e \"1\" Commission","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u0027 Dependency showing that Person uses Attribute enum.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person ..\u003e Attribute","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xumarcus"},"content":"Person -[hidden]right-\u003e Attribute","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"xumarcus":1,"xk1234":5,"-":57}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AscendNetwork","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2425S2-CS2103T-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S2-CS2103T-T14-4/tp/actions)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2425S2-CS2103T-T14-4/tp/graph/badge.svg?token\u003d0DH4K05QEL)](https://codecov.io/gh/AY2425S2-CS2103T-T14-4/tp)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xk1234"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"# AscendNetwork","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"**AscendNetwork** is a specialized address book application designed for sales professionals and network marketers to streamline relationship management, commission tracking, and network growth analytics.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested in using AscendNetwork, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested about developing AscendNetwork, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Network marketers face significant challenges in managing scattered contact information, analyzing expanding networks, tracking commissions accurately, and executing bulk communications efficiently. AscendNetwork addresses these pain points by providing an integrated solution that saves time, reduces missed opportunities, and enhances clarity in tracking professional relationships and earnings.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Key Features","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"### 📊 Commission Tracking","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"- Track individual commissions on a per-contact basis","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"- Monitor earnings from network activities in real-time","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"### 🌱 Data Analysis","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"- Generate insightful reports","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"- Analyze referral hierarchies","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"### 📨 Assist Bulk Messaging","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"- Help send mass communications to selected network segments","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"- Manage campaigns across multiple channels efficiently","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"### 🔍 Smart Categorization","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"- Advanced filter search capabilities","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"- Tag-based contact organization system","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). For the detailed documentation of this project, see **[our product website](https://ay2425s2-cs2103t-t14-4.github.io/tp/)**.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"This is a desktop application for managing your contact details. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"xk1234":1,"-":42}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xumarcus"},"content":"import java.math.BigInteger;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xumarcus"},"content":"     * Returns Integer (inside Optional) if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xumarcus"},"content":"     * e.g. 1, 2, 3, ..., \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xumarcus"},"content":"     * Will clip the returned Integer to Integer.MAX_VALUE if {@code s} represents anything larger","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xumarcus"},"content":"     * Will return an empty Optional for any other non-null string input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xumarcus"},"content":"    public static Optional\u003cInteger\u003e getNonZeroUnsignedIntegerClipped(String s) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xumarcus"},"content":"            BigInteger value \u003d new BigInteger(s);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xumarcus"},"content":"            // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xumarcus"},"content":"            if (value.compareTo(BigInteger.ZERO) \u003e 0 \u0026\u0026 !s.startsWith(\"+\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xumarcus"},"content":"                if (value.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) \u003e 0) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xumarcus"},"content":"                    return Optional.of(Integer.MAX_VALUE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xumarcus"},"content":"                } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xumarcus"},"content":"                    return Optional.of(value.intValue());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xumarcus"},"content":"                }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xumarcus"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xumarcus"},"content":"            return Optional.empty();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xumarcus"},"content":"            return Optional.empty();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Processes keywords from the ArgumentMultimap. Each keyword value is split by","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * whitespace.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param value List of keyword values","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e processKeywords(Optional\u003cString\u003e value) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!value.isPresent() || value.get().isBlank()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return Collections.emptyList();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Arrays.asList(value.get().split(\"\\\\s+\"));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"xumarcus":17,"-":78}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_ADDED_OVERVIEW \u003d \"%1$d person(s) added to the list!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"List is empty, nothing to do\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bill-1"},"content":"                .append(\"; Commission: \")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bill-1"},"content":"                .append(person.getCommission())","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":51,"Bill-1":2}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Export selected attributes \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"from the displayed person list.\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: FILE_NAME (Alphanumeric, ending with \\\".csv\\\") \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ATTRIBUTE + \"ATTRIBUTE]...\\n\"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"ATTRIBUTE may be any of: name, phone, email, address, commission and should not have duplicates\\n\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"data.csv \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ATTRIBUTE + \"phone\";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXPORT_SUCCESS_FORMAT \u003d \"Data is exported successfully to: %1$s.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xumarcus"},"content":"    public static final String MESSAGE_EXPORT_FAILURE_FILE_EXISTS_FORMAT \u003d \"\"\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xumarcus"},"content":"            Export failed: %1$s already exists.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xumarcus"},"content":"            (Note: On Windows, file names are case-insensitive. This means \u0027A.csv\u0027 and \u0027a.csv\u0027 refer to the same file.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xumarcus"},"content":"            Please rename or remove the existing file before trying again.)\"\"\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXPORT_FAILURE_FORMAT \u003d \"Export to %1$s has failed.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // This cannot be Attribute[] due to the given parser","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cAttribute\u003e attributes;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Path path;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs an {@code ExportCommand} to export the specified attributes from","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * the displayed person list.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If no attributes are provided, all available attributes will be exported by","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * default.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param attributes The list of attributes to export. If null or empty, all","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                   attributes will be exported.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ExportCommand(List\u003cAttribute\u003e attributes, Path path) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(attributes);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // The case where the input is empty is handled at parsing","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assert (!attributes.isEmpty());","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.attributes \u003d attributes;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.path \u003d path;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            model.exportAsCsv(attributes, path);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_EXPORT_FAILURE_FILE_EXISTS_FORMAT, path.getFileName()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_EXPORT_FAILURE_FORMAT, path.getFileName()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EXPORT_SUCCESS_FORMAT, path.getFileName()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"attributes\", attributes)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"path\", path)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof ExportCommand otherExportCommand)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return attributes.equals(otherExportCommand.attributes);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xumarcus":4,"-":95}},{"path":"src/main/java/seedu/address/logic/commands/SortCommissionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Lists all persons and their commissions. Can optionally sort by commission ascending or descending.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SortCommissionCommand extends Command {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"comm\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the list of people along with their \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"lifetime commissions. Optionally sorts by commission.\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: [\" + PREFIX_SORT + \"asc|\" + PREFIX_SORT + \"desc]\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORT + \"asc\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_SORT_DIRECTION \u003d","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Invalid command format! comm \" + PREFIX_SORT + \"\u003cdirection\u003e where \u003cdirection\u003e is either asc or desc.\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    + \"Example: comm \" + PREFIX_SORT + \"asc\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String messageSuccess;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final boolean isAscending;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a SortCommissionCommand.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param isAscending    True if sorting ascending, false if descending. Ignored if isSortProvided is false.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public SortCommissionCommand(boolean isAscending) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.messageSuccess \u003d \"Listed all persons sorted by commission in \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + (isAscending ? \"ascending\" : \"descending\") + \" order.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cPerson\u003e getSortedList(List\u003cPerson\u003e list) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedList \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Comparator\u003cPerson\u003e compareByCommission \u003d Comparator.comparing(p -\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Integer.parseInt(p.getCommission().value));","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!isAscending) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            compareByCommission \u003d compareByCommission.reversed();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sortedList.sort(compareByCommission);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sortedList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedList \u003d getSortedList(model.getFilteredPersonList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xk1234"},"content":"        if (sortedList.isEmpty()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xk1234"},"content":"            throw new CommandException(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xk1234"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StringBuilder msgBuilder \u003d new StringBuilder(messageSuccess).append(\"\\n\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int idx \u003d 1;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : sortedList) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xk1234"},"content":"            msgBuilder.append(idx).append(\". \").append(person.getName()).append(\", $\")","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    .append(person.getCommission()).append(\"\\n\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            idx++;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String msg \u003d msgBuilder.toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new CommandResult(msg);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof SortCommissionCommand)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        SortCommissionCommand o \u003d (SortCommissionCommand) other;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return isAscending \u003d\u003d o.isAscending;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"isAscending\", isAscending ? \"asc\" : \"desc\")","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"xk1234":7,"-":96}},{"path":"src/main/java/seedu/address/logic/commands/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.math.BigInteger;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xk1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Commission;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Gives the total commission of the shown list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SummaryCommand extends Command {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"summary\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Calculates the total commission of the people.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public BigInteger getTotal(List\u003cPerson\u003e people) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        BigInteger total \u003d BigInteger.valueOf(0);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        for (Person person : people) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Commission commission \u003d person.getCommission();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            total \u003d total.add(new BigInteger(String.valueOf(commission.value)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return total;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public int getNumContacts(List\u003cPerson\u003e people) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return people.size();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Person getHighest(List\u003cPerson\u003e people) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return people.stream()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xk1234"},"content":"                .max(Comparator.comparing(person -\u003e Integer.parseInt(person.getCommission().value)))","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .orElse(null);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Person getLowest(List\u003cPerson\u003e people) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return people.stream()","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xk1234"},"content":"                .min(Comparator.comparing(person -\u003e Integer.parseInt(person.getCommission().value)))","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .orElse(null);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public double getAverage(List\u003cPerson\u003e people) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (people.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return 0.00;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        BigDecimal total \u003d new BigDecimal(getTotal(people));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        BigDecimal count \u003d BigDecimal.valueOf(people.size());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        BigDecimal average \u003d total.divide(count, 2, RoundingMode.HALF_UP);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return average.doubleValue();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xk1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xk1234"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xk1234"},"content":"            throw new CommandException(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xk1234"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        BigInteger totalCommission \u003d getTotal(lastShownList);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person highestPerson \u003d getHighest(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person lowestPerson \u003d getLowest(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        double averageCommission \u003d getAverage(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int numContacts \u003d getNumContacts(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String statsMessage \u003d \"\u003d\u003d\u003d\u003d General Statistics \u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + String.format(\"Number of Contacts : %d\\n\", numContacts)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + String.format(\"Total Commission   : %s\\n\", totalCommission.toString())","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + String.format(\"Highest Commission : %s\\n\",","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        highestPerson !\u003d null ? highestPerson.getCommission().toString() : \"N/A\")","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + String.format(\"Lowest Commission  : %s\\n\",","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        lowestPerson !\u003d null ? lowestPerson.getCommission().toString() : \"N/A\")","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + String.format(\"Average Commission : %.2f\\n\", averageCommission)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(statsMessage);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"xk1234":9,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.EnumSet;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xumarcus"},"content":"import java.util.Optional;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.CsvFileName;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Attribute;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Commission;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xumarcus"},"content":"        Optional\u003cInteger\u003e indexOptional \u003d StringUtil.getNonZeroUnsignedIntegerClipped(trimmedIndex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xumarcus"},"content":"        if (indexOptional.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xumarcus"},"content":"        return Index.fromOneBased(indexOptional.get());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e attributes} into a {@code List\u003cAttribute\u003e}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static List\u003cAttribute\u003e parseAttributes(Collection\u003cString\u003e attributes) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(attributes);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (attributes.isEmpty()) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Arrays.asList(Attribute.values());","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            List\u003cAttribute\u003e result \u003d attributes.stream()","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    .map(String::trim)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    .map(String::toUpperCase)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    .map(Attribute::valueOf)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    .toList();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            // copyOf could throw if we don\u0027t make sure attributes is non-empty","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            EnumSet\u003cAttribute\u003e uniqueValues \u003d EnumSet.copyOf(result);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (uniqueValues.size() !\u003d result.size()) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                throw new ParseException(Attribute.MESSAGE_CONSTRAINTS_NO_DUPLICATES);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return result;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ParseException(Attribute.MESSAGE_CONSTRAINTS_VALID_ATTRIBUTES);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses a {@code String commission} into a {@code Commission}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code commission} is invalid.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Commission parseCommission(String commission) throws ParseException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(commission);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String trimmedCommission \u003d commission.trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Commission.isValidCommission(trimmedCommission)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new ParseException(Commission.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new Commission(trimmedCommission);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Parses a {@code String fileName} into a {@code Path}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code String fileName} is invalid.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static CsvFileName parseCsvFileName(String csvFileName) throws ParseException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(csvFileName);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String trimmedCsvFileName \u003d csvFileName.trim();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!CsvFileName.isValidCsvFileName(trimmedCsvFileName)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new ParseException(CsvFileName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return new CsvFileName(trimmedCsvFileName);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"xumarcus":4,"-":184}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Commission commission;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Commission commission, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.commission \u003d commission;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Commission getCommission() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commission;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a person with a new commission.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person setCommission(Commission newCommission) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, newCommission, tags);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns the person\u0027s attribute given its type.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Object getAttribute(Attribute attribute) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return switch (attribute) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case NAME -\u003e getName();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case PHONE -\u003e getPhone();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case EMAIL -\u003e getEmail();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ADDRESS -\u003e getAddress();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case COMMISSION -\u003e getCommission();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bill-1"},"content":"        return Objects.hash(name, phone, email, address, commission, tags);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bill-1"},"content":"                .add(\"commission\", commission)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":142,"Bill-1":2}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bill-1"},"content":"            \"Phone numbers should only contain numbers, and have a length ranging from\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bill-1"},"content":"                   + \" a minimum of 3 to a maximum of 20 digits.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bill-1"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,20}\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":59,"Bill-1":3}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xumarcus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xumarcus"},"content":"import java.util.Optional;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xumarcus"},"content":"    public void getNonZeroUnsignedIntegerClipped() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"\").isPresent()); // Boundary value","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"  \").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"a\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"aaa\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"0\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xumarcus"},"content":"        assertTrue(StringUtil.getNonZeroUnsignedIntegerClipped(\"01\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"-1\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"+1\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\" 10 \").isPresent()); // Leading/trailing spaces","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xumarcus"},"content":"        assertFalse(StringUtil.getNonZeroUnsignedIntegerClipped(\"1 0\").isPresent()); // Spaces in the middle","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xumarcus"},"content":"        String bigNumber \u003d Long.toString((long) Integer.MAX_VALUE + 1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xumarcus"},"content":"        assertEquals(StringUtil.getNonZeroUnsignedIntegerClipped(bigNumber), Optional.of(Integer.MAX_VALUE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xumarcus"},"content":"        assertTrue(StringUtil.getNonZeroUnsignedIntegerClipped(\"1\").isPresent()); // Boundary value","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xumarcus"},"content":"        assertTrue(StringUtil.getNonZeroUnsignedIntegerClipped(\"10\").isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"xumarcus":17,"-":129}},{"path":"src/test/java/seedu/address/logic/commands/SortCommissionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xk1234"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SortCommissionCommandTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xk1234"},"content":"    private Model emptyModel;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xk1234"},"content":"        AddressBook emptyBook \u003d new AddressBook();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xk1234"},"content":"        emptyModel \u003d new ModelManager(emptyBook, new UserPrefs());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void execute_commissionAscendingSort_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e testList \u003d List.of(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                ALICE,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                BENSON,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                CARL","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        SortCommissionCommand scc \u003d new SortCommissionCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedTestList \u003d scc.getSortedList(testList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d List.of(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                ALICE,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                CARL,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                BENSON","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(sortedTestList, expectedList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_sortComm_success() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        SortCommissionCommand scc \u003d new SortCommissionCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StringBuilder expectedMsgBuilder \u003d new StringBuilder(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \"Listed all persons sorted by commission in ascending order.\\n\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e mutableList \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        mutableList.sort((p1, p2) -\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            int commission1 \u003d Integer.parseInt(p1.getCommission().value);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            int commission2 \u003d Integer.parseInt(p2.getCommission().value);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Integer.compare(commission1, commission2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int idx \u003d 1;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : mutableList) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xk1234"},"content":"            expectedMsgBuilder.append(idx).append(\". \").append(person.getName()).append(\", $\")","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    .append(person.getCommission().value)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            idx++;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMsg \u003d expectedMsgBuilder.toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(scc, model, expectedMsg, expectedModel);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void execute_commissionDescendingSort_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e testList \u003d List.of(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                ALICE,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                BENSON,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                CARL","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        SortCommissionCommand scc \u003d new SortCommissionCommand(false);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e sortedTestList \u003d scc.getSortedList(testList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedList \u003d new java.util.ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                ALICE,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                CARL,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                BENSON","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Collections.reverse(expectedList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(sortedTestList, expectedList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xk1234"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xk1234"},"content":"    void executeEmptyList() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xk1234"},"content":"        SortCommissionCommand scc \u003d new SortCommissionCommand(true);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xk1234"},"content":"        assertCommandFailure(scc, emptyModel, MESSAGE_EMPTY_LIST);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xk1234"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xk1234"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void test_equals() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        SortCommissionCommand commissionFirstCommand \u003d new SortCommissionCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        SortCommissionCommand commissionSecondCommand \u003d new SortCommissionCommand(false);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(commissionFirstCommand.equals(commissionFirstCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(commissionSecondCommand.equals(commissionSecondCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(commissionFirstCommand.equals(commissionSecondCommand));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(commissionFirstCommand.equals(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void test_toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        SortCommissionCommand scc \u003d new SortCommissionCommand(false);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expected \u003d \"seedu.address.logic.commands.SortCommissionCommand{isAscending\u003ddesc}\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expected, scc.toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"xk1234":14,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/SummaryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xk1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.math.BigInteger;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SummaryCommandTest {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model modelWithNoPersons;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        modelWithNoPersons \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void calculateTotalCommission_correctlySumsValues() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.of(","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ALICE,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                BENSON","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        BigInteger totalCommission \u003d summaryCommand.getTotal(lastShownList);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        BigInteger expectedTotalCommissionValue \u003d BigInteger.valueOf(Integer.parseInt(ALICE.getCommission().value)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + Integer.parseInt(BENSON.getCommission().value));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(expectedTotalCommissionValue, totalCommission);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void getNumContacts_returnsCorrectCount() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.of(ALICE, BENSON);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int numContacts \u003d summaryCommand.getNumContacts(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(2, numContacts);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void getHighest_returnsPersonWithHighestCommission() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.of(ALICE, BENSON);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person highest \u003d summaryCommand.getHighest(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, highest);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void getLowest_returnsPersonWithLowestCommission() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.of(ALICE, BENSON);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person lowest \u003d summaryCommand.getLowest(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ALICE should have the lowest commission (\"100\" \u003c \"200\")","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertNotNull(lowest);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(ALICE, lowest);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void calculateAverageCommission_correctlyAveragesValues() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.of(ALICE, BENSON);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        double averageCommission \u003d summaryCommand.getAverage(lastShownList);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        double expectedAverage \u003d (Integer.parseInt(ALICE.getCommission().value)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + Integer.parseInt(BENSON.getCommission().value)) / 2.0;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Allow a small delta for floating point comparison","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedAverage, averageCommission, 0.0001);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_summaryWithTypicalPersons_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(); // Use correct command name","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // --- Calculate Expected Values Manually Based on TypicalPersons ---","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        BigDecimal totalCommissionValue \u003d BigDecimal.ZERO;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person highestCommissionPerson \u003d null;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person lowestCommissionPerson \u003d null;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        BigDecimal highestCommission \u003d BigDecimal.valueOf(Double.MIN_VALUE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Initialize lowestCommission with a very large value or the first person\u0027s commission","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        BigDecimal lowestCommission \u003d null;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (Person person : personList) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            BigDecimal currentCommission \u003d new BigDecimal(person.getCommission().value);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            totalCommissionValue \u003d totalCommissionValue.add(currentCommission);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (currentCommission.compareTo(highestCommission) \u003e 0) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                highestCommission \u003d currentCommission;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                highestCommissionPerson \u003d person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            // Initialize lowest on first iteration or compare","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (lowestCommission \u003d\u003d null || currentCommission.compareTo(lowestCommission) \u003c 0) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                lowestCommission \u003d currentCommission;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                lowestCommissionPerson \u003d person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        BigDecimal averageCommissionValue \u003d BigDecimal.ZERO;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!personList.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            averageCommissionValue \u003d totalCommissionValue.divide(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    new BigDecimal(personList.size()), 2, RoundingMode.HALF_UP);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // --- End Calculation ---","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // --- Construct Expected Feedback Message ---","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedStatsMessage \u003d \"\u003d\u003d\u003d\u003d General Statistics \u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + String.format(\"Number of Contacts : %d\\n\", personList.size())","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + String.format(\"Total Commission   : %s\\n\", totalCommissionValue.toString()) // Use BigDecimal string","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + String.format(\"Highest Commission : %s\\n\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                highestCommissionPerson !\u003d null ? highestCommissionPerson.getCommission().toString() : \"N/A\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                + String.format(\"Lowest Commission  : %s\\n\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                lowestCommissionPerson !\u003d null ? lowestCommissionPerson.getCommission().toString() : \"N/A\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + String.format(\"Average Commission : %s\\n\", averageCommissionValue.toString())","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // --- End Message Construction ---","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert using assertCommandSuccess","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // The model state doesn\u0027t change, so expectedModel is the same as the initial model.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(summaryCommand, model, expectedStatsMessage, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void execute_summaryWithNoPersons_success() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xk1234"},"content":"        assertCommandFailure(summaryCommand, modelWithNoPersons, MESSAGE_EMPTY_LIST);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"xk1234":3,"-":151}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xumarcus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xumarcus"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xumarcus"},"content":"    public void parse_largeIndex_returnsDeleteCommand() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xumarcus"},"content":"        assertParseSuccess(parser, \"999999999999\", new DeleteCommand(Index.fromOneBased(Integer.MAX_VALUE)));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xumarcus"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xumarcus"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xumarcus"},"content":"    public void parse_negativeIndex_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xumarcus"},"content":"        assertParseFailure(parser, \"-9\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xumarcus"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xumarcus"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09","isFullCredit":false}],"authorContributionMap":{"xumarcus":11,"-":32}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bill-1"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", commission\u003d\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bill-1"},"content":"                + ALICE.getCommission() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bill-1"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bill-1"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bill-1"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bill-1"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bill-1"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bill-1"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01","isFullCredit":false}],"authorContributionMap":{"-":98,"Bill-1":8}}]
