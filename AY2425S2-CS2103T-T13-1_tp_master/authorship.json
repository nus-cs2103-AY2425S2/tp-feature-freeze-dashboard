[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API) `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-T13-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Using Help within the application itself","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a help command:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"![Help Command Activity Diagram](images/HelpCommandActivityDiagram.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"The command makes use of the `/` prefix to check for the parameters provided. If the parameter is valid (meaning it is one of the other commands available in FitFlow), it will show the message usage of that command requested.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Adding/Editing a Client","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"The following activity diagram summarizes the workflow of when a client is added or edited in FitFlow.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"![Add_Edit Command Activity Diagram](images/AddCommand_EditCommandActivityDiagram.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"The commands check for schedule conflicts between the client being added/edited and other existing clients stored in FitFlow and warns the user of any such conflicting timings.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Using View within the application itself","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a view command:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"![View Command Activity Diagram](images/ViewCommandActivityDiagram.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"The command takes in a DAY/DATE parameter. If the parameter is valid, it will list the clients\u0027 schedules for the given day or date.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Using Display within the application itself","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a display command:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"![Display Command Activity Diagram](images/DisplayCommandActivityDiagram.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"The command takes in a positive integer parameter. If the parameter is valid (meaning it is less than or equal to the number of clients), it will display the client\u0027s details at the index.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* a professional personal trainer in Singapore helping clients achieve fitness goals","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* needs to track and manage individual client goals","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"* creates and edits customised training plans based on client needs","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"* keeps track of client details (name, phone number, training days, goals, medical history and location)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"* manages weekly schedule and multiple training locations across Singapore","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* organise group workout sessions with clients who have similar exercise profiles and live close together","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Value proposition**: streamlines client management, workout planning, and scheduling, maximizing productivity","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                                                   | So that I can…​                                                           |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"|----------|----------------------------------|--------------------------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | add my clients\u0027 contact details and location to the app                         | I can contact them easily if there are any changes in plans               |","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | add my clients\u0027 workout goals in the app                                       | I can easily plan workout routines for my clients                         |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | add my clients\u0027 previous or existing injuries in the app                       | I can better plan exercises that avoid aggravating their injury           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | add my clients\u0027 preferred location                                             | I can collate a list of clients in the same area to train                 |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | sort my clients\u0027 information to see if they match with my schedule             | I can better plan the timing to train while I am free                     |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"| `* * *`  | new user                         | look at the onboarding/help section                                            | I know the features the app provides and how to use them                  |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"| `* * *`  | new user                         | go through a guided tutorial from the application                              | learn the basic features of the app and test it out                       |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | view the schedule for each day                                                 | I can plan my day accordingly                                             |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | update each clients\u0027 details                                                   | I can make changes and keep things up to date with what happens IRL       |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | view client\u0027s preference on solo or group trainings                            | I can organise a joint training session to maximise productivity          |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| `* *`    | user                             | add recurring events for clients that have training on the same day every week | I don\u0027t need to manually add and manage my schedule every single week     |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"| `* *`    | user                             | be notified of a conflicting timeslot when I update a client\u0027s timeslot        | I know which timeslots are not available for my new clients               |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* *`    | user                             | delete client that I am not training anymore                                   | the client list I have is not messy                                       |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"| `* *`    | forgetful user                   | set reminders for training sessions                                            | I do not forget or miss a training session with my client                 |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"| `* *`    | user                             | set goal deadlines for clients                                                 | I know which session to have a sit down with client                       |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `*`      | organized user                   | sort my clients chronologically                                                | I will know which clients I will be meeting with soon.                    |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"| `*`      | user                             | sort my clients based on months or weeks                                       | I can better plan for the clients that are in the upcoming months / weeks |","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `FitFlow` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Use case 1: View Application Usage**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"1. The new user requests for help from Fit Flow to see the functionality of the application.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"2. FitFlow displays usage instructions for each function.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"3. The new user reads the instructions.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"- 2a. User requests to see the specific help page for a command (e.g. help add).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows the User the specific command’s help text.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Use case 2: Add Client**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"1. User chooses to add a new client.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"2. FitFlow stores the details of the client and indicates success.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"3. The new client is added to the displayed client list.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"- 1a. The client details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"    - 1a1. FitFlow shows the user the format the client’s details should be entered.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"    - 1a2. User enters new data.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until the data is entered.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"deseansoh"},"content":"- 1b. User provides a schedule timing that conflicts with an existing schedule timing.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"deseansoh"},"content":"    - 1b1. FitFlow stores the details of the client.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"deseansoh"},"content":"    - 1b2. FitFlow shows the existing schedule timing that conflicts with the given schedule timing, along with a warning.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"deseansoh"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Use case 3: Find Client**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"1. User requests to find a specific client with a keyword.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"2. FitFlow shows the list of clients with the given keyword on the app.\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"- 1a. The client being searched for does not exist.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"    - 1a1. FitFlow tells the User that it was unable to find a match.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"- 1b. The given client is invalid.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"    - 1b1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"    - 1b2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"      Steps 1b1-1b2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"**Use case 4: View Schedule**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"1. User requests to view their schedule on a specific day.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"deseansoh"},"content":"2. FitFlow shows the list of clients that have a schedule for the specified day.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"- 1a. The given day is invalid.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"    - 1a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"    - 1a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"deseansoh"},"content":"- 1b. No clients were found to have schedule on given day.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    - 1b1. FitFlow tells the User that the schedule for the given day is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Use case 5: Display Client\u0027s details**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"2. User requests to display the specific client\u0027s details.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"3. FitFlow shows the details of the client on the app.\u003cbr\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"- 2a. The client requested to display does not exist.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow tells the User that it was unable to get the specified client\u0027s details.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"- 2b. The given client is invalid.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"    - 2b1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"    - 2b2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"      Steps 2b1-2b2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Use case 6: Delete Client**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or find the client to delete from the displayed client list.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"2. User requests to delete the client.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"3. FitFlow shows the client’s details to be deleted and prompts the user to confirm the decision to delete.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"4. User confirms.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"5. FitFlow shows the details of the client that has been deleted.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"- 1a. The list is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"- 2a. The given client is invalid.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"- 4a. The user decides not to delete the client.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"    - 4a1. FitFlow aborts the delete command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Use case 7: Edit Client\u0027s Details**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or find the client to edit from the displayed client list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"2. User requests to edit the client\u0027s details.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"3. FitFlow stores the new details of the client and indicates success.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"- 1a. The list is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"- 2a. The given client is invalid or the client details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"deseansoh"},"content":"- 2b. User provides a schedule timing that conflicts with an existing schedule timing.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"deseansoh"},"content":"    - 2b1. FitFlow stores the details of the client.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"deseansoh"},"content":"    - 2b2. FitFlow shows the existing schedule timing that conflicts with the given schedule timing, along with a warning.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"deseansoh"},"content":"      Use case ends.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"**Use case 8: Add session to client**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"2. User requests to \u003cins\u003eedit client\u0027s details (Use Case 6)\u003c/ins\u003e to add a session to the client.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"3. FitFlow stores the new session details to the client details.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"- 1a. The schedule is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"- 2a. The given client is invalid or the session details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"**Use case 9: Delete session from client**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"2. User requests to \u003cins\u003eedit client\u0027s details (Use Case 6)\u003c/ins\u003e to delete a session from the client.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"3. FitFlow removes the session details from the client details.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"- 1a. The schedule is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"- 2a. The given client is invalid or the session given is invalid.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"**Use case 10: Modify session details for client**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003efind client (Use Case 3)\u003c/ins\u003e or \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"2. User requests to \u003cins\u003eedit client\u0027s details (Use Case 6)\u003c/ins\u003e to modify session details for the client.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"3. FitFlow stores the new session details for the client.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"- 1a. The schedule is empty.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"- 2a. The given client is invalid or the session details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"**Use case 11: Add session for multiple clients**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. User requests to add a session and includes the clients\u0027 names involved with the session.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"2. FitFlow stores the new session details for each of the specified client.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"- 2a. The given client(s) is invalid or the session details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"**Use case 12: Delete session for multiple clients**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e to find the session to delete.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"2. User requests to delete the specific session.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"3. FitFlow shows the session details and the clients involved in the session.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"4. FitFlow will prompt the user to confirm the decision to delete.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"5. User confirms.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"6. FitFlow removes the session details for each of the specified clients.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"- 2a. The given client(s) is invalid or the session details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"- 5a. The user decides not to delete the session.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"    - 5a1. FitFlow aborts the delete session command.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"**Use case 13: Modify session for multiple clients**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e to find the session to modify.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"2. User requests to modify the specific session with new details.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"3. FitFlow stores the new session details for the client.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"- 2a. The given client(s) is invalid or the session details are given in the wrong format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"**Use case 14: Set reminder for session**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003eview schedule (Use Case 4)\u003c/ins\u003e to find a session to set a reminder.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"2. User requests to set a reminder for the specific session at a given timing before the session (e.g. 10 minutes).","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"3. FitFlow stores a reminder for the specified session.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"4. FitFlow will prompt the user at the given timing before the session.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"- 2a. The given timing is invalid.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"    - 2a1. FitFlow shows an error message and prompts the user the format of the command.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"    - 2a2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"      Steps 2a1-2a2 repeat until the command is entered correctly.\u003cbr\u003e","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"#### User Requirements:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"2. The program should be able to work locally on someone’s device, without any connection to the Internet.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"3. Someone who is a fast typist but isn’t familiar with command line interfaces should be able to pick up the application quickly.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"4. The GUI should be designed for resolutions 1920x1080 or higher, with scales 100% and 125%, and work well on them.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"5. The GUI should still be usable for resolutions 1280x720 and higher, and scales 150%.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"#### Technical Requirements:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. Should work on any mainstream OS as long as it has Java 17 or above installed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"2. The application should be contained within a single file, without the need for installation of extra dependencies.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"3. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"#### Data requirements:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"2. Data should be stored locally, in a human-readable and human-editable file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"#### Performance requirements:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. The application should be responsive to user input, and there shouldn’t be any input lag exceeding 1s.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"#### Business/Domain rules:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Each contact must have at least a name and contact number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"#### Notes about project scope:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"1. The application is not required to provide suggestions on schedules to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"2. The application is meant for a single-user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"* **Above Average Typing Seed**: Refers to a user capable of typing text (in natural language) at a faster rate than the typical user, enabling quick entry of commands or form data.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"* **Client\u0027s Details**: This includes session details, training goals, medical history, gym location, and contact number.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"* **Command Line Interface (CLI)**: A text-based interface that accepts typed commands. Users interact with the application by entering commands, rather than by clicking or tapping on-screen elements.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"* **Contact**: An individual entry in the system’s address book or database, typically including (at minimum) a **name** and **contact number**.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"* **Fast Typist (Fast Typing)**: A user who can input typed text swiftly, increasing overall efficiency when using a CLI-based or text-based system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"* **Graphical User Interface (GUI)**: A visual, interactive interface that uses elements such as windows, buttons, and menus. Users interact by pointing, clicking, or tapping, rather than typing commands.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"* **Human-Editable Format**: A data storage format (e.g., CSV, JSON, YAML) that can be opened in any text editor and modified directly by a human without needing specialized software or database tools.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"* **Human-Readable Format**: A data storage format that is **easily understood** by users (e.g., structured text instead of proprietary binary formats). This makes it simpler for users to inspect or debug stored data.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"* **Input Lag**: The delay between the user performing an action (e.g., typing a command, clicking a button) and the system responding. A well-optimized application keeps this delay under 1 second to feel “instant” to the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"* **Local Data Storage**: Storing all user or application data on the same device that the application is running on. This setup does not require an internet connection or external servers.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"* **Performance Sluggishness**: A noticeable delay in the application’s responsiveness, typically when dealing with large datasets or intense processing tasks. The requirement states that managing up to 1000 contacts should not cause any discernible slowdown.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"* **Scale Factor**: The magnification or zoom level applied to on-screen elements (e.g., 100%, 125%, 150%). This is relevant for accessibility and ensuring proper display on high-resolution monitors.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"* **Screen Resolution**: The pixel dimensions of the display (e.g., 1920×1080, 1280×720). Higher resolutions typically allow more UI elements to appear clearly on screen. The application must remain usable and visually clear at both high and moderate resolutions.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"* **Single-File Application**: An application distributed as a single executable or JAR file, avoiding the need for extra installations or additional dependencies on the user’s system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"* **Single-User Application**: Intended for use by one person at a time, with no requirement for multi-user logins or collaborative functionality.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"   2. Double-click the jar file\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"3. Exit program","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"   1. Enter the exit command. The window closes.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"   2. Double-click the jar file\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"   Expected: Shows the GUI with contacts. The most recent window size and location is retained.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"### Deleting a client","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact is shown in the status message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"   3. Test case: `delete x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details of invalid client index shown in the status message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"   4. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details of incorrect format and right usage are shown in the status message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"   5. Other incorrect delete commands to try: `delete`, `delete y`, `...` (where y is not a positive integer)\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"### Displaying a client","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"1. Displaying a client while all clients are being shown","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"    2. Test case: `display 1`\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"       Expected: First contact is displayed from the list. Details of the client is shown in the status message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"    3. Test case: `display x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"       Expected: No person is displayed. Error details of invalid client index shown in the status message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"    4. Test case: `display 0`\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"       Expected: No person is displayed. Error details of incorrect format and right usage are shown in the status message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"    5. Other incorrect display commands to try: `display`, `display y`, `...` (where y is not a positive integer)\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"### Finding a client","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"1. Finding a client in the client list","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"    1. Test case: `find x` (where x is a complete part of client\u0027s name)\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"    Expected: Client list only shows the contacts that contains the name. Number of clients listed is shown in the status message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"    2. Test case: `find x y` (where x and y are complete part of different client\u0027s name)\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"    Expected: Client list only shows the contacts that contains the name. Number of clients listed is shown in the status message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"    3. Test case: `find z` (where z is not part of any client\u0027s name)\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"    Expected: Client list is empty. \u0027No clients listed\u0027 message is shown in the status message.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"1. Dealing with missing data files","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"   1. Prerequisites: Executed the [final FitFlow release] jar file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"   2. Open the FitFlow home folder. Delete the Data folder.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"   3. Double-click the jar file. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The most recent window size and location is retained.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"2. Dealing with corrupted data files","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"   1. Prerequisites: Executed the [final FitFlow release] jar file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"   2. Open the FitFlow home folder. Open the Data folder. Open the addressbook.json.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"   3. In the open addressbook.json. Remove the curly bracket ({) at line 1. Close and Save the file.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"   4. Double-click the jar file\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"   Expected: Shows the GUI without a set of sample contacts. The most recent window size and location is retained.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"deseansoh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"deseansoh"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"deseansoh"},"content":"Team Size: 5","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"deseansoh"},"content":"This section addresses the enhancements we plan to add to the application in the future. They address some of the features in our use cases that are not currently implemented within the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"deseansoh"},"content":"### Use Case 6 - Step 3: Prompting User for Delete confirmation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"deseansoh"},"content":"When a client deletes a user, the application does so immediately without any confirmation. This can be undesirable, especially since the `delete` command uses indexes for deletion, which can be mistyped easily.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"deseansoh"},"content":"We plan to have a confirmation message show up in the output box, with details of the client (similar to those shown in `display`), so that the user can verify the client before deleting them from the app. After verification, they can then type \u0027yes\u0027 or \u0027no\u0027 to proceed with or stop the process.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"deseansoh"},"content":"This can be done with a new Confirmation class, which will hold **information about the client** to be deleted, and the code to delete the client in a **nullary function** (function that takes no arguments). Depending on whether the user inputs \u0027yes\u0027 or \u0027no\u0027, the Confirmation object will call the nullary function or finish the process without doing anything to the data.","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"wzhua02":18,"-":765,"deseansoh":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## About FitFlow","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Managing clients as a personal trainer is never easy. Beyond conducting workouts, trainers must juggle scheduling, track client progress, consider individual goals and medical histories, and ensure each client gets a personalized experience. While popular client management apps like Trainerize, TrueCoach, and My PT Hub offer various features, they come with subscription costs, steep learning curves, and cluttered interfaces. Additionally, these platforms lack built-in conflict detection, forcing trainers to manually track overlapping client schedules.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Introducing FitFlow — **a free desktop app designed specifically for personal trainers in Singapore to streamline client management. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** It provides trainers with a fast and reliable way to store, retrieve, and update client details, including fitness goals, session history, and health information.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"What sets FitFlow apart is its intelligent conflict detection system. The app automatically flags scheduling overlaps, helping trainers avoid double bookings and maintain a seamless flow of appointments.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"By streamlining administrative tasks, FitFlow lets trainers focus on what matters most—empowering their clients on their fitness journeys.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Using this Guide","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"The purpose of this user guide is to **help you install FitFlow**, as well as be a **resource you can refer to** if you require any additional help.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"You can use the [Table of contents](#table-of-contents) to navigate directly to what you\u0027re looking for.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb: **Tips/Info:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"These boxes contain important/useful information or tips that can help you with using FitFlow.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Note:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"These boxes indicate information that you should take note of to avoid running into problems.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e:rotating_light: **Caution:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"These boxes indicate warnings about potential negative outcomes.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103T-T13-1/tp/releases).","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your FitFlow app.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"4. Go to your home folder and double-click on the `.jar` file to launch the application.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    * If the above does not work, try the below steps:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        1. Open a command terminal for your operating system.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            * Windows: Press Windows button + X on the keyboard. Click on Terminal.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            * macOS: Press Command (⌘) + Space on the keyboard and search for \"Terminal\". Open the Terminal application.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            * Linux: Press Ctrl + Alt + T. The terminal application should open.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        2. Change the directory you are currently in to the home folder, using the command `cd`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            * A simple way to find the directory is to go to the home folder your normal file browsing app and copying the directory at the address bar. For example, the command could be `cd ~/Downloads/FitFlowFolder`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            * Another simple way to navigate to the directory is to go to the home folder and right-click on an empty space, then select the option \"Open in terminal\" to immediately open a terminal in that directory.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        3. Use the `java -jar \u003cFitFlow Filename\u003e.jar` command to run the application.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will display the list of available commands in FitFlow.\u003cbr\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/81234567` : Adds a client named `John Doe` to FitFlow.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * `add n/Alice Pauline p/94351253 rs/Mon 1400 1600 ots/1/2 1000 1200 g/Get fitter mh/Twisted right ankle l/Bishan ActiveSG Gym t/friends` : Adds a client named `Alice Pauline` with many details such as her schedule, fitness goal, medical history and location.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deseansoh"},"content":"   * `find John Doe` : Finds clients whose names match \u0027John\u0027 or \u0027Doe\u0027 and shows their name and phone number in the Client List. The Output Box will show the number of clients found by the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deseansoh"},"content":"   * `view monday` : Displays the schedules the personal trainer has with the clients on that day.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deseansoh"},"content":"   * `view 17/2/25` : Displays the schedules the personal trainer has with the clients on that day.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * `edit 1 p/81234567 rs/Tue 1600 1800 g/Do 10 pull ups` : Edits the details of the 1st client shown in the current list.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd client shown in the current list.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"   * `help` : Displays the list of available commands the user can use in FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * `help /add` : Displays the format for the specific command in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"   * `list` : Lists all clients.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all clients.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"   * `exit` : Exits FitFlow app.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"## Guided Tutorial","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"To get a feel for the app before actually starting to use it, check out our [_Guided Tutorial_](GuidedTutorial.md).","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"**:information_source: Tips about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Help : `help`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"Displays the description and formatting of commands in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `help [/COMMAND_NAME]`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Display all the available commands in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Displays a specific command and will give the specific description and formatting for that command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `help` will display the description of all the available commands in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `help /add` will display the command description and formatting for the add command in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Adding a client: `add`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Adds a client to FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER [rs/RECURRING_SCHEDULE]…​ [ots/ONE_TIME_SCHEDULE]…​ [g/GOALS] [mh/MEDICAL_HISTORY] [l/LOCATION] [t/TAG]…​`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wzhua02"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deseansoh"},"content":"- A client can have any number of recurring schedule, one time schedule, or tags (including 0).\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Note:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"- A client should have at least have a name and a phone number to be added.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deseansoh"},"content":"- A client is uniquely identified by their name. Thus, you cannot add two clients with the exact same name, regardless of case (i.e. john doe cannot be added with John Doe already in the client list).\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deseansoh"},"content":"The reason for this is so that you will not be confused on which client is which when trying to look for their details. You must differentiate them in some way before adding.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"- Any date provided that excludes year will be treated as a date in the current year.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deseansoh"},"content":"- A client with a recurring schedule or one time schedule that conflicts internally or with other clients\u0027 schedules will still be added.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"- Use the edit command to rectify any conflicting schedules.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deseansoh"},"content":"* For `NAME`, `GOALS`, `MEDICAL_HISTORY`, `LOCATION`, and `TAG`, these fields accept all ASCII characters.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* For `PHONE_NUMBER`, any 8-digit number starting with 6, 8, or 9 is accepted.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* For `RECURRING SCHEDULE`, use the format `DAY START_TIME END_TIME`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"  * `DAY` can be any day of the week i.e. `Monday`. You can use 3-letter short-form days as well i.e. `Mon`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  * `START_TIME` and `END_TIME` should be 4 digits, in 24-hour format.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* For `ONE_TIME_SCHEDULE`, use the format `DATE START_TIME END_TIME`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"  * `DATE` should be in the format `[D]D/[M]M[/YY]`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    * The day and month of the date can have its leading `0` omitted if it is single digit.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    * The year of the date can be omitted. In this case, the application will assume the current year.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"  * `START_TIME` and `END_TIME` should be 4 digits, in 24-hour format.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"* To rectify a client\u0027s conflicting schedules, refer to the [**`edit`**](#editing-a-client--edit) section.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deseansoh"},"content":"* This command adds a client who is your _friend_ named _Alice Pauline_ who has the phone number _94351253_. She has weekly sessions on _Monday_ from _1400_ to _1600_, and a standalone appointment on _1st February this year_. She wants to _get fitter_ after she _twisted her right ankle_. You will be having training with her at the _Bishan ActiveSG Gym_.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deseansoh"},"content":"`add n/Alice Pauline p/94351253 rs/Mon 1400 1600 ots/1/2 1000 1200 g/Get fitter mh/Twisted right ankle l/Bishan ActiveSG Gym t/friends`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deseansoh"},"content":"* `add n/Betsy Crowe t/friend g/Lose weight l/Jurong GymBox p/91234567 mh/Lower back injury rs/Wed 1500 1700 rs/Fri 1200 1330`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"### Listing all clients: `list`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnWe11"},"content":"Always shows a list of all the clients in FitFlow, regardless of any previous commands that might have filtered the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `list` displays and indexes all the clients in FitFlow.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnWe11"},"content":"* If the list has been filtered because of the `find` command, you can use the `list` command to display the full list of clients again.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Locating clients by name: `find`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"deseansoh"},"content":"Find clients whose names contain any of the given keywords, showing them in the Client List on the left.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"deseansoh"},"content":"You can then use [**`display`**](#displaying-a-clients-details-display) to display the details of the client you want.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. i.e. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnWe11"},"content":"* You do not need to include the name tag in the keyword, e.g. if you want to search for the name \u0027Alex\u0027 it should be `find Alex` and not `find n/Alex`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"* Only the name and contact number of the client will be displayed. To see a client\u0027s full details, refer to the [**`display`**](#displaying-a-clients-details-display) section.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"* Only full words will be matched i.e. `Han` will not match `Hans`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"  i.e. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`.\u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"  ![Result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Displaying a client\u0027s details: `display`","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Display a client\u0027s full details in the client list, identified by the index number used in the displayed client list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Format: `display INDEX`","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"* Displays the client at the specified `INDEX`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"* `display 1` will display the details of the person at index 1","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"* `display 5` will display the details of the person at index 5","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `display 1` displays the details of the 1st client in the results of the `find` command.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Viewing Schedules: `view`","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"deseansoh"},"content":"Displays the schedules the personal trainer has with clients on that day or date.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"Format: `view DAY/DATE`\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"DAY Format: `Monday` or `Mon`\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"DATE Format: `[D]D/[M]M[/YY]`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Note:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"- Any date provided that excludes year will be treated as a date in the current year.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"deseansoh"},"content":"- Viewing a day (i.e. Mon), will also return `ONE_TIME_SCHEDULE` schedules in the coming Monday.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* The search is case-insensitive. i.e. `Monday` will match `monday`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* A day or date field must be provided.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"deseansoh"},"content":"* For `DAY`, 3-letter short-form is allowed, i.e. `Monday` will match with `mon`. Here are a list of accepted `DAY` names:\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"deseansoh"},"content":"`Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"deseansoh"},"content":"`Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat`, `Sun`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"* For `DATE`, the format has to be `[D]D/[M]M[/YY]` e.g. `14/2` matches with `14/02/25` and `7/1/25` matches with `07/01/25`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * The day and month of the date can have its leading `0` omitted if it is single digit.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * The year of the date can be omitted. In this case, the application will assume the current year.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"deseansoh"},"content":"* `view Tue` returns the list of clients with schedules on Tuesday.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"deseansoh"},"content":"* `view 25/02/25` returns the list of clients with schedules on 25/02/25.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"deseansoh"},"content":"* `view 21/04` returns the list of clients with schedules on 21/04 in today\u0027s year of usage.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"deseansoh"},"content":"* `view Monday` returns the list of clients with schedules on Monday.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    ![result for \u0027view Monday\u0027](images/viewMonday.png)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Editing a client : `edit`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"Edits an existing client in FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [rs/RECURRING_SCHEDULE]…​ [ots/ONE_TIME_SCHEDULE]…​ [g/GOALS] [mh/MEDICAL_HISTORY] [l/LOCATION] [t/TAG]…​`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Note:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"- Any date provided that excludes year will be treated as a date in the current year.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"deseansoh"},"content":"- A client with a recurring schedule or one time schedule that conflicts internally or with other clients\u0027 schedules will still be added.\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"deseansoh"},"content":"- Use the edit command to rectify any conflicting schedules. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"deseansoh"},"content":"- When editing recurring schedules, one time schedules or tags, the **existing parameters** of the client will be **removed** i.e. it is **not cumulative**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* You can remove all the client\u0027s recurring schedules, one time schedules and tags by typing `rs/`, `ots/`, and `t/` respectively without specifying any value after it.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"* For more details on how each field should be formatted, refer to the [**`add`**](#adding-a-client-add) section.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 l/Anytime Fitness ots/4/4 1200 1400` Edits the phone number, location, and one time schedule of the 1st client to be `91234567`, `Anytime Fitness`, and `4/4 1200 1400` respectively.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower rs/ ots/ t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing recurring schedules, one time schedules and tags.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"Deletes the specified client from FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e:rotating_light: **Caution:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"**This command is irreversible. Use with caution.**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd client from FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"Clears all entries from FitFlow.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e:rotating_light: **Caution:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"**This command is irreversible. Use with caution.**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"FitFlow data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"FitFlow data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the sample data file it creates with the file that contains the data of your previous FitFlow home folder.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"deseansoh"},"content":"3. The [**view**](#viewing-schedules-view) command currently does not highlight conflicting schedules when used. This is known and will be rectified in a future to make it easier for client\u0027s to rectify conflicting schedules. It is not prioritised as a user is still able to manually see and rectify conflicting schedules.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"deseansoh"},"content":"4. The dates are only accepted if the year is in a 2-digit format, not in a 4-digit format. This is known and will be updated in a future update. It is not prioritised as it is unlikely that a user will save a schedule in a year earlier than 2000 and after 2100 for now.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"deseansoh"},"content":"5. When editing recurring schedules, one time schedules or tags, the existing parameters of the client will be removed i.e. it is not cumulative. This is a known limitation and the behaviour will be adjusted in an update. It is not prioritised as the user can still add the fields manually.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"deseansoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"wzhua02"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Help** | `help [/add] [/list] [/edit] [/find] [/display] [/view] [/delete] [/clear] [/exit]` \u003cbr\u003e e.g. `help /add`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"deseansoh"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER [rs/RECURRING_SCHEDULE]…​ [ots/ONE_TIME_SCHEDULE]…​ [g/GOALS] [mh/MEDICAL_HISTORY] [l/LOCATION] [t/TAG]…​` \u003cbr\u003e e.g. `add n/Alice Pauline p/94351253 rs/Mon 1400 1600 ots/1/2 1000 1200 g/Get fitter mh/Twisted right ankle l/Bishan ActiveSG Gym t/friends`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"**List** | `list` \u003cbr\u003e e.g. `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g. `find John`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Display** | `display INDEX`\u003cbr\u003e e.g. `display 2`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"deseansoh"},"content":"**View** | `view DAY/DATE` \u003cbr\u003e e.g. `view Monday`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"deseansoh"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [rs/RECURRING_SCHEDULE]…​ [ots/ONE_TIME_SCHEDULE]…​ [g/GOALS] [mh/MEDICAL_HISTORY] [l/LOCATION] [t/TAG]…​`\u003cbr\u003e e.g. `edit 1 p/91234567 l/Anytime Fitness ots/4/4 1200 1400`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Exit** | `exit`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"AnWe11":3,"wzhua02":7,"-":328,"deseansoh":32}},{"path":"docs/diagrams/HelpCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes a help command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":":HelpCommandParser","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"parses the given input;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"if () then ([no parameters provided])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    :HelpCommand helpMessage","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    is a generic help message;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"else ([at least 1 parameter provided])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    if () then ([one parameter])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if () then ([valid parameter])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            :HelpCommand helpMessage","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            is message usage of parameter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        else ([invalid parameter])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            :HelpCommand helpMessage","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deseansoh"},"content":"            is an invalid command message;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        endif","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    else ([more than one parameter])","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        :Throw ParseException for","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        multiple parameters;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        :Inform User of the","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        wrong usage of help;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        stop","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    endif","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":":Display help usage in","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"command result to User;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"-":37,"deseansoh":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Goals","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deseansoh"},"content":"Class MedicalHistory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deseansoh"},"content":"Class Location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class RecurringSchedules","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class OneTimeSchedules","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deseansoh"},"content":"Class Tags","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deseansoh"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deseansoh"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deseansoh"},"content":"Person *--\u003e \"1\" Location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deseansoh"},"content":"Person *--\u003e \"1\" Goals","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deseansoh"},"content":"Person *--\u003e \"1\" MedicalHistory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tags","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" RecurringSchedules","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" OneTimeSchedules","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Location","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"-":51,"deseansoh":8}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnWe11"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d client(s) listed for the keyword(s) \";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SCHEDULES_LISTED \u003d \"Here are the schedules for [%1$s]:\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"\\n\\nPhone: \")","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"\\nRecurringSchedule: \");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getRecurringSchedules().forEach(schedule -\u003e {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (!builder.isEmpty() \u0026\u0026 builder.charAt(builder.length() - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                builder.append(\", \");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            builder.append(schedule);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        builder.append(\"\\nOneTimeSchedule: \");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        person.getOneTimeSchedules().forEach(schedule -\u003e {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (!builder.isEmpty() \u0026\u0026 builder.charAt(builder.length() - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                builder.append(\", \");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            builder.append(schedule);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        builder.append(\"\\nGoals: \")","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getGoals())","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"\\nMedical History: \")","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getMedicalHistory())","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"\\nLocation: \")","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getLocation());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        builder.append(\"\\nTags: \");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"AnWe11":1,"-":73}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Delete a client from the application, \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"identified by the index number used in the displayed client list.\\n\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Format: \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deseansoh"},"content":"            + COMMAND_WORD + \" INDEX (must be 1 and above)\\n\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":70,"deseansoh":1}},{"path":"src/main/java/seedu/address/logic/commands/DisplayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Displays a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"display\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Display a client\u0027s full details from the client list, \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"identified by the index number used in the displayed client list.\\n\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deseansoh"},"content":"            + \"Format: \" + COMMAND_WORD + \" INDEX (must be 1 and above)\\n\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DISPLAY_PERSON_SUCCESS \u003d \"Display Client: %1$s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DisplayCommand(Index targetIndex) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DISPLAY_PERSON_SUCCESS, Messages.format(personToDisplay)));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DisplayCommand)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DisplayCommand otherDisplayCommand \u003d (DisplayCommand) other;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDisplayCommand.targetIndex);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":68,"deseansoh":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GOALS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_HISTORY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ONETIMESCHEDULE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING_SCHEDULE;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Goals;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.OneTimeSchedule;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RecurringSchedule;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.ScheduleConflictDetector;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.ScheduleConflictResult;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update the details of a client in the client list, \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Format: \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deseansoh"},"content":"            + COMMAND_WORD + \" INDEX (must be 1 and above) \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RECURRING_SCHEDULE + \"RECURRING SCHEDULE] \"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ONETIMESCHEDULE + \"ONE TIME SCHEDULE] \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_GOALS + \"GOALS]\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_MEDICAL_HISTORY + \"MEDICAL_HISTORY] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"RECURRING SCHEDULE Format: DAY HHmm HHmm\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"ONE TIME SCHEDULE Format: DD/MM[/YY] HHmm HHmm\\n\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the FitFlow.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"The phone number provided already exists in FitFlow.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SCHEDULE_CONFLICT \u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \"Note: The client has been edited, but there are schedule conflicts:\\n\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        validatePersonUniqueness(model, personToEdit, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e allConflicts \u003d findAllScheduleConflicts(model, personToEdit, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return buildCommandResult(editedPerson, allConflicts);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Validates that the edited person does not conflict with existing persons in the model.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param model The model containing the list of persons.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param personToEdit The original person being edited.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param editedPerson The edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws CommandException If there are duplicate persons or phones.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void validatePersonUniqueness(Model model, Person personToEdit, Person editedPerson)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throws CommandException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!personToEdit.hasSamePhone(editedPerson) \u0026\u0026 model.hasPhone(editedPerson)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Finds all schedule conflicts for the edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param model The model containing the list of persons.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param personToEdit The original person being edited.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param editedPerson The edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @return A list of conflict descriptions.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e findAllScheduleConflicts(Model model, Person personToEdit, Person editedPerson) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Check for internal schedule conflicts first (conflicts within the edited person)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cString\u003e internalConflicts \u003d ScheduleConflictDetector.checkInternalScheduleConflicts(editedPerson);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // Check for schedule conflicts with existing persons","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cString\u003e externalConflicts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (Person existingPerson : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            // Skip the person being edited","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            if (!existingPerson.equals(personToEdit)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                externalConflicts.addAll(checkConflictsWithPerson(existingPerson, editedPerson));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // Combine all conflicts","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cString\u003e allConflicts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        allConflicts.addAll(internalConflicts);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        allConflicts.addAll(externalConflicts);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return allConflicts;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Builds the command result, including any schedule conflicts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param editedPerson The edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param allConflicts A list of conflict descriptions.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @return The command result.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private CommandResult buildCommandResult(Person editedPerson, List\u003cString\u003e allConflicts) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // If there are conflicts, add them to the success message","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!allConflicts.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            StringBuilder conflictsMsg \u003d new StringBuilder();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            conflictsMsg.append(MESSAGE_SCHEDULE_CONFLICT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            allConflicts.forEach(conflict -\u003e conflictsMsg.append(conflict).append(\"\\n\\n\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            conflictsMsg.append(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return new CommandResult(conflictsMsg.toString());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Checks for schedule conflicts between the edited person and an existing person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @param existingPerson The existing person to check conflicts with.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @param editedPerson The edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @return A list of conflict descriptions.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e checkConflictsWithPerson(Person existingPerson, Person editedPerson) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cString\u003e conflicts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // Check each recurring schedule","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        for (RecurringSchedule schedule : editedPerson.getRecurringSchedules()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            ScheduleConflictResult result \u003d ScheduleConflictDetector.checkScheduleConflict(existingPerson, schedule);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (result.hasConflict()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                String description \u003d result.getConflictDescription();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                int betweenIndex \u003d description.indexOf(\" between \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                String conflictPrefix \u003d description.substring(0, betweenIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                conflicts.add(String.format(\"%s between %s with %s and %s with %s\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"                        conflictPrefix,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"                        result.getConflictingSchedule().getStartTime() + \"-\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                                + result.getConflictingSchedule().getEndTime(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"                        existingPerson.getName(),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                        schedule.getStartTime() + \"-\" + schedule.getEndTime(),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"                        editedPerson.getName()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // Check each one-time schedule","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (OneTimeSchedule schedule : editedPerson.getOneTimeSchedules()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            ScheduleConflictResult result \u003d ScheduleConflictDetector.checkScheduleConflict(existingPerson, schedule);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (result.hasConflict()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                String description \u003d result.getConflictDescription();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                // Extract just the conflict type and date/day","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"                int betweenIndex \u003d description.indexOf(\" between \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"                String conflictPrefix \u003d description.substring(0, betweenIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"                conflicts.add(String.format(\"%s between %s with %s and %s with %s\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"                        conflictPrefix,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                        result.getConflictingSchedule().getStartTime() + \"-\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"                                + result.getConflictingSchedule().getEndTime(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                        existingPerson.getName(),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"                        schedule.getStartTime() + \"-\" + schedule.getEndTime(),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"                        editedPerson.getName()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return conflicts;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * @param personToEdit The original person being edited.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor The details to edit the person with.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @return The edited person.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Set\u003cRecurringSchedule\u003e updatedRecurringSchedules \u003d editPersonDescriptor.getRecurringSchedules()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"                .orElse(personToEdit.getRecurringSchedules());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Goals updatedGoals \u003d editPersonDescriptor.getGoals().orElse(personToEdit.getGoals());","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        MedicalHistory updatedMedicalHistory \u003d editPersonDescriptor.getMedicalHistory()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .orElse(personToEdit.getMedicalHistory());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Location updatedLocation \u003d editPersonDescriptor.getLocation().orElse(personToEdit.getLocation());","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Set\u003cOneTimeSchedule\u003e updatedOneTimeSchedules \u003d editPersonDescriptor.getOneTimeSchedules()","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .orElse(personToEdit.getOneTimeSchedules());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedRecurringSchedules, updatedGoals,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"                updatedMedicalHistory, updatedLocation, updatedOneTimeSchedules, updatedTags);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        private Set\u003cRecurringSchedule\u003e recurringSchedules;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        private Goals goals;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        private MedicalHistory medicalHistory;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        private Location location;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        private Set\u003cOneTimeSchedule\u003e oneTimeSchedules;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"            setRecurringSchedules(toCopy.recurringSchedules);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"            setGoals(toCopy.goals);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"            setMedicalHistory(toCopy.medicalHistory);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"            setOneTimeSchedules(toCopy.oneTimeSchedules);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, recurringSchedules, goals, medicalHistory, location,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"                    oneTimeSchedules, tags);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"         * Sets {@code recurringSchedules} to this object\u0027s {@code recurringSchedules}.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code recurringSchedules} is used internally.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public void setRecurringSchedules(Set\u003cRecurringSchedule\u003e recurringSchedules) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"            this.recurringSchedules \u003d (recurringSchedules !\u003d null) ? new HashSet\u003c\u003e(recurringSchedules) : null;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable recurringSchedule set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code recurringSchedules} is null.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cRecurringSchedule\u003e\u003e getRecurringSchedules() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"            return (recurringSchedules !\u003d null)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    ? Optional.of(Collections.unmodifiableSet(recurringSchedules))","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    : Optional.empty();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public void setGoals(Goals goals) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"            this.goals \u003d goals;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public Optional\u003cGoals\u003e getGoals() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(goals);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        public void setMedicalHistory(MedicalHistory medicalHistory) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"            this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public Optional\u003cMedicalHistory\u003e getMedicalHistory() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(medicalHistory);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"            this.location \u003d location;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public void setOneTimeSchedules(Set\u003cOneTimeSchedule\u003e oneTimeSchedules) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"            this.oneTimeSchedules \u003d (oneTimeSchedules !\u003d null) ? new HashSet\u003c\u003e(oneTimeSchedules) : null;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cOneTimeSchedule\u003e\u003e getOneTimeSchedules() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"            return (oneTimeSchedules !\u003d null)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"                    ? Optional.of(Collections.unmodifiableSet(oneTimeSchedules)) : Optional.empty();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(recurringSchedules, otherEditPersonDescriptor.recurringSchedules)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(location, otherEditPersonDescriptor.location)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(oneTimeSchedules, otherEditPersonDescriptor.oneTimeSchedules)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"                    .add(\"recurringSchedules\", recurringSchedules)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"                    .add(\"goals\", goals)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"                    .add(\"medicalHistory\", medicalHistory)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"                    .add(\"location\", location)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"                    .add(\"oneTimeSchedule\", oneTimeSchedules)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"-":433,"deseansoh":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View a client in the client list whose names contain \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnWe11"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers. You \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnWe11"},"content":"            + \"do not need to include the \u0027/n\u0027 tag in the keyword. This list contains only client names and their \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnWe11"},"content":"            + \"respective phone numbers.\\n\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Format: \"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \" [KEYWORD]\\n\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnWe11"},"content":"        String keywords \u003d String.join(\" \", predicate.getKeywords());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnWe11"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW + keywords,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnWe11"},"content":"                        model.getFilteredPersonList().size()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"AnWe11":6,"-":57}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnWe11"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnWe11"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnWe11"},"content":"        return keywords;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnWe11"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"AnWe11":4,"-":44}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deseansoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deseansoh"},"content":"            \"Tags names should only contain ASCII characters, and should not be blank\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deseansoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s][\\\\p{ASCII}]*\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":60,"deseansoh":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GOALS;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_HISTORY;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ONETIMESCHEDULE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING_SCHEDULE;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"88888888\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"99999999\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_RECURRING_SCHEDULE_AMY \u003d \"Mon 1400 1600\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_RECURRING_SCHEDULE_BOB \u003d \"Wed 1500 1700\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_GOALS_AMY \u003d \"Train arms\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_GOALS_BOB \u003d \"Train back\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_MEDICAL_HISTORY_AMY \u003d \"Twisted right ankle\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_MEDICAL_HISTORY_BOB \u003d \"Upper back injury\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_LOCATION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_LOCATION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ONETIMESCHEDULE_AMY \u003d \"2/2 1000 1200\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ONETIMESCHEDULE_BOB \u003d \"3/6 1000 1200\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String RECURRING_SCHEDULE_DESC_AMY \u003d \" \" + PREFIX_RECURRING_SCHEDULE","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + VALID_RECURRING_SCHEDULE_AMY;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String RECURRING_SCHEDULE_DESC_BOB \u003d \" \" + PREFIX_RECURRING_SCHEDULE","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + VALID_RECURRING_SCHEDULE_BOB;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String GOALS_DESC_AMY \u003d \" \" + PREFIX_GOALS + VALID_GOALS_AMY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String GOALS_DESC_BOB \u003d \" \" + PREFIX_GOALS + VALID_GOALS_BOB;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MEDICAL_HISTORY_DESC_AMY \u003d \" \" + PREFIX_MEDICAL_HISTORY + VALID_MEDICAL_HISTORY_AMY;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MEDICAL_HISTORY_DESC_BOB \u003d \" \" + PREFIX_MEDICAL_HISTORY + VALID_MEDICAL_HISTORY_BOB;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String LOCATION_DESC_AMY \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AMY;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String LOCATION_DESC_BOB \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOB;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ONETIMESCHEDULE_DESC_AMY \u003d \" \" + PREFIX_ONETIMESCHEDULE + VALID_ONETIMESCHEDULE_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ONETIMESCHEDULE_DESC_BOB \u003d \" \" + PREFIX_ONETIMESCHEDULE + VALID_ONETIMESCHEDULE_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Jamesé\"; // \u0027é\u0027 not allowed in names","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_RECURRING_SCHEDULE_DESC \u003d \" \" + PREFIX_RECURRING_SCHEDULE","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"yay\"; // yay is not a valid day","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_GOALS_DESC \u003d \" \" + PREFIX_GOALS; // empty string not allowed for goals","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_MEDICAL_HISTORY_DESC \u003d \" \" + PREFIX_MEDICAL_HISTORY + \"é©\"; //non-ASCII character","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for addresses","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    // empty string not allowed for one time date","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_ONETIMESCHEDULE_DESC \u003d \" \" + PREFIX_ONETIMESCHEDULE + \"abc\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deseansoh"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubbyé\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withRecurringSchedules(VALID_RECURRING_SCHEDULE_AMY).withGoals(VALID_GOALS_AMY)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_AMY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withOneTimeSchedules(VALID_ONETIMESCHEDULE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withRecurringSchedules(VALID_RECURRING_SCHEDULE_BOB).withGoals(VALID_GOALS_BOB)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withMedicalHistory(VALID_MEDICAL_HISTORY_BOB).withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withOneTimeSchedules(VALID_ONETIMESCHEDULE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the command execution was successful (including for AddCommand and EditCommand with potential conflicts) \u003cbr\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccessWithPotentialConflicts(Command command, Model actualModel,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                                                  Model expectedModel) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            // We don\u0027t check the actual message content as it may contain conflict messages","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail: \", ce);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"-":167,"deseansoh":1}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnWe11"},"content":"        String keywords \u003d String.join(\" \", predicate.getKeywords());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnWe11"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW + keywords, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnWe11"},"content":"        String keywords \u003d String.join(\" \", predicate.getKeywords());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnWe11"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW + keywords, 3);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"AnWe11":4,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Goals;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.OneTimeSchedule;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.RecurringSchedule;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"Réchel\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_RECURRINGSCHEDULE_1 \u003d \"invalid schedule\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_RECURRINGSCHEDULE_2 \u003d \"Monday 1400 1200\"; //invalid time","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_GOALS \u003d \" \";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_ONETIMESCHEDULE_1 \u003d \"33/1 1000 1200\"; //out of range date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_ONETIMESCHEDULE_2 \u003d \"2/3 1400 1200\"; //invalid time","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_ONETIMESCHEDULE_3 \u003d \"31/6 1000 1200\"; //invalid date","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deseansoh"},"content":"    private static final String INVALID_TAG \u003d \"friendé\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"88888888\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_RECURRINGSCHEDULE_1 \u003d \"Tuesday 0900 1700\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_RECURRINGSCHEDULE_2 \u003d \"fri 0800 1200\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_GOALS \u003d \"Get fitter\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_ONETIMESCHEDULE_1 \u003d \"01/12 1000 1200\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_ONETIMESCHEDULE_2 \u003d \"1/1 1000 1200\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseRecurringSchedule_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRecurringSchedule(null));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseRecurringSchedule_invalidFormat_throwsParseException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRecurringSchedule(INVALID_RECURRINGSCHEDULE_1));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseRecurringSchedule_invalidTimeOrder_throwsParseException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRecurringSchedule(INVALID_RECURRINGSCHEDULE_2));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseRecurringSchedule_validValueWithoutWhitespace_returnsRecurringSchedule() throws Exception {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RecurringSchedule expected \u003d new RecurringSchedule(VALID_RECURRINGSCHEDULE_1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expected, ParserUtil.parseRecurringSchedule(VALID_RECURRINGSCHEDULE_1));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseRecurringSchedule_validValueWithWhitespaceAndAbbreviatedDay_returnsRecurringSchedule() throws","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Exception {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String abbrevDayWithWhiteppace \u003d WHITESPACE + VALID_RECURRINGSCHEDULE_2 + WHITESPACE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // The constructor converts \"fri\" to \"Friday\", so the expected schedule should be \"Friday 0800 1200\"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        RecurringSchedule expected \u003d new RecurringSchedule(\"fri 0800 1200\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expected, ParserUtil.parseRecurringSchedule(abbrevDayWithWhiteppace));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseGoals_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGoals((String) null));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseGoals_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGoals(INVALID_GOALS));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseGoals_validValueWithoutWhitespace_returnsGoals() throws Exception {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Goals expectedGoals \u003d new Goals(VALID_GOALS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedGoals, ParserUtil.parseGoals(VALID_GOALS));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseGoals_validValueWithWhitespace_returnsTrimmedGoals() throws Exception {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String goalsWithWhitespace \u003d WHITESPACE + VALID_GOALS + WHITESPACE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Goals expectedGoals \u003d new Goals(VALID_GOALS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedGoals, ParserUtil.parseGoals(goalsWithWhitespace));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedules_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOneTimeSchedule((String) null));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedule_invalidFormat_throwsParseException() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOneTimeSchedule(INVALID_ONETIMESCHEDULE_1));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedule_invalidTimeOrder_throwsParseException() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOneTimeSchedule(INVALID_ONETIMESCHEDULE_2));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedule_invalidDate_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOneTimeSchedule(INVALID_ONETIMESCHEDULE_3));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedule_validValueWithoutWhitespace_returnsOneTimeSchedule() throws Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        OneTimeSchedule expectedOneTimeSchedule \u003d new OneTimeSchedule(VALID_ONETIMESCHEDULE_1);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(expectedOneTimeSchedule, ParserUtil.parseOneTimeSchedule(VALID_ONETIMESCHEDULE_1));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedule_validValueWithWhitespace_returnsTrimmedOneTimeSchedule() throws Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String oneTimeScheduleWithWhitespace \u003d WHITESPACE + VALID_ONETIMESCHEDULE_1 + WHITESPACE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        OneTimeSchedule expectedOneTimeSchedule \u003d new OneTimeSchedule(VALID_ONETIMESCHEDULE_1);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals(expectedOneTimeSchedule, ParserUtil.parseOneTimeSchedule(oneTimeScheduleWithWhitespace));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedules_collectionWithInvalidOneTimeSchedules_throwsParseException() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOneTimeSchedules(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                Arrays.asList(VALID_ONETIMESCHEDULE_1, INVALID_ONETIMESCHEDULE_1)));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedules_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseOneTimeSchedules(Collections.emptyList()).isEmpty());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseOneTimeSchedules_collectionWithValidOneTimeSchedules_returnsOneTimeScheduleSetSet()","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            throws Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Set\u003cOneTimeSchedule\u003e actualOneTimeScheduleSet \u003d ParserUtil.parseOneTimeSchedules(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                Arrays.asList(VALID_ONETIMESCHEDULE_1, VALID_ONETIMESCHEDULE_2));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Set\u003cOneTimeSchedule\u003e expectedOneTimeScheduleSet \u003d new HashSet\u003cOneTimeSchedule\u003e(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                Arrays.asList(new OneTimeSchedule(VALID_ONETIMESCHEDULE_1),","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                        new OneTimeSchedule(VALID_ONETIMESCHEDULE_2)));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(expectedOneTimeScheduleSet, actualOneTimeScheduleSet);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"-":293,"deseansoh":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Goals;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Location;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"Réchel\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_RECURRING_SCHEDULE \u003d \"yay 1400 1600\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_GOALS \u003d \" \";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_MEDICAL_HISTORY \u003d \"é©\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ONETIMESCHEDULE \u003d \"40/01 1000 1200\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deseansoh"},"content":"    private static final String INVALID_TAG \u003d \"friendé\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedRecurringSchedule\u003e VALID_RECURRING_SCHEDULES \u003d BENSON.getRecurringSchedules()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .stream()","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedRecurringSchedule::new)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_GOALS \u003d BENSON.getGoals().toString();","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_MEDICAL_HISTORY \u003d BENSON.getMedicalHistory().toString();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_LOCATION \u003d BENSON.getLocation().toString();","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedOneTimeSchedule\u003e VALID_ONETIMESCHEDULES \u003d BENSON.getOneTimeSchedules()","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .stream()","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedOneTimeSchedule::new)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidRecurringSchedules_throwsIllegalValueException() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedRecurringSchedule\u003e invalidRecurringSchedules \u003d new ArrayList\u003c\u003e(VALID_RECURRING_SCHEDULES);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        invalidRecurringSchedules.add(new JsonAdaptedRecurringSchedule(INVALID_RECURRING_SCHEDULE));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, invalidRecurringSchedules,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidGoals_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                        INVALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Goals.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullGoals_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                null, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Goals.class.getSimpleName());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidMedicalHistory_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES, VALID_GOALS,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        INVALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d MedicalHistory.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_nullMedicalHistory_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                VALID_GOALS, null, VALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MedicalHistory.class.getSimpleName());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, INVALID_LOCATION, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                VALID_GOALS, VALID_MEDICAL_HISTORY, null, VALID_ONETIMESCHEDULES, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void toModelType_invalidOneTimeSchedules_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedOneTimeSchedule\u003e invalidOneTimeSchedules \u003d new ArrayList\u003c\u003e(VALID_ONETIMESCHEDULES);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        invalidOneTimeSchedules.add(new JsonAdaptedOneTimeSchedule(INVALID_ONETIMESCHEDULE));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, invalidOneTimeSchedules, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_RECURRING_SCHEDULES,","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                        VALID_GOALS, VALID_MEDICAL_HISTORY, VALID_LOCATION, VALID_ONETIMESCHEDULES, invalidTags);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"-":168,"deseansoh":1}}]
