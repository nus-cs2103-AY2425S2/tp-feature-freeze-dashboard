[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# EasyWeds Developer Guide","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Table of Contents**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"glennliew"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"glennliew"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"glennliew"},"content":"- [Design](#design)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"glennliew"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"glennliew"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"glennliew"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"glennliew"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"glennliew"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"glennliew"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"glennliew"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"glennliew"},"content":"  - [Creating a wedding](#1-creating-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"glennliew"},"content":"  - [Deleting a wedding](#2-deleting-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"glennliew"},"content":"  - [Tagging the contact to the wedding](#3-tagging-a-contact-to-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"glennliew"},"content":"  - [Untagging the contact from the wedding](#4-untagging-a-contact-from-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"glennliew"},"content":"  - [Adding a task to the wedding](#5-adding-a-task-to-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"glennliew"},"content":"  - [Deleting a task from the wedding](#6-deleting-a-task-from-a-wedding)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"glennliew"},"content":"  - [[Proposed] Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"glennliew"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"glennliew"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"glennliew"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"glennliew"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"glennliew"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"glennliew"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"glennliew"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"glennliew"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"glennliew"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"glennliew"},"content":"  - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"glennliew"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"glennliew"},"content":"- [Appendix: Effort](#appendix-effort)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"glennliew"},"content":"- [Appendix: Planned Enhancements](#appendix-planned-enhancements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"EasyWeds is a brownfield software project based off [AddressBook Level-3](https://se-education.org/addressbook-level3/) ([UG](https://se-education.org/addressbook-level3/UserGuide.html), [DG](https://se-education.org/addressbook-level3/DeveloperGuide.html)),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"taken under the CS2103T Software Engineering module held by the School of Computing at the National University of Singapore.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"Java dependencies:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"- JavaFX for GUI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"- JUnit5 for testing","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"Documentation dependencies:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"- Markbind for rendering the website","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"- PlantUML for creating UML diagrams","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"and edit diagrams.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"glennliew"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"glennliew"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"glennliew"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"glennliew"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"glennliew"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"glennliew"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"glennliew"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"glennliew"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"glennliew"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"glennliew"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"GrassHeadd"},"content":"**API** : [`Ui.java`](https://github.com/AY2425S2-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java))  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"GrassHeadd"},"content":"[Ui is the interface for the UI component. It provides the functionality of the Ui]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"glennliew"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"glennliew"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"glennliew"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"glennliew"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"GrassHeadd"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java))  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"GrassHeadd"},"content":"[Logic is the interface for the Logic component. It shows you methods for executing commands and accessing the application\u0027s data for display in the UI.]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"glennliew"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"glennliew"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"GrassHeadd"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"GrassHeadd"},"content":"[Model is the interface for the model component. It encapsulates the application\u0027s data structures and business logic, providing methods to access and modify contact, wedding and task data.]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"glennliew"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Wedding` objects (which are contained in a `UniqueWeddingList`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"glennliew"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"glennliew"},"content":"- stores the currently \u0027selected\u0027 `Wedding` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cWedding\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"glennliew"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"glennliew"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"glennliew"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"glennliew"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"glennliew"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"glennliew"},"content":"This section describes some noteworthy details on how certain features are or will be implemented.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"glennliew"},"content":"### 1. Creating a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"glennliew"},"content":"The `AddWeddingCommand` allows users to create new wedding events within the application. This is essential for wedding planners to keep track of different wedding events they are managing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"glennliew"},"content":"#### Implementation Details ####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"glennliew"},"content":"The `AddWeddingCommand` is implemented by extending the base `Command` class. It uses prefixes such as `n/`, `d/`, and `l/`, specifying required data fields for weddingName, weddingDate, and weddingLocation respectively. Once the data fields are filled, a new Wedding is added. It implements the following operations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Checks the current address book state by calling `model.hasWedding(toAdd)`, and throws a `CommandException` if a duplicate Wedding is found","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"glennliew"},"content":"* `addWedding(wedding)` — Adds the Wedding to the wedding list. This operation is exposed in the Model interface as `Model#addWedding(Wedding)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario of how the addition mechanism behaves when the user tries to add a wedding to the wedding list:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"glennliew"},"content":"Step 1. The user launches the application, with some contacts already added to the address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"glennliew"},"content":"Step 2. The user executes `addWedding` command with specific details (e.g., `addWedding n/John and Jane\u0027s Wedding d/20-Feb-2026 l/Marina Bay Sands`). The `AddWeddingCommand` will then call `execute()`, which checks whether there is a duplicate Wedding in the wedding list before calling `addWedding(Wedding)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"glennliew"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"glennliew"},"content":"Note: If the weddingName, weddingDate, or weddingLocation provided is invalid, a `CommandException` will be thrown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"glennliew"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram ####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/createWedding.puml\" alt\u003d\"createWedding\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"glennliew"},"content":"**Aspect: How wedding IDs are generated:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Automatically generate sequential wedding IDs (W1, W2, etc.) in the Wedding model.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"glennliew"},"content":"* Pros: Easier to implement and more intuitive for users.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"glennliew"},"content":"* Cons: May have issues with ID conflicts if weddings are deleted and re-added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"glennliew"},"content":"Alternative 2: Allow users to specify their own wedding IDs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"glennliew"},"content":"* Pros: More flexibility for users to create meaningful identifiers.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"glennliew"},"content":"* Cons: More complex to implement and potential for user errors with duplicate IDs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"glennliew"},"content":"### 2. Deleting a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"glennliew"},"content":"The `DeleteWeddingCommand` allows users to remove wedding events from the application. This is particularly useful for removing completed or canceled weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"glennliew"},"content":"#### Implementation Details ####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"glennliew"},"content":"The `DeleteWeddingCommand` is implemented by extending the base `Command` class. It takes a `WeddingId` parameter to identify which wedding to delete. It implements the following operations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Retrieves the wedding to delete using `model.getWeddingById(weddingId)`, throwing a `CommandException` if no matching wedding is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"glennliew"},"content":"* `deleteWedding(weddingToDelete)` — Removes the Wedding from the wedding list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"glennliew"},"content":"* `removeTagFromAllContacts(tag)` — Removes the wedding tag from all contacts that were associated with the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario of how the deletion mechanism behaves:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"glennliew"},"content":"Step 1. The user executes `deleteWedding W1` to delete the wedding with ID W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"glennliew"},"content":"Step 2. The `DeleteWeddingCommand` finds the wedding with ID W1 in the model and removes it.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"glennliew"},"content":"Step 3. The command also finds all contacts tagged with W1 and removes that tag from them, ensuring data consistency.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram #####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/deleteWedding.puml\" alt\u003d\"deleteWedding\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"glennliew"},"content":"**Aspect: How wedding deletion affects associated data:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Remove wedding tags from all contacts when a wedding is deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"glennliew"},"content":"* Pros: Maintains data consistency and prevents orphaned tags.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"glennliew"},"content":"* Cons: Slightly more complex implementation and slower deletion operation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"glennliew"},"content":"Alternative 2: Keep the tags on contacts even when a wedding is deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"glennliew"},"content":"* Pros: Simpler implementation and faster deletion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"glennliew"},"content":"* Cons: Results in orphaned tags that reference non-existent weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"glennliew"},"content":"### 3. Tagging a contact to a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"glennliew"},"content":"The `TagCommand` allows users to associate contacts with specific wedding events. This is essential for keeping track of which vendors and clients are associated with each wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"glennliew"},"content":"#### Implementation Details #####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"glennliew"},"content":"The `TagCommand` is implemented by extending the base `Command` class. It takes an `Index` parameter to identify the contact and a `WeddingId` to identify the wedding. It implements the following operations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Retrieves the person at the specified index using `model.getFilteredPersonList()` and checks if the wedding exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"glennliew"},"content":"* `tagPerson(person, tag)` — Associates the contact with the wedding by adding a tag.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"glennliew"},"content":"Step 1. The user executes `tag 1 W1` to tag the first contact in the list to wedding W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"glennliew"},"content":"Step 2. The `TagCommand` retrieves the person at index 1 and creates a new tag with wedding ID W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"glennliew"},"content":"Step 3. The command adds this tag to the person\u0027s tag set, creating an association between the contact and the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/tagContact.puml\" alt\u003d\"tagContact\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"glennliew"},"content":"**Aspect: How wedding-contact associations are stored:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Store the association as tags on Person objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"glennliew"},"content":"* Pros: Leverages existing tag functionality, making implementation simpler.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"glennliew"},"content":"* Cons: Limited metadata can be stored about the association.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"glennliew"},"content":"Alternative 2: Create a separate association entity that links persons and weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"glennliew"},"content":"* Pros: Could store additional information about the role in the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"glennliew"},"content":"* Cons: More complex to implement and manage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"glennliew"},"content":"### 4. Untagging a contact from a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"glennliew"},"content":"The `UntagCommand` allows users to remove associations between contacts and weddings. This is useful when a vendor or client is no longer involved with a specific wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"glennliew"},"content":"#### Implementation Details #####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"glennliew"},"content":"The `UntagCommand` is implemented similarly to the `TagCommand`. It takes an `Index` parameter to identify the contact and a `WeddingId` to identify the wedding to untag. It implements:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Retrieves the person and checks if they have the specified wedding tag.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"glennliew"},"content":"* `untagPerson(person, tag)` — Removes the wedding tag from the contact.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"glennliew"},"content":"Step 1. The user executes `untag 1 W1` to remove the association between the first contact and wedding W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"glennliew"},"content":"Step 2. The `UntagCommand` checks if the person has the W1 tag and removes it if present.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/untagContact.puml\" alt\u003d\"untagContact\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"glennliew"},"content":"**Aspect: Handling non-existent tags in untag command:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Check if the tag exists before attempting to remove it.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"glennliew"},"content":"* Pros: Provides clear error messages to users.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"glennliew"},"content":"* Cons: Requires additional checks in the command execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"glennliew"},"content":"Alternative 2: Silently ignore untag requests for non-existent tags.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"glennliew"},"content":"* Pros: Simpler implementation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"glennliew"},"content":"* Cons: Less informative for users, who might not realize the tag didn\u0027t exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"glennliew"},"content":"### 5. Adding a task to a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"glennliew"},"content":"The `AddTaskCommand` allows users to add tasks to specific weddings. This helps wedding planners track what needs to be done for each wedding event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"glennliew"},"content":"#### Implementation Details ####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"glennliew"},"content":"The `AddTaskCommand` extends the base `Command` class. It uses prefixes such as `w/` and `desc/` to specify the wedding ID and task description. It implements:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Finds the wedding using `model.getFilteredWeddingList()` and a predicate.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"glennliew"},"content":"* `addTask(task)` — Adds the new task to the wedding\u0027s task list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"glennliew"},"content":"Step 1. The user executes addTask `w/W1 desc/Book photographer` to add a new task to wedding W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"glennliew"},"content":"Step 2. The `AddTaskCommand` finds wedding W1 and creates a new `WeddingTask` with the description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"glennliew"},"content":"Step 3. The command adds this task to the wedding\u0027s task list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/addTask.puml\" alt\u003d\"addTask\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"glennliew"},"content":"**Aspect: Where tasks are stored:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Store tasks directly in the Wedding object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"glennliew"},"content":"* Pros: Simplifies implementation and maintains clear ownership.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"glennliew"},"content":"* Cons: Limited flexibility in sharing tasks across weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"glennliew"},"content":"Alternative 2: Store tasks separately with references to weddings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"glennliew"},"content":"* Pros: More flexible for potential future features like shared tasks.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"glennliew"},"content":"* Cons: More complex data management.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"glennliew"},"content":"### 6. Deleting a task from a wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"glennliew"},"content":"The `DeleteTaskCommand` allows users to remove tasks from weddings. This is useful for removing completed tasks or tasks that are no longer relevant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"glennliew"},"content":"#### Implementation Details ####","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"glennliew"},"content":"The `DeleteTaskCommand` extends the base `Command` class. It uses prefixes `w/` for weddingID and `i/` for the task index. It implements:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"glennliew"},"content":"* `execute(Model)` — Finds the wedding and validates the task index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"glennliew"},"content":"* `removeTask(index)` — Removes the task at the specified index from the wedding\u0027s task list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"glennliew"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"glennliew"},"content":"Step 1. The user executes `deleteTask w/W1 i/2` to delete the second task from wedding W1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"glennliew"},"content":"Step 2. The `DeleteTaskCommand` finds wedding W1 and removes the task at index 2 from its task list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"glennliew"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"glennliew"},"content":"\u003cpuml src\u003d\"diagrams/deleteTask.puml\" alt\u003d\"deleteTask\" /\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"glennliew"},"content":"#### Design considerations:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"glennliew"},"content":"**Aspect: How task indices are handled:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"glennliew"},"content":"**Alternative 1 (current choice):** Use 1-based indexing for users, converting to 0-based for internal operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"glennliew"},"content":"* Pros: More intuitive for users who typically count from 1.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"glennliew"},"content":"* Cons: Requires index conversion in command execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"glennliew"},"content":"Alternative 2: Use 0-based indexing throughout the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"glennliew"},"content":"* Pros: Consistent with internal array indexing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"glennliew"},"content":"* Cons: Less intuitive for non-technical users.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"glennliew"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"glennliew"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"glennliew"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"glennliew"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"glennliew"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"glennliew"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"glennliew"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"glennliew"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"glennliew"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"## **Documentation, Logging, Testing, Configuration, Dev-Ops**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"glennliew"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"glennliew"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"glennliew"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"glennliew"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"glennliew"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"glennliew"},"content":"- has a need to manage a significant number of contacts and weddings","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"glennliew"},"content":"- freelance wedding planners who need to manage contacts for multiple weddings","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"glennliew"},"content":"- wishes to centralise the management of contacts and weddings into one spot","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"glennliew"},"content":"- can type fast","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"glennliew"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"glennliew"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts and weddings faster than a typical mouse/GUI driven app","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                    | So that I can…​                                                |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"glennliew"},"content":"| -------- | ------- | --------------------------------------------------------------- | -------------------------------------------------------------- |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"| `* * *`  | user    | add a client/vendor with their details                          | keep track of my contacts                                      |","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"| `* * *`  | user    | delete a client/vendor\u0027s record                                 | remove outdated or irrelevant clients/vendors                  |","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"| `* * *`  | user    | retrieve a client/vendor\u0027s record                               | view the details of my clients/vendors                         |","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"| `* * *`  | user    | update a client/vendor\u0027s detail                                 | have the most updated information for my contacts              |","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"| `* * *`  | user    | search for a client/vendor by name or wedding date              | quickly find the relevant personnel for a wedding              |","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"| `* * *`  | user    | add a wedding event with its details                            | keep track of the weddings that I am handling                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"| `* * *`  | user    | view a list of wedding event with its details                   | view the details of the wedding                                |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"jamesberyl"},"content":"| `* * *`  | user    | view a list of wedding events sorted in ascending order by date | have a clear picture of the upcoming weddings                  |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"| `* * *`  | user    | delete a wedding event                                          | remove outdated or irrelevant weddings                         |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"| `* * *`  | user    | edit a wedding event                                            | update the details of the wedding with the correct information |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"| `* * *`  | user    | add a task to a wedding event                                   | keep track of the tasks that need to be done for the wedding   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"| `* * *`  | user    | delete a task from a wedding event                              | remove outdated or irrelevant tasks                            |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"jamesberyl"},"content":"| `* * *`  | user    | tag vendors to specific weddings                                | know which vendors are handling which events                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"| `* *`    | user    | view a summary of all my tasks related to a wedding             | have a clear picture of what needs to be done                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"| `* *`    | user    | filter according to roles / event                               | have a clear picture of who I need to liaise with for          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"| `*`      | user    | mark and unmark my tasks related to a wedding                   | know which are the tasks that I have yet to complete           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"| `*`      | user    | have a confirmation message before I add very similar contacts  | avoid accidentally adding duplicate contacts                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is `EasyWeds` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"**Use case: UC01 - Add a Contact**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"1.  User inputs the command to add contact","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"2.  EasyWeds adds the new contact","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"glennliew"},"content":"- 2a. The field(s) is/are empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"glennliew"},"content":"- 2b. The name of the new contact matches an existing contact in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"glennliew"},"content":"  - 2b2. User has to confirm whether to add this duplicate contact.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"**Use case: UC02 - List Contacts**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"1.  User inputs the command to list contacts","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"2.  EasyWeds shows the list of contacts","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"glennliew"},"content":"- 2a. There are no contacts to show.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"**Use case: UC03 - Delete a Contact**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"1.  User requests to list contacts (UC02)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of contacts","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific contact","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"4.  EasyWeds deletes the contact","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"glennliew"},"content":"- 3a. The contact does not exist in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"glennliew"},"content":"  - 3a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"**Use case: UC04 - Edit a Contact**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"1.  User requests to list contacts (UC02)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of contacts","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"3.  User requests to edit a specific contact in the list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"4.  EasyWeds edits the contact","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"glennliew"},"content":"- 3a. The contact does not exist in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"glennliew"},"content":"  - 3a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"glennliew"},"content":"- 3b. The edited name is a duplicate of an existing name in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"glennliew"},"content":"  - 3b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"**Use case: UC05 - Search Contacts by Name**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"1.  User requests search for contacts that have a certain \u0027keyword\u0027 in their name","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of contacts that matches the \u0027keyword\u0027","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"glennliew"},"content":"- 2a. No matching contact is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"**Use case: UC06 - Search Contacts by Role**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"1.  User requests search for contacts that have a certain \u0027keyword\u0027 in their role","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of contacts that matches the \u0027keyword\u0027","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"glennliew"},"content":"- 2a. No matching contact is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"**Use case: UC07 - Add a Wedding Event**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"1.  User inputs the command to add wedding","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"2.  EasyWeds adds the new wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"glennliew"},"content":"- 2a. The field(s) is/are empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"glennliew"},"content":"- 2b. All the fields in the input match an existing wedding event in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"**Use case: UC08 - View Wedding Events by Wedding Date**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"1.  User inputs the command to list wedding events sorted from earliest to latest date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"2.  EasyWeds shows the list of wedding events","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"glennliew"},"content":"- 2a. There are no wedding events to show.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"**Use case: UC09 - View Wedding Events by Wedding ID**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"1.  User inputs the command to list wedding events sorted by wedding ID","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"2.  EasyWeds shows the list of wedding events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"glennliew"},"content":"- 2a. There are no wedding events to show.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"**Use case: UC10 - Delete a Wedding Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"1.  User requests to list wedding events (UC08)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of wedding events","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific wedding event","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"4.  EasyWeds deletes the wedding event","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"glennliew"},"content":"- 3a. The wedding event does not exist in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"glennliew"},"content":"  - 3a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"**Use case: UC11 - Edit a Wedding Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"1.  User requests to list wedding events (UC08)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of wedding events","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"3.  User requests to edit a specific wedding event in the list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"4.  EasyWeds edits the wedding event","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"glennliew"},"content":"- 3a. The wedding event does not exist in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"glennliew"},"content":"  - 3a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"glennliew"},"content":"- 3b. The edited wedding name, date and location is a duplicate of an existing wedding event in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"glennliew"},"content":"  - 3b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"**Use case: UC12 - Tag Contacts to Wedding Events**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"1.  User inputs the command to tag a contact to a wedding event","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"2.  EasyWeds adds the tag for the wedding event to the contact specified","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"glennliew"},"content":"- 2a. The contact does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"glennliew"},"content":"- 2b. The wedding does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"**Use case: UC13 - Untag Contact from Wedding Event**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"1.  User inputs the command to untag a contact from a wedding event","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"2.  EasyWeds removes the tag for the wedding event from the contact specified","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"glennliew"},"content":"- 2a. The contact does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"    Use case ends","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"glennliew"},"content":"- 2b. The wedding does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"glennliew"},"content":"- 2c. The wedding specified is not tagged to this contact.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"glennliew"},"content":"  - 2c1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"**Use case: UC14 - Filter Contacts**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"1.  User requests filtering contacts that are tagged to a certain wedding event","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"2.  EasyWeds shows a list of contacts that contain the tag","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"glennliew"},"content":"- 2a. The wedding does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"glennliew"},"content":"- 2b. There are no contacts tagged to the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"**Use case: UC15 - Add a Task to a Wedding**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"1.  User inputs the command to add a task to a specific wedding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"2.  EasyWeds adds the task to the wedding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"glennliew"},"content":"- 2a. The wedding does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"**Use case: UC16 - Delete a Task from a Wedding**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"1.  User inputs the command to delete a task from a specific wedding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"2.  EasyWeds deletes the task from the wedding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"glennliew"},"content":"- 2a. The wedding does not exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"glennliew"},"content":"  - 2a1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"glennliew"},"content":"- 2b. The task index is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"glennliew"},"content":"  - 2b1. An error message is shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"-"},"content":"**Use case: UC17 - Clear Contact Book**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"1.  User inputs the command to clear the contact book","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"2.  EasyWeds asks for confirmation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"3.  User confirms the action","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"4.  EasyWeds clears all contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"glennliew"},"content":"- 2a. The contact book is already empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"glennliew"},"content":"  - 2a1. EasyWeds clears the contact book without asking for confirmation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"glennliew"},"content":"- 3a. User does not confirm the action.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"glennliew"},"content":"  - 3a1. The clear operation is cancelled.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"4.  The system should respond to user commands within 2 seconds, even under peak load conditions.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"5.  The application should handle errors gracefully, providing clear and helpful error messages.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"6.  Adhere to a consistent coding style with comprehensive inline documentation and JavaDocs.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"7.  User interface should be intuitive and accessible","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"8.  Candidate data should be stored securely, ensuring unauthorized users cannot access sensitive information.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"9.  Data should not be lost between each session and be persistently stored.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"glennliew"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"glennliew"},"content":"- **MSS**: Main Success Scenario which describes the most straightforward interaction for a given use case, which assumes nothing goes wrong","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"glennliew"},"content":"- **JSON**: JavaScript Object Notation, a lightweight data-interchange format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"glennliew"},"content":"- **Client**: A person who hires a wedding planner to organise their wedding. Clients in EasyWeds are individuals or couples whose event details are tracked within the system","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"glennliew"},"content":"- **Vendor**: A service provider involved in the wedding, such as florists, caterers, photographers. Vendors in EasyWeds are linked to events and are categorised based on their service types","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"glennliew"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"glennliew"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"glennliew"},"content":"1. _{ This is a non-exhaustive list​ }_","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"glennliew"},"content":"   1. Close the app. Delete the file named `addressbook.json` in the same folder as the jar file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"glennliew"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"glennliew"},"content":"      Expected: The app starts with an empty address book. The status message shows that the data file is missing or corrupted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"glennliew"},"content":"   1. Close the app. Replace the file named `addressbook.json` with a new file containing the string `invalid data`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"glennliew"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"glennliew"},"content":"      Expected: The app starts with an empty address book. The status message shows that the data file is missing or corrupted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"glennliew"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":2,"GrassHeadd":6,"-":638,"glennliew":404}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# EasyWeds User Guide","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## About EasyWeds","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gengyudong"},"content":"EasyWeds is a **desktop app designed for freelance wedding planners juggling multiple weddings**. You can use EasyWeds to streamline planning by centralising vendor and client information and keeping every wedding detail organised. If you are adept at typing, EasyWeds empowers you to access and update your planning data swiftly.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiyanminoo"},"content":"Here are  EasyWeds\u0027 main features:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"#### Enhanced Contact Management","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Contact Tracking: Add phone numbers, emails, addresses, and roles","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiyanminoo"},"content":"  Contact Linking: Tag your clients and your vendors to wedding events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  Advanced Filters: Filter by name or role","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"#### Comprehensive Wedding Management","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  Wedding Tracking: Add date and location","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiyanminoo"},"content":"  Task Management: Add to-do tasks for each wedding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiyanminoo"},"content":"  Advanced Sorting: Sort by wedding ID or date","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gengyudong"},"content":"- [Terminology](#terminology)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gengyudong"},"content":"- [Layout](#layout)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"- [Features](#features)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    - [Getting Help](#getting-help)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        - [Viewing help](#viewing-help-help)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    - [Managing Contacts](#managing-contacts)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        - [Adding a Person](#adding-a-person-add)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        - [Editing a Person](#editing-a-person-edit)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        - [Deleting a Person](#deleting-a-person-delete)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        - [Locating Persons by name or role](#locating-persons-by-name-or-role-find)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    - [Managing Wedding Events](#managing-wedding-events)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        - [Adding a Wedding Event](#adding-a-wedding-event-addwedding)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        - [Editing a Wedding Event](#editing-a-wedding-event-editwedding)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        - [Deleting a Wedding Event](#deleting-a-wedding-event-deletewedding)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiyanminoo"},"content":"        - [Sorting all Wedding Events by increasing Wedding ID](#sorting-all-wedding-events-by-increasing-wedding-id-sortwid)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiyanminoo"},"content":"        - [Sorting all Wedding Events by earliest date](#sorting-all-wedding-events-by-earliest-date-sortwdate)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    - [Managing Wedding Tasks](#managing-wedding-tasks)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        - [Adding a Wedding Task](#adding-a-wedding-task-addtask)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        - [Listing all Wedding Tasks](#listing-all-wedding-tasks-listtask)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        - [Marking a Wedding Task](#marking-a-wedding-task-mark)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        - [Unmarking a Wedding Task](#unmarking-a-wedding-task-unmark)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        - [Deleting a Wedding Task](#deleting-a-wedding-task-deletetask)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    - [Managing Tags](#managing-tags)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        - [Tagging a person to a Wedding](#tagging-a-person-to-a-wedding-tag)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        - [Untagging a person](#untagging-a-person-untag)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        - [Filtering contacts](#filtering-contacts-filter)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    - [Data Management](#data-management)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        - [Listing all Persons and Wedding Events](#listing-all-persons-and-wedding-events-list)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        - [Clearing all entries](#clearing-all-entries-clear)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        - [Saving the data](#saving-the-data)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"glennliew"},"content":"    - [Exiting the program](#exiting-the-program)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        - [Exiting the program](#exiting-the-program-exit)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gengyudong"},"content":"## Quick Start","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiyanminoo"},"content":"1. Ensure you have [Java `17`](https://www.oracle.com/java/technologies/downloads/#java17) or above installed in your computer.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiyanminoo"},"content":"   Choose the installation package depending on your device: [Mac](https://se-education.org/guides/tutorials/javaInstallationMac.html), [Windows](https://se-education.org/guides/tutorials/javaInstallationWindows.html) or [Linux](https://se-education.org/guides/tutorials/javaInstallationLinux.html)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiyanminoo"},"content":"    \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiyanminoo"},"content":"    ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiyanminoo"},"content":"    **Tip:** Refer to this [Tutorial](https://se-education.org/guides/tutorials/javaInstallation.html) for help with installing Java.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiyanminoo"},"content":"    \u003c/box\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103T-F12-2/tp/releases/tag/v1.5).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your EasyWeds.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar easyweds.jar` command to run the application.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiyanminoo"},"content":"5. A Graphic User Interface (GUI) similar to the screenshot below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ![Ui](images/sampleData.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    * `list`: Lists all persons and wedding events.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 r/Photographer`: Adds a contact named `John Doe` to the contact book in EasyWeds.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    * `delete 3`: Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    * `clear`: Deletes entire contact book (both persons and wedding events).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    * `exit`: Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"**Tip:** Refer to [FAQ](#faq) for help on setting up.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"glennliew"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"## Terminology","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"In this guide, the following terms are used:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"- **Contact(s)** and **Person(s)**: These terms are used interchangeably and refer to the individuals (vendors \u0026 clients) stored in EasyWeds.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"- **Contact book**: Refer to the list of contacts and events in EasyWeds.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gengyudong"},"content":"- **JSON**: A data format used to store information regarding the contacts and weddings for EasyWeds.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gengyudong"},"content":"- **Graphic User Interface**: A graphic user interface (GUI) is a visual way for users to interact with a software application, using elements such as buttons, windows, icons, and menus.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gengyudong"},"content":"- **Command Line Interface**: A command line interface (CLI) is a text-based interface that allows users to interact with a program by typing commands into a terminal or console.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"glennliew"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"glennliew"},"content":"## Layout","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"glennliew"},"content":"When you launch EasyWeds, EasyWeds appears on your screen as a Graphical User Interface, or GUI. Let’s look at the layout of the different components of EasyWeds.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"glennliew"},"content":"EasyWed’s GUI consists of a single main window, as well as the Help Window. The main window consists of four components:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"glennliew"},"content":"1. Command Input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"glennliew"},"content":"1. Output Box","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"glennliew"},"content":"1. List of Persons","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"glennliew"},"content":"1. List of Weddings","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"glennliew"},"content":"The following picture of the main window shows the four components, numbered accordingly:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"glennliew"},"content":"![Ui](images/sampleData2.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"glennliew"},"content":"Besides the main window, EasyWeds also has the Help Window. It is not part of the main GUI and is only shown after a [Help Command](#viewing-help-help) is run.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"note\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Press \u0027TAB\u0027 to auto-complete the command you are typing in the command box.\u003cbr\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"  e.g. if you type `ad` and press \u0027TAB\u0027, it will auto-complete to `add` and if you press it again it will auto-complete to `addWedding` and if you press it again it will auto-complete to `addTask`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"GrassHeadd"},"content":"  e.g `edit 1 n/NAME [r/ROLE]` can be used as `edit 1 n/John Doe r/Florist` or as `edit 1 n/John Doe`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"## Getting Help","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" alt\u003d\"help message\" width\u003d\"200\"\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Tip:** Click on the \"Go To User Guide\" button and the User Guide will be opened in your default browser.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Managing Contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Adding a Person: `add`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Adds a person to the contact book.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"* Input values must be provided for all fields.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"weiyanminoo"},"content":"* Your name will appear in the contact book exactly as you entered it.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"weiyanminoo"},"content":"* Only alphanumeric latin characters are allowed for the name field.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"weiyanminoo"},"content":"* A person with the [same name or a similar name](#duplicate-section) to an existing person in the contacts will be flagged out. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"* If any of the fields\u0027 content include any of the delimiters `n/`, `p/`, `e/`, `a/`, `r/`, include a `\\` before the delimiter.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    * e.g. Name of a contact is \"John p/Doe\": `add n/John p/Doe p/98765432 ...` will not be accepted due to a duplicate delimiter `p/`. Instead, use `add n/John \\p/Doe p/98765432 ...` to denote that \"/p\" is indeed part of the name.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    * This applies to all fields.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gengyudong"},"content":"add n/John Doe p/87654321 e/johnd@example.com a/John street, block 123, #01-01 r/Photographer","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gengyudong"},"content":"This command adds a person named `John Doe` with the phone number `87654321`, email `johnd@example.com`, address `John street, block 123, #01-01`, and role `Photographer`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gengyudong"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gengyudong"},"content":"add n/Betsy Crowe r/Florist e/betsycrowe@example.com a/Blk 321 Clementi West St 1 p/12345678","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gengyudong"},"content":"This command adds a person named `Betsy Crowe` with the role `Florist`, email `betsycrowe@example.com`, address `Blk 321 Clementi West St 1`, and phone number `12345678`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"### Editing a Person: `edit`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Edits an existing person in the contact book.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/ROLE]`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"weiyanminoo"},"content":"* Similar to adding a person, there will be a check for [duplicates](#duplicate-section) for the person\u0027s name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"gengyudong"},"content":"edit 1 p/91234567 e/johndoe@example.com","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"gengyudong"},"content":"This command edits the phone number and the email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"gengyudong"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"gengyudong"},"content":"edit 2 n/Betsy Crower r/photographer","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"gengyudong"},"content":"This command edits the name and the role of the 2nd person to be `Betsy Crower` and `photographer` respectively.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Deleting a Person: `delete`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"Deletes the specified person from the contact book.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"gengyudong"},"content":"list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"gengyudong"},"content":"delete 2","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"gengyudong"},"content":"This command deletes the 2nd person in the contact book.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"gengyudong"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"gengyudong"},"content":"find Betsy","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"gengyudong"},"content":"``` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"gengyudong"},"content":"delete 1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gengyudong"},"content":"This command deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gengyudong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Locating Persons by name or role: `find`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"Finds persons whose names or roles contain any of the given keywords.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"* Either the name or the role will be searched.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"gengyudong"},"content":"find John","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"gengyudong"},"content":"``` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"gengyudong"},"content":"This command returns `john` and `John Doe`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"gengyudong"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"gengyudong"},"content":"find florist","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"gengyudong"},"content":"``` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"gengyudong"},"content":"This command returns all Persons with the role of `florist`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"gengyudong"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"gengyudong"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"gengyudong"},"content":"find alex david","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"gengyudong"},"content":"``` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"gengyudong"},"content":"This command returns `Alex Yeoh`, `David Li` (Refer to the image below) ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Tip:** In order for the \u0027find\u0027 by role command to be effective, ensure that you use the same noun for the same type of role (e.g. please do not call one person \u0027florist\u0027 and another person \u0027flower maker\u0027 and instead choose to give the same role to both)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Managing Wedding Events","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Adding a Wedding Event: `addWedding`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"Adds a wedding event to the contact book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"Format: `addWedding n/NAME d/DATE l/LOCATION`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* Input values must be provided for all fields.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"gengyudong"},"content":"* If any of the fields\u0027 content includes any of the delimiters `n/`, `d/`, `l/`, include a `\\` before the delimiter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"gengyudong"},"content":"    * E.g. Name of a wedding is \"John \u0026 Jane d/ Doe\u0027s Wedding\": `addWedding n/John \u0026 Jane d/ Doe\u0027s Wedding d/20-May-2026 l/Marina Bay Sands` will not be accepted due to a duplicate delimiter `/d`. Instead, use `addWedding n/John \u0026 Jane \\d/ Doe\u0027s Wedding d/20-May-2026 l/Marina Bay Sands` to denote that `d/` is indeed part of the name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"    * This applies to all fields.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"* Format of the date is flexible, e.g. \"dd-MMM-yyyy\", \"dd/MM/yyyy\", \"dd.MM.yyyy\", \"dd MMM yyyy\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"gengyudong"},"content":"* If using `MMM` format, only the first letter should be capitalized (e.g. Jan, Feb).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"* Date must be a valid date and in the future.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"GrassHeadd"},"content":"* `addWedding n/John \u0026 Jane\u0027s Wedding d/20-May-2026 l/Marina Bay Sands`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"GrassHeadd"},"content":"    * This command adds a wedding event named `John \u0026 Jane\u0027s Wedding` on `20-May-2026` at `Marina Bay Sands`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"### Editing a Wedding Event: `editWedding`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"weiyanminoo"},"content":"Edits an existing wedding event in the contact book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"Format: `editWedding WEDDING_ID [n/NAME] [d/DATE] [l/LOCATION]`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"* Edits the wedding event at the specified `WEDDING_ID`.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"gengyudong"},"content":"* Details of the wedding you want to edit cannot be the same as what is already in the wedding.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"GrassHeadd"},"content":"* `editWedding W1 d/20-Jun-2026 l/Marina Bay Sands`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"GrassHeadd"},"content":"    * This command edits the date and location of the 1st wedding event to be `20-Jun-2026` and `Marina Bay Sands` respectively.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"* `editWedding W2 n/John \u0026 Jane\u0027s Wedding`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"    * This command edits the name of the 2nd wedding event to be `John \u0026 Jane\u0027s Wedding`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Deleting a Wedding Event: `deleteWedding`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"Deletes the specified wedding event from the contact book.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"Format: `deleteWedding WEDDING_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"* Deletes the wedding event with the specified `WEDDING_ID`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"gengyudong"},"content":"* Tags of contacts associated with the deleted wedding event will be removed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"* `deleteWedding W2`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"gengyudong"},"content":"    * This command deletes the wedding event with ID `W2` (Refer to the image below)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"    ![result for \u0027deleteWedding W2\u0027](images/DeleteWedding.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Sorting all Wedding Events by increasing Wedding ID: `sortWID`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"Shows a list of all wedding events in the contact book sorted by increasing Wedding ID.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"Format: `sortWID`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Sorting all Wedding Events by earliest Date: `sortWDate`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"Shows a list of all wedding events in the contact book sorted by date, from earliest to latest.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"Format: `sortWDate`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"## Managing Wedding Tasks","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Adding a Wedding Task: `addTask`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"Adds a new task to a specified wedding event.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"Format: `addTask w/WEDDING_ID desc/TASK_DESCRIPTION`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"* Adds a new task to a wedding event specified by `WEDDING_ID`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"* `addTask w/W1 desc/Book florist`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"    * This command adds a new task `Book Florist` to the wedding event `W1`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Listing all Wedding Tasks: `listTask`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"Shows a list of all tasks of a specified wedding event in the output box.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"Format: `listTask w/WEDDING_ID`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"GrassHeadd"},"content":"* `listTask w/W2`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"gengyudong"},"content":"    * This command shows a list of all tasks of the wedding event `W2` (Refer to the image below)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"    ![result for \u0027listTask w/W2\u0027](images/listTaskW2.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Marking a Wedding Task: `mark`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"Marks a specified task of a specified wedding event as completed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"Format: `mark w/WEDDING_ID i/TASK_INDEX`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"* Marks the task at the specified `INDEX` from the wedding event specified by `WEDDING_ID` as completed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* `WEDDING_ID` is the unique identifier of the wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"* `mark w/W1 i/1`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"gengyudong"},"content":"    * This command marks the Task at index 1 of the wedding event `W1` as completed (Refer to the image below)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"    ![result for \u0027mark w/W1 i/1\u0027](images/MarkTask.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"gengyudong"},"content":"    ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Unmarking a Wedding Task: `unmark`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"Marks a specified task of a specified wedding as not completed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"Format: `unmark w/WEDDING_ID i/TASK_INDEX`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"* Marks the task at the specified `INDEX` from the wedding event specified by `WEDDING_ID` as not completed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"* `WEDDING_ID` is the unique identifier of the wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"* `unmark w/W1 i/1`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"    * This command marks the task at index 1 of the wedding event `W1` as not completed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"### Deleting a Wedding Task: `deleteTask`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"Deletes the specified task from a specified wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"Format: `deleteTask w/WEDDING_ID i/TASK_INDEX`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"* Deletes the task at the specified `INDEX` from the wedding task list of the wedding event specified by `WEDDING_ID`.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"* `WEDDING_ID` is the unique identifier of the wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"* `deleteTask w/W1 i/1`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"    * This command deletes a task at index 1 from the wedding task list of the wedding event `W1`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"## Managing Tags","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"### Tagging a Person to a Wedding: `tag`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"Tags an existing contact to an existing wedding event.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"Format: `tag INDEX WEDDING_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"* Tags the person at the specified `INDEX` to the wedding event specified by `WEDDING_ID`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"* `WEDDING_ID` is the unique identifier of the wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"* Contacts can only be tagged to wedding events that are already existing in the system.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"* Each contact can be tagged to more than one wedding event.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"weiyanminoo"},"content":"tag 1 W1 ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"weiyanminoo"},"content":"This command tags the first person to the wedding event `W1`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"weiyanminoo"},"content":"tag 1 W2","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"weiyanminoo"},"content":"This command tags the first person to the wedding event `W2`. Now the first person will be tagged to both `W1` and `W2`. (Refer to the image below)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"![result for \u0027tag person\u0027](images/TagPerson.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"### Untagging a Person: `untag`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"Untags an existing contact from an existing wedding event.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"Format: `untag INDEX WEDDING_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"* Untags the person at the specified `INDEX` from the wedding event specified by `WEDDING_ID`.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"* `WEDDING_ID` is the unique identifier of the wedding event.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"* Contacts can only be untagged from wedding events that are already existing in the system.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"weiyanminoo"},"content":"untag 1 W1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"weiyanminoo"},"content":"This command untags the first person from the wedding event `W1`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Filtering Contacts: `filter`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"Filters contacts related to a specified wedding ID.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"Format: `filter WEDDING_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"* Filters contacts that are tagged with the specified `WEDDING_ID`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"* Wedding ID is the unique identifier of the wedding event.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"* Only the wedding event corresponding to the `WEDDING_ID` will be displayed in the list of weddings.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"weiyanminoo"},"content":"filter W2","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"weiyanminoo"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"weiyanminoo"},"content":"This command displays the details of `W2` and returns the contacts that are tagged to `W2`. (Refer to the image below)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"weiyanminoo"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"![result for \u0027filter W2\u0027](images/filterW2.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"gengyudong"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"## Data Management","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Listing all Persons and Wedding Events: `list`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"Shows a list of all persons and weddings in the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"weiyanminoo"},"content":"**Tip:** Remember to use `list` to show the full contact book again after you used `find` and `filter`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"Clears all entries from the contact book.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"weiyanminoo"},"content":"**Tip:** In order to prevent you from accidentally clearing the contact book (which is unrecoverable), we have included a [Confirmation Check](#confirmation-section) similar to adding duplicates.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"EasyWeds data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"EasyWeds data are saved automatically as a JSON file: `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"**Caution:** \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"As much as you are able to manually edit the details of contacts and wedding events, you are strongly advised against editing the weddingIDs in the data file as this will very likely cause the application to behave in unexpected ways.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"gengyudong"},"content":"If your changes to the data file make its format invalid, EasyWeds will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"gengyudong"},"content":"Furthermore, certain edits can cause EasyWeds to behave in unexpected ways (e.g. if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"## Exiting the program","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"[Back to content page](#table-of-contents)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"glennliew"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"\"How do I know if I have Java installed or what version I have?\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"* Open a terminal (for macOS/Linux) or command prompt (for Windows).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"* Type in this command: ```java -version```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"* If you have Java installed, you will see a version number that looks like this: \"17.0.1\" (or higher).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"* If you don’t have Java installed or see a version lower than 17, download the latest JDK from [here](https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"jamesberyl"},"content":"\"What is the home folder and where do I copy the file?\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"* You can choose any folder to be the home folder where you want to store your EasyWeds files.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"* Choose a folder location which you can find easily afterwards (e.g. Documents).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"* Copy (or move) the downloaded .jar file into this folder, which will contain your EasyWeds data as you use the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"\"How do I open a command terminal and navigate to a folder?\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"On Windows:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"Press Win + R, type `cmd`, and press Enter to open the command prompt.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"Use the `cd` command to navigate to your folder. For example, if your file is on the Desktop, type:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"cd Desktop","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"On MacOS:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"Press Command + Space, type `Terminal`, and press Enter.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"Use the `cd` command to navigate to your folder. For example, if your file is on the Desktop, type:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"cd ~/Desktop","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"On Linux:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"Open your terminal (typically found in Applications \u003e Utilities or by pressing Ctrl + Alt + T).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"Use the `cd` command to navigate to your folder. For example, if your file is in your home directory, type:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"cd ~","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"\"Why do I get an error when I try to run the command java -jar easyweds.jar.\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"Ensure that you have typed in the exact name of the .jar file. If the file was renamed, use that name in the command instead:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"java -jar \"\u003cname_of_file\u003e.jar\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"\"How do I transfer my data to another Computer?\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"gengyudong"},"content":"Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous EasyWeds home folder.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"weiyanminoo"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"weiyanminoo"},"content":"\u003cdiv id\u003d\"duplicate-section\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"weiyanminoo"},"content":"\"What is considered as a duplicate name?\"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"weiyanminoo"},"content":"* If there is a Person with the name `Alex Yeoh` in the contacts (Refer to the image below), the following will be flagged out:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"weiyanminoo"},"content":"    * `Alex Yeoh` (exactly the same)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"weiyanminoo"},"content":"    * `alex\u003cspace\u003eyeoh` (no capitalization)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"weiyanminoo"},"content":"    * `Alex\u003cspace\u003e\u003cspace\u003eYeoh` (extra spacing)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"weiyanminoo"},"content":"    * `Alex\u003cspace\u003e\u003cspace\u003eyeoh` (combination of the 2)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"weiyanminoo"},"content":"* In such a case, the potential duplicate is spotted and the User will need to confirm if he wants to add this Person or make a change to the input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"weiyanminoo"},"content":"![result for \u0027add duplicate alex\u0027](images/AddDuplicateName.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"weiyanminoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"weiyanminoo"},"content":"--- {.border-secondary}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"weiyanminoo"},"content":"\u003cdiv id\u003d\"confirmation-section\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"important\" seamless icon\u003d\":question:\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"weiyanminoo"},"content":"\"How do I make a confirmation or cancellation of my previous command?\"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"weiyanminoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"weiyanminoo"},"content":"\u003cbox type\u003d\"success\" seamless\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"weiyanminoo"},"content":"Once you receive the warning message, you can choose to either:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"weiyanminoo"},"content":"1. Confirm - Use \u0027Ctrl / Command + A\u0027 to select the whole input text and press \u0027Delete / Backspace\u0027 to clear the input box. Afterwards, input the command `y` which will add this Person into the contact list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"weiyanminoo"},"content":"2. Cancel - Edit the current input in your input box. Once no duplicates are detected, when you press \u0027Enter\u0027, this Person will be added into the contact list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"weiyanminoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"--- {.border-primary .thick}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"| Action                           | Format, Examples                                                                                                                                               |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"| **Add Person**                   | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 r/Photographer` |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"| **Edit Person**                  | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/ROLE]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                          |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"| **Delete Person**                | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                            |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"| **Find Person**                  | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find James Jake`                                                                                                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"GrassHeadd"},"content":"| **Add Wedding**                  | `addWedding n/NAME d/DATE l/LOCATION` \u003cbr\u003e e.g., `addWedding n/John and Jane\u0027s Wedding d/20-Feb-2026 l/Marina Bay Sands`                                       |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"GrassHeadd"},"content":"| **Edit Wedding**                 | `editWedding WEDDING_ID [n/NAME] [d/DATE] [l/LOCATION]` \u003cbr\u003e e.g., `editWedding W1 d/20-Feb-2026 l/Marina Bay Sands`                                           |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"| **Delete Wedding**               | `deleteWedding WEDDING_ID` \u003cbr\u003e e.g., `deleteWedding W1`                                                                                                       |","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"| **Sort Wedding List by Id**      | `sortWID`                                                                                                                                                      |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"| **Sort Wedding List by Date**    | `sortWDate`                                                                                                                                                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"| **Add Task to a Wedding**        | `addTask w/WEDDING_ID desc/TASK_DESCRIPTION` \u003cbr\u003e e.g., `addTask w/W1 desc/Book florist`                                                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"| **List Tasks of a Wedding**      | `listTask w/WEDDING_ID` \u003cbr\u003e e.g., `listTask w/W1`                                                                                                             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"| **Mark Task as Complete**        | `mark w/WEDDING_ID i/TASK_INDEX` \u003cbr\u003e e.g., `mark w/W1 i/1`                                                                                                    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"| **Mark Task as Incomplete**      | `unmark w/WEDDING_ID i/TASK_INDEX` \u003cbr\u003e e.g., `unmark w/W1 i/1`                                                                                                |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"| **Delete Task in a Wedding**     | `deleteTask w/WEDDING_ID i/TASK_INDEX` \u003cbr\u003e e.g., `deleteTask w/W1 i/1`                                                                                        |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"| **Tag Wedding to a Person**      | `tag INDEX WEDDING_ID` \u003cbr\u003e e.g., `tag 1 W1`                                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"| **Untag Person from a Wedding**  | `untag INDEX WEDDING_ID` \u003cbr\u003e e.g., `untag 1 W1`                                                                                                               |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"| **Filter Details of a Wedding**  | `filter WEDDING_ID` \u003cbr\u003e e.g., `filter W4`                                                                                                                     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"| **List All Contacts \u0026 Weddings** | `list`                                                                                                                                                         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"| **Clear All Content**            | `clear`                                                                                                                                                        |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"| **Exit EasyWeds**                | `exit`                                                                                                                                                         |                                                                                                                                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"GrassHeadd":8,"weiyanminoo":138,"-":663,"glennliew":27,"gengyudong":83}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"Person *--\u003e Role","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":21}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiyanminoo"},"content":"import seedu.address.logic.commands.ConfirmCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiyanminoo"},"content":"import seedu.address.logic.commands.ConfirmationManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiyanminoo"},"content":"        String trimmedCommand \u003d commandText.trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiyanminoo"},"content":"        if (!trimmedCommand.equalsIgnoreCase(ConfirmCommand.COMMAND_WORD)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiyanminoo"},"content":"            ConfirmationManager.getInstance().clearPendingCommand(); // Clear any pending \u0027y\u0027 confirmation.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiyanminoo"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public ObservableList\u003cWedding\u003e getFilteredWeddingList() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getFilteredWeddingList();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":7,"-":94}},{"path":"src/main/java/seedu/address/logic/commands/AddWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Adds a Wedding event to the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddWeddingCommand extends Command {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addWedding\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a wedding to the contact book. \"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"n/NAME d/DATE l/LOCATION\\n\"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiyanminoo"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/John \u0026 Jane\u0027s Wedding d/20-Feb-2026 l/Grand Ballroom\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New wedding added: %1$s\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_WEDDING \u003d \"This wedding already exists in the contact book\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Wedding toAdd;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates an AddWeddingCommand to add the specified {@code Wedding}.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddWeddingCommand(Wedding wedding) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        toAdd \u003d wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (model.hasWedding(toAdd)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_WEDDING);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.addWedding(toAdd);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof AddWeddingCommand","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddWeddingCommand) other).toAdd));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a Wedding event from the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteWeddingCommand extends Command {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deleteWedding\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a wedding from the contact book. \"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: WEDDING_ID\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" W1\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted wedding: %1$s\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final WeddingId weddingId;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a DeleteWeddingCommand to delete the specified {@code Wedding}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteWeddingCommand(WeddingId weddingId) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(weddingId);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.weddingId \u003d weddingId;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Executes the command and deletes the specified {@code Wedding}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} representing the result of the deletion.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws CommandException If the specified {@code Wedding} does not exist.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Wedding weddingToDelete \u003d model.getWeddingById(weddingId);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (weddingToDelete \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WEDDING_NOT_FOUND, weddingId.value));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiyanminoo"},"content":"        boolean isFiltered \u003d model.getFilteredWeddingList().size() \u003c model.getAddressBook().getWeddingList().size();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.deleteWedding(weddingToDelete);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Tag tagToDelete \u003d new Tag(weddingId);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.removeTagFromAllContacts(tagToDelete);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiyanminoo"},"content":"        // If a filter was applied, show blank lists, otherwise, show full lists.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiyanminoo"},"content":"        if (isFiltered) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            model.updateFilteredWeddingList(w -\u003e false);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiyanminoo"},"content":"        } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiyanminoo"},"content":"            model.updateFilteredWeddingList(w -\u003e true);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiyanminoo"},"content":"            model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiyanminoo"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, weddingToDelete));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if both DeleteWeddingCommands have the same wedding id.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param other The other object to compare to.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteWeddingCommand","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 weddingId.equals(((DeleteWeddingCommand) other).weddingId));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":8,"-":75}},{"path":"src/main/java/seedu/address/logic/commands/EditWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_WEDDINGS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingDate;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingLocation;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingName;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Edits the details of an existing wedding event in the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditWeddingCommand extends Command {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"editWedding\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Edits the details of the wedding identified by the weddingId used in the displayed wedding list. \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: WEDDING_ID\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"            + \"[n/NAME]\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"            + \"[d/DATE]\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"            + \"[l/LOCATION]\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \" Example: \" + COMMAND_WORD + \" W1\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \" n/John \u0026 Jane\u0027s Wedding\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiyanminoo"},"content":"            + \" d/20-Feb-2026\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \" l/Grand Ballroom\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_WEDDING_SUCCESS \u003d \"Edited Wedding: %1$s\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_WEDDING \u003d \"This wedding already exists in the contact book.\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_CHANGES \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"No changes detected. Your input is exactly the same as the existing values.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final WeddingId index;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final EditWeddingDescriptor editWeddingDescriptor;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an EditWeddingCommand to edit the wedding with the specified {@code weddingId}.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param weddingId The ID of the wedding to edit.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param editWeddingDescriptor Details of the wedding fields to edit.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditWeddingCommand(WeddingId weddingId, EditWeddingDescriptor editWeddingDescriptor) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(weddingId);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(editWeddingDescriptor);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.index \u003d weddingId;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.editWeddingDescriptor \u003d new EditWeddingDescriptor(editWeddingDescriptor);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cWedding\u003e lastShownList \u003d model.getFilteredWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Find the wedding by its ID","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Wedding weddingToEdit \u003d lastShownList.stream()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .filter(wedding -\u003e wedding.getWeddingId().equals(index))","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .orElseThrow(() -\u003e new CommandException(String.format(Messages.MESSAGE_WEDDING_NOT_FOUND,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        index.value)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Wedding editedWedding \u003d createEditedWedding(weddingToEdit, editWeddingDescriptor);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // If no effective changes are made, signal that the input is exactly the same.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (weddingToEdit.equals(editedWedding)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_NO_CHANGES);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!weddingToEdit.equals(editedWedding) \u0026\u0026 model.hasWedding(editedWedding)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_WEDDING);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setWedding(weddingToEdit, editedWedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredWeddingList(PREDICATE_SHOW_ALL_WEDDINGS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_WEDDING_SUCCESS, Messages.format(editedWedding)));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Wedding} with the details of {@code weddingToEdit}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editWeddingDescriptor}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Wedding createEditedWedding(Wedding weddingToEdit, EditWeddingDescriptor editWeddingDescriptor) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert weddingToEdit !\u003d null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        WeddingId originalId \u003d weddingToEdit.getWeddingId();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        WeddingDate updatedDate \u003d editWeddingDescriptor.getWeddingDate().orElse(weddingToEdit.getWeddingDate());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        WeddingLocation updatedLocation \u003d editWeddingDescriptor.getWeddingLocation()","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                            .orElse(weddingToEdit.getWeddingLocation());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        WeddingName updatedName \u003d editWeddingDescriptor.getWeddingName().orElse(weddingToEdit.getWeddingName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Wedding editedWedding \u003d new Wedding(","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                originalId,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                updatedName,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                updatedDate,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                updatedLocation,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                weddingToEdit.isRestored()","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        weddingToEdit.getTasks().forEach(editedWedding::addTask);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return editedWedding;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditWeddingCommand)) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditWeddingCommand e \u003d (EditWeddingCommand) other;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editWeddingDescriptor.equals(e.editWeddingDescriptor);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return String.format(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \"EditWeddingCommand{index\u003d%s, editWeddingDescriptor\u003d%s}\",","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                index.toString(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                editWeddingDescriptor.toString());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the wedding with. Each non-empty field value will replace the","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the wedding.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditWeddingDescriptor {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private WeddingName weddingName;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private WeddingDate weddingDate;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private WeddingLocation weddingLocation;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditWeddingDescriptor() {}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditWeddingDescriptor(EditWeddingDescriptor toCopy) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setWeddingName(toCopy.weddingName);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setWeddingDate(toCopy.weddingDate);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setWeddingLocation(toCopy.weddingLocation);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(weddingName, weddingDate, weddingLocation);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setWeddingName(WeddingName weddingName) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.weddingName \u003d weddingName;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cWeddingName\u003e getWeddingName() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(weddingName);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setWeddingDate(WeddingDate weddingDate) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.weddingDate \u003d weddingDate;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cWeddingDate\u003e getWeddingDate() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(weddingDate);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setWeddingLocation(WeddingLocation weddingLocation) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.weddingLocation \u003d weddingLocation;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cWeddingLocation\u003e getWeddingLocation() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(weddingLocation);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditWeddingDescriptor)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            EditWeddingDescriptor e \u003d (EditWeddingDescriptor) other;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Objects.equals(weddingName, e.weddingName)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(weddingDate, e.weddingDate)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(weddingLocation, e.weddingLocation);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return String.format(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \"EditWeddingDescriptor{weddingName\u003dOptional[%s], weddingDate\u003dOptional[%s], \"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                            + \"weddingLocation\u003dOptional[%s]}\",","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    weddingName \u003d\u003d null ? \"\" : weddingName.toString(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    weddingDate \u003d\u003d null ? \"\" : weddingDate.toString(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    weddingLocation \u003d\u003d null ? \"\" : weddingLocation.toString());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"jamesberyl":3,"weiyanminoo":1,"-":210}},{"path":"src/main/java/seedu/address/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagMatchesPredicate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Untags a person identified by their index in the filtered person list by removing a WeddingId tag.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Removes the wedding tag from the person identified by the index number.\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) WEDDING_ID\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 W12345\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNTAG_PERSON_SUCCESS \u003d \"Untagged Person: %1$s from WeddingId: %2$s\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSON_NOT_TAGGED \u003d \"This person is not tagged with the specified wedding id.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final WeddingId weddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code UntagCommand}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param targetIndex of the person in the filtered person list to untag.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param weddingId   the wedding id tag to remove from the person.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public UntagCommand(Index targetIndex, WeddingId weddingId) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.weddingId \u003d weddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToUntag \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Tag tag \u003d new Tag(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Check if person has the specified tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!personToUntag.getTags().contains(tag)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_TAGGED);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Untag the person","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.untagPerson(personToUntag, tag);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiyanminoo"},"content":"        boolean isFiltered \u003d model.getFilteredWeddingList().size() \u003c model.getAddressBook().getWeddingList().size();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiyanminoo"},"content":"        if (isFiltered) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiyanminoo"},"content":"            model.updateFilteredPersonList(new TagMatchesPredicate(weddingId)); // reapply the filter.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiyanminoo"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiyanminoo"},"content":"            model.updateFilteredPersonList(p -\u003e true); // Reset the filtered lists to show all.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiyanminoo"},"content":"            model.updateFilteredWeddingList(w -\u003e true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiyanminoo"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_UNTAG_PERSON_SUCCESS,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                personToUntag.getName().fullName, weddingId));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof UntagCommand)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UntagCommand otherUntagCommand \u003d (UntagCommand) other;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherUntagCommand.targetIndex)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 weddingId.equals(otherUntagCommand.weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .add(\"weddingId\", weddingId)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":8,"-":93}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_ID;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddTaskCommand object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEDDING_ID, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEDDING_ID, PREFIX_TASK_DESCRIPTION)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(AddTaskCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(argMultimap.getValue(PREFIX_WEDDING_ID).get());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String description \u003d argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new AddTaskCommand(weddingId, description);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":35}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis updated version supports escaping prefixes. For instance, if a user inputs:","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GrassHeadd"},"content":" * \u003cbr\u003e\u003ccode\u003eaddWedding n/John \u0026 Jane \\d/ Wedding d/30-Apr-2026 l/MBS\u003c/code\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * \u003cbr\u003ethen the \"\\d/\" will be treated as literal text (producing \"d/\") and will not be interpreted as a new prefix.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix} and it is not escaped by a backslash.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns -1 if no such occurrence can be found.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * E.g. if {@code argsString} \u003d \"e/hi p/900\" and {@code prefix} \u003d \"p/\", this method returns 5.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int index \u003d fromIndex;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int prefixIndex \u003d argsString.indexOf(\" \" + prefix, index);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            if (prefixIndex \u003d\u003d -1) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                return -1;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            // Check if the delimiter is escaped (i.e. preceded by a backslash)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (prefixIndex - 1 \u003e\u003d 0 \u0026\u0026 argsString.charAt(prefixIndex - 1) \u003d\u003d \u0027\\\\\u0027) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                // Skip this occurrence and continue searching","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                index \u003d prefixIndex + 1;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return prefixIndex + 1; // +1 to account for the leading whitespace","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This method also removes the backslash used to escape a delimiter so that \"\\d/\" becomes \"d/\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Remove a backslash that precedes a letter followed by a slash (e.g., \\d/ -\u003e d/)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        value \u003d value.replaceAll(\"\\\\\\\\(?\u003d[A-Za-z]/)\", \"\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":1,"-":163}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_ID;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(DeleteTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(argMultimap.getValue(PREFIX_WEDDING_ID).get());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String indexStr \u003d argMultimap.getValue(PREFIX_TASK_INDEX).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            taskIndex \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Task index must be an integer.\");","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new DeleteTaskCommand(weddingId, taskIndex);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/EditWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_DATE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_LOCATION;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditWeddingCommand;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditWeddingCommand.EditWeddingDescriptor;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditWeddingCommand object.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditWeddingCommandParser implements Parser\u003cEditWeddingCommand\u003e {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditWeddingCommand","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns an EditWeddingCommand object for execution.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                args, PREFIX_WEDDING_NAME, PREFIX_WEDDING_DATE, PREFIX_WEDDING_LOCATION);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        WeddingId index;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseWeddingId(argMultimap.getPreamble());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GrassHeadd"},"content":"            if (pe.getMessage().equals(WeddingId.MESSAGE_NEGATIVE_CONSTRAINTS)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GrassHeadd"},"content":"                throw pe;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GrassHeadd"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    EditWeddingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                PREFIX_WEDDING_NAME, PREFIX_WEDDING_DATE, PREFIX_WEDDING_LOCATION);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditWeddingDescriptor editWeddingDescriptor \u003d new EditWeddingDescriptor();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_WEDDING_NAME).isPresent()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editWeddingDescriptor.setWeddingName(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    ParserUtil.parseWeddingName(argMultimap.getValue(PREFIX_WEDDING_NAME).get()));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_WEDDING_DATE).isPresent()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editWeddingDescriptor.setWeddingDate(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    ParserUtil.parseWeddingDate(argMultimap.getValue(PREFIX_WEDDING_DATE).get()));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_WEDDING_LOCATION).isPresent()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editWeddingDescriptor.setWeddingLocation(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    ParserUtil.parseWeddingLocation(argMultimap.getValue(PREFIX_WEDDING_LOCATION).get()));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editWeddingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditWeddingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditWeddingCommand(index, editWeddingDescriptor);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":3,"-":66}},{"path":"src/main/java/seedu/address/logic/parser/ListTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_ID;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new ListTaskCommand object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListTaskCommandParser implements Parser\u003cListTaskCommand\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public ListTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEDDING_ID);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEDDING_ID)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(ListTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(argMultimap.getValue(PREFIX_WEDDING_ID).get());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new ListTaskCommand(weddingId);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_ID;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new MarkTaskCommand object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(MarkTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(argMultimap.getValue(PREFIX_WEDDING_ID).get());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String indexStr \u003d argMultimap.getValue(PREFIX_TASK_INDEX).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            taskIndex \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Task index must be a positive integer.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new MarkTaskCommand(weddingId, taskIndex);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingDate;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingLocation;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingName;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String ROLE} into an {@code Role}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(role);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @param tag the input wedding id string.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @param validWeddingIds a set of wedding ids that exist in the system.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid or the wedding id does not exist.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag, Set\u003cWeddingId\u003e validWeddingIds) throws ParseException {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        WeddingId weddingId;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            weddingId \u003d parseWeddingId(trimmedTag);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(e.getMessage(), e);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!validWeddingIds.contains(weddingId)) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(\"The wedding id \" + trimmedTag + \" does not exist in the system.\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new Tag(weddingId);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param tags the collection of wedding id strings.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param validWeddingIds a set of wedding ids that exist in the system.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws ParseException if any of the given tags is invalid or does not exist.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags, Set\u003cWeddingId\u003e validWeddingIds) throws ParseException {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (String tagString : tags) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagString, validWeddingIds));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Parses a {@code String weddingId} into a {@code WeddingId}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code weddingId} is invalid.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static WeddingId parseWeddingId(String weddingId) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(weddingId);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String trimmedId \u003d weddingId.trim();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"GrassHeadd"},"content":"        // Check for negative wedding IDs first","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"GrassHeadd"},"content":"        if (trimmedId.matches(\"^W-\\\\d+$\") || trimmedId.equals(\"W0\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"GrassHeadd"},"content":"            throw new ParseException(WeddingId.MESSAGE_NEGATIVE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!WeddingId.isValidWeddingId(trimmedId)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new ParseException(WeddingId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new WeddingId(trimmedId);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Parses a {@code String weddingName} into a {@code WeddingName}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code weddingName} is invalid.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static WeddingName parseWeddingName(String weddingName) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        requireNonNull(weddingName);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String trimmedName \u003d weddingName.trim();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (!WeddingName.isValidName(trimmedName)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new ParseException(WeddingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return new WeddingName(trimmedName);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Parses a {@code String weddingDate} into a {@code WeddingDate}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code weddingDate} is invalid.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public static WeddingDate parseWeddingDate(String weddingDate) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        requireNonNull(weddingDate);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d weddingDate.trim();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!WeddingDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new ParseException(WeddingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return new WeddingDate(trimmedDate);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Parses a {@code String weddingLocation} into a {@code WeddingLocation}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code weddingLocation} is invalid.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static WeddingLocation parseWeddingLocation(String weddingLocation) throws ParseException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        requireNonNull(weddingLocation);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String trimmedLocation \u003d weddingLocation.trim();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!WeddingLocation.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new ParseException(WeddingLocation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return new WeddingLocation(trimmedLocation);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":5,"-":216}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEDDING_ID;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEDDING_ID, PREFIX_TASK_INDEX)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(UnmarkTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(argMultimap.getValue(PREFIX_WEDDING_ID).get());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String indexStr \u003d argMultimap.getValue(PREFIX_TASK_INDEX).get();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        int taskIndex;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            taskIndex \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Task index must be a positive integer.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new UnmarkTaskCommand(weddingId, taskIndex);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new UntagCommand object","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UntagCommandParser implements Parser\u003cUntagCommand\u003e {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the UntagCommand","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns an UntagCommand object for execution.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UntagCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String[] parts \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index \u003d ParserUtil.parseIndex(parts[0]);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"        WeddingId weddingId \u003d ParserUtil.parseWeddingId(parts[1]);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new UntagCommand(index, weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"jamesberyl":1,"-":35}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gengyudong"},"content":"    public static boolean isValidEmail(String email) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gengyudong"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gengyudong"},"content":"            throw new NullPointerException(\"Email cannot be null\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gengyudong"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gengyudong"},"content":"        String regex \u003d \"^[a-zA-Z0-9](?!.*\\\\.\\\\.)([a-zA-Z0-9+_.-]*[a-zA-Z0-9])?\" // local-part","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gengyudong"},"content":"                + \"@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\\\.)+\" // domain part","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gengyudong"},"content":"                + \"[a-zA-Z]{2,}$\"; // final TLD (e.g. .com, .sg)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gengyudong"},"content":"        return email.matches(regex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":77,"gengyudong":8}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GrassHeadd"},"content":"            \"Names should only contain alphanumeric characters, spaces, the \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GrassHeadd"},"content":"                    + \"special characters `/`, `-`, `\u0027`, `,`, `@` and it should not be blank\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GrassHeadd"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ,\u0027/@-]*\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":3,"-":64}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the contact book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"glennliew"},"content":"            \"Phone numbers should only contain numbers, a space, and can include a \u0027+\u0027 prefix for country code.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"glennliew"},"content":"            + \"The number should have at least 3 digits and maximum 32 characters total (including \u0027+\u0027 and spaces).\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"glennliew"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(\\\\+\\\\d[\\\\d ]*|[\\\\d ]+)$\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"glennliew"},"content":"        if (test.length() \u003e 32) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"glennliew"},"content":"            return false;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"glennliew"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"glennliew"},"content":"        // Check if it has at least 3 digits","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"glennliew"},"content":"        int digitCount \u003d 0;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"glennliew"},"content":"        int spaceCount \u003d 0;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"glennliew"},"content":"        for (int i \u003d 0; i \u003c test.length(); i++) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"glennliew"},"content":"            if (Character.isDigit(test.charAt(i))) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"glennliew"},"content":"                digitCount++;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"glennliew"},"content":"            } else if (test.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"glennliew"},"content":"                spaceCount++;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"glennliew"},"content":"                if (spaceCount \u003e 1) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"glennliew"},"content":"                    return false; // More than one space is not allowed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"glennliew"},"content":"                }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"glennliew"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"glennliew"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"glennliew"},"content":"        if (digitCount \u003c 3) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"glennliew"},"content":"            return false;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"glennliew"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":58,"glennliew":26}},{"path":"src/main/java/seedu/address/model/wedding/WeddingDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Wedding\u0027s date","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class WeddingDate {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"\"\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Wedding date should be in a valid date format:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gengyudong"},"content":"            E.g. \"dd-Mmm-yyyy\", \"dd/MM/yyyy\", \"dd.MM.yyyy\", \"dd MMM yyyy\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gengyudong"},"content":"            If using \"MMM\" format, only the first letter should be capitalized.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"\"\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DATE_OUT_OF_RANGE \u003d \"Wedding date should be a valid date\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DATE_IN_PAST \u003d \"Wedding date should not be in the past\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d DMY (Day-Month-Year) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd.MM.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd.MMM.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMMM-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMMM-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd MMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/MMMM/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd.MMMM.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d MMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddMMMMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d MDY (Month-Day-Year) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM.dd.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM dd yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMddyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM/dd/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMdyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM-dd-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM dd yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMMyyyydd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM dd, yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM d, yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d YMD (Year-Month-Day) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.MM.dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MM dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMdd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MMM-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.MMM.dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MMM/dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMM dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMMdd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MMMM-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMMM dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMMdd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMMM dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMMM d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMMMdd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.MMMM.dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMMMd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d YDM (Year-Day-Month) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-dd-MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/dd/MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.dd.MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy dd MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyddMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-dd-MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/dd/MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy dd MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyddMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-dd-MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy dd MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyddMMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy d MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy d MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d DYM (Day-Year-Month) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-yyyy-MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/yyyy/MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd.yyyy.MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd yyyy MM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddyyyyMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-yyyy-MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd/yyyy/MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd yyyy MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddyyyyMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd-yyyy-MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dd yyyy MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"ddyyyyMMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d yyyy MMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d yyyy MMMM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d MYD (Month-Year-Day) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM-yyyy-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM/yyyy/dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM.yyyy.dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MM yyyy dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMyyyydd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM-yyyy-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMM yyyy dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMyyyydd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM-yyyy-dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMM yyyy dd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"MMMMyyyydd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            // \u003d\u003d\u003d Partial Formats: Single Day / Month (No Padding) \u003d\u003d\u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            // Day-Month-Year","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d.M.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d M yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dMyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            // Month-Day-Year","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M.d.yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M d yyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"Mdyyyy\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            // Year-Month-Day","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.M.d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy M d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            // Year-Day-Month","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-d-M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/d/M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy.d.M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy d M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyydM\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            // Month-Year-Day","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M-yyyy-d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M/yyyy/d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M.yyyy.d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"M yyyy d\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"Myyyyd\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            // Day-Year-Month","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d-yyyy-M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d/yyyy/M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d.yyyy.M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"d yyyy M\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"dyyyyM\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    );","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Constructs a {@code WeddingDate}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @param date A valid date string.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public WeddingDate(String date) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        this.value \u003d formatDate(date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid wedding date in one of the accepted formats.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public static boolean isValidDate(String test) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(test, formatter);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gengyudong"},"content":"                String formattedDate \u003d parsedDate.format(formatter);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gengyudong"},"content":"                if (!formattedDate.equals(test)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gengyudong"},"content":"                    throw new ParseException(MESSAGE_DATE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gengyudong"},"content":"                }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"                if (parsedDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    throw new ParseException(MESSAGE_DATE_IN_PAST);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                if (e.getMessage().contains(\"Invalid value\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    throw new ParseException(MESSAGE_DATE_OUT_OF_RANGE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"                // Continue to the next format to check for validity","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Formats the given date string to the standard output format.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private static String formatDate(String date) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gengyudong"},"content":"                String formattedDate \u003d parsedDate.format(formatter);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gengyudong"},"content":"                if (!formattedDate.equals(date)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"gengyudong"},"content":"                    throw new ParseException(MESSAGE_DATE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"gengyudong"},"content":"                }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return parsedDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"                // Continue to the next format","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"                || (other instanceof WeddingDate","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((WeddingDate) other).value));","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"-":262,"gengyudong":10}},{"path":"src/main/java/seedu/address/model/wedding/WeddingId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Wedding\u0027s ID in the system.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format: \"W\" followed by a positive integer (e.g., \"W1\", \"W42\").","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeddingId(String)}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class WeddingId {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Wedding ID must start with \u0027W\u0027 followed by one or more digits, e.g. \u0027W1\u0027, \u0027W15\u0027.\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GrassHeadd"},"content":"    public static final String MESSAGE_NEGATIVE_CONSTRAINTS \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GrassHeadd"},"content":"            \"Wedding ID cannot be negative or zero. Please use a positive number.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"^W\\\\d+$\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final int valueInt;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code WeddingId}.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param id A valid ID string (e.g., \"W10\").","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public WeddingId(String id) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidWeddingId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.value \u003d id;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.valueInt \u003d Integer.parseInt(id.substring(1)); // Parse the numeric part only","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid wedding ID.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidWeddingId(String test) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof WeddingId","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((WeddingId) other).value));","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":3,"-":55}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Desktop;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.net.URI;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2425s2-cs2103t-f12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gengyudong"},"content":"            if (Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Desktop.getDesktop().browse(new URI(USER_GUIDE_URL));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gengyudong"},"content":"            } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gengyudong"},"content":"                // Fallback for Linux","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gengyudong"},"content":"                Runtime.getRuntime().exec(new String[]{\"xdg-open\", USER_GUIDE_URL});","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gengyudong"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to open the URL: \" + e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"-":105,"gengyudong":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Clears any pending command from the ConfirmationManager before each test,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * ensuring that each test runs with a clean state.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ConfirmationManager.getInstance().clearPendingCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_returnsConfirmationResult() throws Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Execute the add command in normal mode.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d addCommand.execute(modelStub);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Instead of expecting an exception, a duplicate warning with confirmation required is expected.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(AddCommand.MESSAGE_DUPLICATE_PERSON, commandResult.getFeedbackToUser());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.isRequiresConfirmation());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Tests that the equals method returns true for commands with the same values and false otherwise.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Tests that the toString method outputs the expected string representation, including the force flag.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \", isForced\u003dfalse}\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Tests that createForceCommand returns a new AddCommand instance with the force flag set to true.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void createForceCommand_returnsForcedVersion() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddCommand normalCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ForceableCommand forcedCommand \u003d normalCommand.createForceCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // The forced command should be an instance of AddCommand with isForce true.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(forcedCommand instanceof AddCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddCommand forcedAddCommand \u003d (AddCommand) forcedCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddCommand expected \u003d new AddCommand(validPerson, true);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, forcedAddCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Tests that the overloaded constructor sets the force flag correctly.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void constructor_forceMode_setsForceFlag() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddCommand forcedCommand \u003d new AddCommand(validPerson, true);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Verify that forcedCommand equals a new forced command created via createForceCommand.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(validPerson, true), forcedCommand);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"    public void execute_duplicatePersonWithDifferentCase_returnsConfirmationResult() throws Exception {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"        Person original \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"        // Create a duplicate with a different case in the name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"        Person duplicate \u003d new PersonBuilder().withName(\"alice\").build();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"        AddCommand addCommand \u003d new AddCommand(duplicate);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(original);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"        CommandResult commandResult \u003d addCommand.execute(modelStub);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"        // Since duplicate detection is case-insensitive, the command should trigger duplicate logic.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(AddCommand.MESSAGE_DUPLICATE_PERSON, commandResult.getFeedbackToUser());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"        assertTrue(commandResult.isRequiresConfirmation());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * A Model stub that always accepts the person being added.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"jamesberyl":15,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingLocation;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingName;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingTask;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains unit tests for {@code AddTaskCommand}.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final WeddingId VALID_WEDDING_ID \u003d new WeddingId(\"W1\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final WeddingId INVALID_WEDDING_ID \u003d new WeddingId(\"W999\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Book photographer\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validWeddingId_success() throws Exception {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Stub with a wedding that has ID W1 (and 1 initial task for variety)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelStubWithOneWedding modelStub \u003d new ModelStubWithOneWedding(VALID_WEDDING_ID, 1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(VALID_WEDDING_ID, VALID_DESCRIPTION);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(modelStub);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // The new task is \"[ ] Book photographer\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(AddTaskCommand.MESSAGE_SUCCESS, VALID_WEDDING_ID.value,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \"[ ] \" + VALID_DESCRIPTION);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Check the wedding\u0027s task list has 2 tasks now","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d modelStub.internalWeddingList.get(0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(2, wedding.getTasks().size());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(VALID_DESCRIPTION, wedding.getTasks().get(1).getDescription());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_weddingNotFound_throwsCommandException() throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Stub with wedding ID \u003d W2, not W999","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStubWithOneWedding modelStub \u003d new ModelStubWithOneWedding(new WeddingId(\"W2\"), 1);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(INVALID_WEDDING_ID, VALID_DESCRIPTION);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_WEDDING_NOT_FOUND, INVALID_WEDDING_ID.value), () -\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                        command.execute(modelStub));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(VALID_WEDDING_ID, VALID_DESCRIPTION);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddTaskCommand addTaskCommandA \u003d new AddTaskCommand(VALID_WEDDING_ID, \"Task A\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddTaskCommand addTaskCommandB \u003d new AddTaskCommand(VALID_WEDDING_ID, \"Task B\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddTaskCommand addTaskCommandC \u003d new AddTaskCommand(new WeddingId(\"W2\"), \"Task A\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same object -\u003e true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addTaskCommandA.equals(addTaskCommandA));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same values -\u003e true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddTaskCommand addTaskCommandACopy \u003d new AddTaskCommand(VALID_WEDDING_ID, \"Task A\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addTaskCommandA.equals(addTaskCommandACopy));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different types -\u003e false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addTaskCommandA.equals(1));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // null -\u003e false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addTaskCommandA.equals(null));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different description -\u003e false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(addTaskCommandA.equals(addTaskCommandB));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different wedding ID -\u003e false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(addTaskCommandA.equals(addTaskCommandC));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A Model stub that contains exactly one wedding with the given ID and","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * an initial number of tasks.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private class ModelStubWithOneWedding extends ModelStub {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cWedding\u003e internalWeddingList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ModelStubWithOneWedding(WeddingId weddingId, int initialTaskCount) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Wedding singleWedding \u003d new Wedding(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    weddingId,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    new WeddingName(\"Stub Wedding\"),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    new WeddingDate(\"01-Jan-2026\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    new WeddingLocation(\"Stub Location\"),","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    true","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            // Add some tasks","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d initialTaskCount; i++) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                singleWedding.addTask(new WeddingTask(\"Initial Task \" + i));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            internalWeddingList.add(singleWedding);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public ObservableList\u003cWedding\u003e getFilteredWeddingList() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return internalWeddingList;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"jamesberyl":6,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/DeleteWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiyanminoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingDate;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingLocation;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteWeddingCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiyanminoo"},"content":"    public void execute_validWeddingIdForWeddingDeleted_nonFiltered() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiyanminoo"},"content":"        // Non-filtered scenario: No filter is applied, so deletion should update the filtered lists to show","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiyanminoo"},"content":"        // all remaining items.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        WeddingName weddingName \u003d new WeddingName(\"Wedding Name\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        WeddingDate weddingDate \u003d new WeddingDate(\"01-Jan-2026\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        WeddingLocation weddingLocation \u003d new WeddingLocation(\"Paris\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(weddingId, weddingName, weddingDate, weddingLocation);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiyanminoo"},"content":"        // No filter applied, so the filtered wedding list equals the full list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        deleteWeddingCommand.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiyanminoo"},"content":"        // Since the only wedding was deleted, the filtered wedding list should be empty.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiyanminoo"},"content":"        // And, since no persons were added, the filtered person list should be empty too.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredWeddingList().isEmpty());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiyanminoo"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiyanminoo"},"content":"    public void execute_filteredWeddingDeletion_resultsInEmptyLists() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiyanminoo"},"content":"        WeddingId targetWeddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiyanminoo"},"content":"        Wedding targetWedding \u003d new Wedding(targetWeddingId,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingName(\"Target Wedding\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingDate(\"01-Jan-2026\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingLocation(\"Paris\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiyanminoo"},"content":"        WeddingId otherWeddingId \u003d new WeddingId(\"W67890\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiyanminoo"},"content":"        Wedding otherWedding \u003d new Wedding(otherWeddingId,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingName(\"Other Wedding\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingDate(\"05-Feb-2026\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiyanminoo"},"content":"                new WeddingLocation(\"London\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiyanminoo"},"content":"        model.addWedding(targetWedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiyanminoo"},"content":"        model.addWedding(otherWedding);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiyanminoo"},"content":"        // Add a person tagged with the target wedding.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiyanminoo"},"content":"        Tag targetTag \u003d new Tag(targetWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiyanminoo"},"content":"        Person taggedPerson \u003d new Person(new Name(\"Alice\"), new Phone(\"12345678\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiyanminoo"},"content":"                new Email(\"alice@example.com\"), new Role(\"Guest\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiyanminoo"},"content":"                new Address(\"123 Street\"), Set.of(targetTag));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiyanminoo"},"content":"        model.addPerson(taggedPerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weiyanminoo"},"content":"        // Apply filter: show only weddings with targetWeddingId and persons with the corresponding tag.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredWeddingList(w -\u003e w.getWeddingId().equals(targetWeddingId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredPersonList(p -\u003e p.getTags().contains(targetTag));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weiyanminoo"},"content":"        // Ensure that the filter is active.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weiyanminoo"},"content":"        assertEquals(1, model.getFilteredWeddingList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiyanminoo"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiyanminoo"},"content":"        // Delete the target wedding.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiyanminoo"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(targetWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiyanminoo"},"content":"        deleteWeddingCommand.execute(model);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiyanminoo"},"content":"        // Since a filter was active, deleteWedding command resets the filtered lists.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weiyanminoo"},"content":"        // Hence, the filtered wedding and person lists should be empty.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiyanminoo"},"content":"        assertTrue(model.getFilteredWeddingList().isEmpty());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weiyanminoo"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weiyanminoo"},"content":"        // Check that the non-deleted wedding is still in the data.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredWeddingList(w -\u003e true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weiyanminoo"},"content":"        assertEquals(1, model.getFilteredWeddingList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiyanminoo"},"content":"        assertEquals(otherWedding, model.getFilteredWeddingList().get(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weiyanminoo"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_invalidWeddingId_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, () -\u003e deleteWeddingCommand.execute(model));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_validWeddingId_tagRemovedFromAllContacts() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W123456\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        WeddingName weddingName \u003d new WeddingName(\"Wedding Name\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        WeddingDate weddingDate \u003d new WeddingDate(\"01-Jan-2026\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        WeddingLocation weddingLocation \u003d new WeddingLocation(\"Paris\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Wedding wedding \u003d new Wedding(weddingId, weddingName, weddingDate, weddingLocation);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.addWedding(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Tag tag \u003d new Tag(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(new Name(\"John Doe\"), new Phone(\"12345678\"), new Email(\"johndoe@example.com\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new Role(\"Guest\"), new Address(\"123 Street\"), Set.of(tag));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.addPerson(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        deleteWeddingCommand.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weiyanminoo"},"content":"        assertTrue(model.getFilteredPersonList().get(0).getTags().isEmpty());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void equals_differentObjectSameId_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand1 \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand2 \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(deleteWeddingCommand1.equals(deleteWeddingCommand2));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void equals_differentObjectDifferentId_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        WeddingId weddingId1 \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        WeddingId weddingId2 \u003d new WeddingId(\"W67890\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand1 \u003d new DeleteWeddingCommand(weddingId1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand2 \u003d new DeleteWeddingCommand(weddingId2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(deleteWeddingCommand1.equals(deleteWeddingCommand2));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(deleteWeddingCommand.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        DeleteWeddingCommand deleteWeddingCommand \u003d new DeleteWeddingCommand(weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(deleteWeddingCommand.equals(new Object()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":56,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/UntagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalWeddings.WEDDING_ONE;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiyanminoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiyanminoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagMatchesPredicate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UntagCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiyanminoo"},"content":"    private Model model;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiyanminoo"},"content":"    private final WeddingId defaultWeddingId \u003d WEDDING_ONE.getWeddingId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiyanminoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiyanminoo"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiyanminoo"},"content":"        // Initialize with an empty AddressBook to isolate this test.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiyanminoo"},"content":"        model \u003d new ModelManager(new seedu.address.model.AddressBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiyanminoo"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(outOfBoundIndex, defaultWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_personNotTagged_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // create a person with weddingId not tagged","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.addPerson(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandFailure(untagCommand, model, UntagCommand.MESSAGE_PERSON_NOT_TAGGED);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_untagPerson_keepsFilterApplied() throws Exception {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiyanminoo"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W1\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personWithTag \u003d new PersonBuilder()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withName(\"Test Person\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(\"W1\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(personWithTag);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiyanminoo"},"content":"        // Apply a filter so that only persons with tag \"W1\" are shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new TagMatchesPredicate(weddingId));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiyanminoo"},"content":"        Person filteredPerson \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiyanminoo"},"content":"                .filter(p -\u003e p.getName().toString().equals(\"Test Person\"))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiyanminoo"},"content":"                .findFirst()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiyanminoo"},"content":"                .orElseThrow(() -\u003e new AssertionError(\"Test Person not found in filtered list\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiyanminoo"},"content":"        assertTrue(filteredPerson.getTags().contains(new Tag(weddingId)));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiyanminoo"},"content":"        // Execute the untag command using the filtered index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiyanminoo"},"content":"        int filteredIndex \u003d model.getFilteredPersonList().indexOf(filteredPerson);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(Index.fromZeroBased(filteredIndex), weddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiyanminoo"},"content":"        untagCommand.execute(model);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiyanminoo"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiyanminoo"},"content":"        // Reapply the same filter.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredPersonList(new TagMatchesPredicate(weddingId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiyanminoo"},"content":"        // The person should no longer be in the filtered list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiyanminoo"},"content":"        assertFalse(model.getFilteredPersonList().contains(filteredPerson));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiyanminoo"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weiyanminoo"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weiyanminoo"},"content":"    public void execute_nonFilteredUntagPerson_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weiyanminoo"},"content":"        // Non-filter mode: start with an empty AddressBook.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weiyanminoo"},"content":"        model \u003d new ModelManager(new seedu.address.model.AddressBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weiyanminoo"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W1\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiyanminoo"},"content":"        Tag expectedTag \u003d new Tag(weddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiyanminoo"},"content":"        // Create a person with tag \"W1\" and add to the model.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiyanminoo"},"content":"        Person personWithTag \u003d new PersonBuilder()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiyanminoo"},"content":"                .withName(\"Test Person\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiyanminoo"},"content":"                .withTags(\"W1\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiyanminoo"},"content":"                .build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiyanminoo"},"content":"        model.addPerson(personWithTag);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiyanminoo"},"content":"        // Ensure non-filter mode by resetting the filtered list to show all persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiyanminoo"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weiyanminoo"},"content":"                .filter(p -\u003e p.getName().toString().equals(\"Test Person\"))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiyanminoo"},"content":"                .findFirst()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weiyanminoo"},"content":"                .orElseThrow(() -\u003e new AssertionError(\"Test Person not found in full list\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiyanminoo"},"content":"        assertTrue(originalPerson.getTags().contains(expectedTag));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiyanminoo"},"content":"        // Execute the untag command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, weddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        untagCommand.execute(model);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weiyanminoo"},"content":"        // After untagging in non-filter mode, the command resets the filtered list to show all.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weiyanminoo"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weiyanminoo"},"content":"        Person updatedPerson \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weiyanminoo"},"content":"                .filter(p -\u003e p.getName().toString().equals(\"Test Person\"))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weiyanminoo"},"content":"                .findFirst()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weiyanminoo"},"content":"                .orElseThrow(() -\u003e new AssertionError(\"Test Person not found after untagging\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weiyanminoo"},"content":"        assertFalse(updatedPerson.getTags().contains(expectedTag));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, defaultWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(untagCommand.equals(untagCommand));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, defaultWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UntagCommand differentUntagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, new WeddingId(\"W54321\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(untagCommand.equals(differentUntagCommand));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, defaultWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(untagCommand.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weiyanminoo"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, defaultWeddingId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(untagCommand.equals(5));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"weiyanminoo":61,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/EditWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEDDING_DATE_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEDDING_LOCATION_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEDDING_NAME_DESC;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEDDING_DATE_JOHN;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEDDING_LOCATION_JOHN;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEDDING_NAME_JOHN;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GrassHeadd"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditWeddingCommand;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GrassHeadd"},"content":"import seedu.address.model.wedding.WeddingDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GrassHeadd"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GrassHeadd"},"content":"import seedu.address.model.wedding.WeddingLocation;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GrassHeadd"},"content":"import seedu.address.model.wedding.WeddingName;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditWeddingCommandParserTest {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditWeddingCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final EditWeddingCommandParser parser \u003d new EditWeddingCommandParser();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_WEDDING_NAME_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\", EditWeddingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding name","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" n/\" + VALID_WEDDING_NAME_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding date","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" d/\" + VALID_WEDDING_DATE_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding location","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" l/\" + VALID_WEDDING_LOCATION_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding name and date","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" n/\" + VALID_WEDDING_NAME_JOHN","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \" d/\" + VALID_WEDDING_DATE_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding name and location","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" n/\" + VALID_WEDDING_NAME_JOHN","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + \" l/\" + VALID_WEDDING_LOCATION_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding date and location","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" d/\" + VALID_WEDDING_DATE_JOHN","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + \" l/\" + VALID_WEDDING_LOCATION_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid index followed by valid wedding name, date and location","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\" + \" n/\" + VALID_WEDDING_NAME_JOHN + \" d/\" + VALID_WEDDING_DATE_JOHN","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \" l/\" + VALID_WEDDING_LOCATION_JOHN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GrassHeadd"},"content":"    public void parse_invalidFieldValues_failure() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GrassHeadd"},"content":"        // invalid wedding name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_NAME_DESC,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GrassHeadd"},"content":"                WeddingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GrassHeadd"},"content":"        // invalid wedding date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_DATE_DESC,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GrassHeadd"},"content":"                WeddingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GrassHeadd"},"content":"        // invalid wedding location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_LOCATION_DESC,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GrassHeadd"},"content":"                WeddingLocation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GrassHeadd"},"content":"        // valid index with invalid name and valid date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_NAME_DESC + \" d/\" + VALID_WEDDING_DATE_JOHN,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GrassHeadd"},"content":"                WeddingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GrassHeadd"},"content":"        // valid index with valid name and invalid date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1 n/\" + VALID_WEDDING_NAME_JOHN + INVALID_WEDDING_DATE_DESC,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GrassHeadd"},"content":"                WeddingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GrassHeadd"},"content":"        // valid index with invalid date and invalid location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_DATE_DESC + INVALID_WEDDING_LOCATION_DESC,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GrassHeadd"},"content":"                WeddingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GrassHeadd"},"content":"        // all fields invalid","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GrassHeadd"},"content":"        assertParseFailure(parser, \"W1\" + INVALID_WEDDING_NAME_DESC + INVALID_WEDDING_DATE_DESC","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GrassHeadd"},"content":"                + INVALID_WEDDING_LOCATION_DESC, WeddingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"GrassHeadd"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor descriptor \u003d new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"GrassHeadd"},"content":"            descriptor.setWeddingName(ParserUtil.parseWeddingName(VALID_WEDDING_NAME_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"GrassHeadd"},"content":"            descriptor.setWeddingDate(ParserUtil.parseWeddingDate(VALID_WEDDING_DATE_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"GrassHeadd"},"content":"            descriptor.setWeddingLocation(ParserUtil.parseWeddingLocation(VALID_WEDDING_LOCATION_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"), descriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1\" + \" n/\" + VALID_WEDDING_NAME_JOHN + \" d/\" + VALID_WEDDING_DATE_JOHN","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"GrassHeadd"},"content":"                + \" l/\" + VALID_WEDDING_LOCATION_JOHN, expectedCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"GrassHeadd"},"content":"    public void parse_oneFieldsSpecified_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"GrassHeadd"},"content":"        // name only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor nameDescriptor \u003d new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"GrassHeadd"},"content":"            nameDescriptor.setWeddingName(ParserUtil.parseWeddingName(VALID_WEDDING_NAME_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedNameCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"), nameDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 n/\" + VALID_WEDDING_NAME_JOHN, expectedNameCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"GrassHeadd"},"content":"        // date only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor dateDescriptor \u003d new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"GrassHeadd"},"content":"            dateDescriptor.setWeddingDate(ParserUtil.parseWeddingDate(VALID_WEDDING_DATE_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedDateCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"), dateDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 d/\" + VALID_WEDDING_DATE_JOHN, expectedDateCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"GrassHeadd"},"content":"        // location only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor locationDescriptor \u003d new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"GrassHeadd"},"content":"            locationDescriptor.setWeddingLocation(ParserUtil.parseWeddingLocation(VALID_WEDDING_LOCATION_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedLocationCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"), locationDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 l/\" + VALID_WEDDING_LOCATION_JOHN, expectedLocationCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"GrassHeadd"},"content":"    public void parse_multipleFieldsSpecified_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"GrassHeadd"},"content":"        // name and date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor nameAndDateDescriptor \u003d new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"GrassHeadd"},"content":"            nameAndDateDescriptor.setWeddingName(ParserUtil.parseWeddingName(VALID_WEDDING_NAME_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"GrassHeadd"},"content":"            nameAndDateDescriptor.setWeddingDate(ParserUtil.parseWeddingDate(VALID_WEDDING_DATE_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedNameAndDateCommand \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"GrassHeadd"},"content":"                new EditWeddingCommand(new WeddingId(\"W1\"), nameAndDateDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 n/\" + VALID_WEDDING_NAME_JOHN + \" d/\" + VALID_WEDDING_DATE_JOHN,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"GrassHeadd"},"content":"                expectedNameAndDateCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"GrassHeadd"},"content":"        // name and location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor nameAndLocationDescriptor \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"GrassHeadd"},"content":"                new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"GrassHeadd"},"content":"            nameAndLocationDescriptor.setWeddingName(ParserUtil.parseWeddingName(VALID_WEDDING_NAME_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"GrassHeadd"},"content":"            nameAndLocationDescriptor.setWeddingLocation(ParserUtil.parseWeddingLocation(VALID_WEDDING_LOCATION_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedNameAndLocationCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"GrassHeadd"},"content":"                nameAndLocationDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 n/\" + VALID_WEDDING_NAME_JOHN + \" l/\" + VALID_WEDDING_LOCATION_JOHN,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"GrassHeadd"},"content":"                expectedNameAndLocationCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"GrassHeadd"},"content":"        // date and location","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand.EditWeddingDescriptor dateAndLocationDescriptor \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"GrassHeadd"},"content":"                new EditWeddingCommand.EditWeddingDescriptor();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"GrassHeadd"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"GrassHeadd"},"content":"            dateAndLocationDescriptor.setWeddingDate(ParserUtil.parseWeddingDate(VALID_WEDDING_DATE_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"GrassHeadd"},"content":"            dateAndLocationDescriptor.setWeddingLocation(ParserUtil.parseWeddingLocation(VALID_WEDDING_LOCATION_JOHN));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"GrassHeadd"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"GrassHeadd"},"content":"            throw new IllegalArgumentException(\"Invalid test data\", pe);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"GrassHeadd"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"GrassHeadd"},"content":"        EditWeddingCommand expectedDateAndLocationCommand \u003d new EditWeddingCommand(new WeddingId(\"W1\"),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"GrassHeadd"},"content":"                dateAndLocationDescriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"GrassHeadd"},"content":"        assertParseSuccess(parser, \"W1 d/\" + VALID_WEDDING_DATE_JOHN + \" l/\" + VALID_WEDDING_LOCATION_JOHN,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"GrassHeadd"},"content":"                expectedDateAndLocationCommand);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_invalidWeddingId_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String userInput \u003d \"a n/John\u0027s Wedding d/2023-12-25 l/Beach\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_noFieldsSpecified_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String userInput \u003d \"1\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parse_duplicatePrefixes_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String userInput \u003d \"1 n/John\u0027s Wedding n/Another Wedding d/2023-12-25 l/Beach\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parse_noWeddingId_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        String userInput \u003d \"n/John\u0027s Wedding d/2023-12-25 l/Beach\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":118,"-":113}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Basic case","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(new WeddingId(VALID_TAG_AMY));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, VALID_TAG_AMY, expectedFilterCommand);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\t \" + VALID_TAG_AMY + \" \\t \", expectedFilterCommand);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Different wedding ID","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FilterCommand anotherExpectedCommand \u003d new FilterCommand(new WeddingId(VALID_TAG_BOB));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, VALID_TAG_BOB, anotherExpectedCommand);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(new WeddingId(VALID_TAG_AMY));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(new WeddingId(VALID_TAG_BOB));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(new WeddingId(VALID_TAG_AMY));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GrassHeadd"},"content":"        assertFalse(filterFirstCommand.equals(-1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GrassHeadd"},"content":"        assertFalse(filterFirstCommand.equals(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Different wedding ID -\u003e returns false","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GrassHeadd"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GrassHeadd"},"content":"    public void parse_negativeOrZeroWeddingId_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GrassHeadd"},"content":"        // Construct the expected error message that includes both constraints and usage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GrassHeadd"},"content":"        String expectedMessage \u003d WeddingId.MESSAGE_NEGATIVE_CONSTRAINTS + \"\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GrassHeadd"},"content":"                + FilterCommand.MESSAGE_USAGE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GrassHeadd"},"content":"        // Negative wedding ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GrassHeadd"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GrassHeadd"},"content":"                expectedMessage, () -\u003e parser.parse(\"W-1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GrassHeadd"},"content":"        // Zero wedding ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GrassHeadd"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GrassHeadd"},"content":"                expectedMessage, () -\u003e parser.parse(\"W0\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GrassHeadd"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GrassHeadd"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_multipleArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String userInput \u003d \"W12345 W67890\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_invalidWeddingId_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Arrange","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String userInput \u003d \"invalid_wedding_id\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":19,"-":81}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"glennliew"},"content":"    private static final String INVALID_NAME \u003d \"R!chel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"glennliew"},"content":"    private static final String INVALID_PHONE \u003d \"phone\"; // non-numeric characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Use a valid wedding id as the valid tag.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG \u003d \"W1\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // set of valid wedding ids for tag-related tests.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Set\u003cWeddingId\u003e VALID_WEDDING_IDS \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new HashSet\u003c\u003e(Collections.singletonList(new WeddingId(VALID_TAG)));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    // Tag-related tests now require a set of valid WeddingIds.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG, VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(new WeddingId(VALID_TAG));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG, VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG + WHITESPACE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(new WeddingId(VALID_TAG));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace, VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG, INVALID_TAG),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                VALID_WEDDING_IDS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), VALID_WEDDING_IDS).isEmpty());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG), VALID_WEDDING_IDS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(new WeddingId(VALID_TAG))));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"-":201,"glennliew":3}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.wedding.WeddingId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsTagCommand() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        WeddingId weddingId \u003d new WeddingId(\"W12345\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String userInput \u003d \"1 W12345\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        TagCommand expectedCommand \u003d new TagCommand(targetIndex, weddingId);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String userInput \u003d \"a W12345\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_invalidWeddingId_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String userInput \u003d \"1 invalidWeddingId\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingParts_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"W12345\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no weddingId specified","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        assertParseFailure(parser, \"1 someInvalidArgs\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"jamesberyl":2,"-":53}},{"path":"src/test/java/seedu/address/logic/parser/UntagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.wedding.WeddingId;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UntagCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private UntagCommandParser parser \u003d new UntagCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsUntagCommand() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // Valid index and wedding ID","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1 W123\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new UntagCommand(INDEX_FIRST_PERSON, new WeddingId(\"W123\")));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_emptyOrMissingArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Empty string","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Only index","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Invalid index","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a W123\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"                String.format(MESSAGE_INVALID_INDEX, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"    public void parse_invalidWeddingId_throwsParseException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"        // Wedding ID \"123\" is invalid because it doesn\u0027t start with \u0027W\u0027","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        ParseException pe1 \u003d assertThrows(ParseException.class, () -\u003e parser.parse(\"1 123\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(WeddingId.MESSAGE_CONSTRAINTS, pe1.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"        // Wedding ID \"W\" is invalid because it doesn\u0027t have any digits following \u0027W\u0027","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"        ParseException pe2 \u003d assertThrows(ParseException.class, () -\u003e parser.parse(\"1 W\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(WeddingId.MESSAGE_CONSTRAINTS, pe2.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_onlyWeddingId_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only wedding ID - this might need adjustment based on your parser implementation","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"W123\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"jamesberyl":12,"-":47}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gengyudong"},"content":"        assertTrue(Email.isValidEmail(\"as@bc.sg\")); // minimal","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gengyudong"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost.uk\")); // alphabets only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gengyudong"},"content":"        assertTrue(Email.isValidEmail(\"123@145.au\")); // numeric local part and domain name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gengyudong"},"content":"        Email email \u003d new Email(\"valid@email.com\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gengyudong"},"content":"        assertTrue(email.equals(new Email(\"valid@email.com\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gengyudong"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email.sg\")));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":82,"gengyudong":6}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Arul S/O Siva\")); // names with \u0027son of (s/o)\u0027","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Mary-Anne Lim\")); // names with hyphens","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Steve O\u0027Donnell\")); // names with apostrophe","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GrassHeadd"},"content":"        assertTrue(Name.isValidName(\"J@mes Bond\")); //name with @","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":1,"-":63}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"glennliew"},"content":"        assertFalse(Phone.isValidPhone(\"+ 12345\")); // space after plus sign","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"glennliew"},"content":"        assertFalse(Phone.isValidPhone(\"1234567890123456789012345678901234\")); // exceeds 32 characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"glennliew"},"content":"        assertFalse(Phone.isValidPhone(\"+65 1234 5678\")); // more than one space","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"glennliew"},"content":"        assertTrue(Phone.isValidPhone(\"+65 93121534\")); // with country code and space","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"glennliew"},"content":"        assertTrue(Phone.isValidPhone(\"+6593121534\")); // with country code without space","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":59,"glennliew":5}},{"path":"src/test/java/seedu/address/model/wedding/WeddingDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class WeddingDateTest {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // Passing null to the constructor should throw a NullPointerException","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new WeddingDate(null));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidWeddingDate_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // Date should not be in the past","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // For instance, \"2024-12-01\" is in the past, so it is invalid","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String invalidDate \u003d \"2024-12-01\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e new WeddingDate(invalidDate));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isValidDate_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // The static method should throw if passed null","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e WeddingDate.isValidDate(null));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void isValidDate_validFormats_returnsTrue() throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01-Jan-2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01/Jan/2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01.Jan.2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01 Jan 2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026-01-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026/01/01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026.01.01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026 01 01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026-Jan-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026/Jan/01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026.Jan.01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026 Jan 01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026Jan01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026-January-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026/January/01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026.January.01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026 January 01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"2026January01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01-2026-01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01/2026/01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01.2026.01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01 2026 01\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01-01-2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01/01/2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01.01.2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01 01 2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01012026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01-Jan-2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01/Jan/2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01.Jan.2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01 Jan 2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01Jan2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01-January-2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01/January/2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01.January.2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01 January 2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(WeddingDate.isValidDate(\"01January2026\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toString_sameValue_equals() throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        WeddingDate date \u003d new WeddingDate(\"20-Dec-2025\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(\"20-Dec-2025\", date.toString());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void equals_sameValue_returnsTrue() throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        WeddingDate date1 \u003d new WeddingDate(\"20-Dec-2025\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        WeddingDate date2 \u003d new WeddingDate(\"20-Dec-2025\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(date1, date2);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(date1.hashCode(), date2.hashCode());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals_differentValue_returnsFalse() throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        WeddingDate date1 \u003d new WeddingDate(\"20-Dec-2025\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        WeddingDate date2 \u003d new WeddingDate(\"21-Dec-2025\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertNotEquals(date1, date2);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gengyudong"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gengyudong"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gengyudong"},"content":"    public void isValidDate_pastDate_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gengyudong"},"content":"        String pastDate \u003d \"2020-01-01\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gengyudong"},"content":"        assertThrows(ParseException.class, () -\u003e WeddingDate.isValidDate(pastDate));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gengyudong"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"-":102,"gengyudong":7}},{"path":"src/test/java/seedu/address/model/wedding/WeddingIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class WeddingIdTest {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new WeddingId(null));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidWeddingId_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // Must start with \u0027W\u0027 followed by digits.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // For example, \"WABC\" or \"1W5\" is invalid.","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidId \u003d \"Wabc\";","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new WeddingId(invalidId));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidWeddingId_invalidFormats_returnsFalse() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Missing \u0027W\u0027","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"1\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // Lowercase \u0027w\u0027","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"w5\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Letters after W","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"Wabc\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // No digits after W","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"W\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Empty string","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Whitespace only","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"  \"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GrassHeadd"},"content":"        // Contains special characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GrassHeadd"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"W@1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GrassHeadd"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GrassHeadd"},"content":"    public void negativeOrZeroWeddingId_throwsIllegalArgumentException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GrassHeadd"},"content":"        // Negative number","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GrassHeadd"},"content":"        assertFalse(WeddingId.isValidWeddingId(\"W-1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void isValidWeddingId_validFormats_returnsTrue() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Single digit","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(WeddingId.isValidWeddingId(\"W1\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Multiple digits","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(WeddingId.isValidWeddingId(\"W42\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Large number","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(WeddingId.isValidWeddingId(\"W9999\"));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toString_sameValue_equals() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        WeddingId id \u003d new WeddingId(\"W10\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"W10\", id.toString());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void equals_sameValue_returnsTrue() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        WeddingId id1 \u003d new WeddingId(\"W10\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        WeddingId id2 \u003d new WeddingId(\"W10\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(id1, id2);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(id1.hashCode(), id2.hashCode());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals_differentValue_returnsFalse() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        WeddingId id1 \u003d new WeddingId(\"W10\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        WeddingId id2 \u003d new WeddingId(\"W11\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertNotEquals(id1, id2);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"GrassHeadd":6,"-":74}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"glennliew"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"glennliew"},"content":"    private static final String INVALID_NAME \u003d \"R!chel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"glennliew"},"content":"    private static final String INVALID_PHONE \u003d \"ab123\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ROLE \u003d \"florist!\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROLE, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ROLE, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ROLE,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ROLE, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROLE, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"-":131,"glennliew":3}}]
