[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# TeamScape Developer Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Table of Contents  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"- [Acknowledgements](#acknowledgements)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"- [Setting up, getting started](#setting-up-getting-started)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"- [Design](#design)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  - [Architecture](#architecture)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  - [UI component](#ui-component)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - [Logic component](#logic-component)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  - [Model component](#model-component)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  - [Storage component](#storage-component)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  - [Common classes](#common-classes)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"- [Implementation](#implementation)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  - [Proposed Undo/redo feature](#proposed-undoredo-feature)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  - [Implementation of Task Feature](#Implementation-of-Task-Feature)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"- [Appendix: Requirements](#appendix-requirements)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - [Product scope](#product-scope)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  - [User stories](#user-stories)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  - [Use cases](#use-cases)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  - [Glossary](#glossary)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  - [Launch and shutdown](#launch-and-shutdown)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  - [Deleting a person](#deleting-a-person)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  - [Saving data](#saving-data)  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"[_AB3_](docs\\_markbind\\layouts\\default.md)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103-F09-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, `TaskCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"For example, the `AddressBookParser` will route `task` commands to `TaskCommandParser`, which parses the input and creates a `TaskCommand` object. The `TaskCommand` class implements the `Command` interface and defines the execution logic for adding tasks to a person.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `TaskStatus` enum provides a standardized way to represent the state of a task, namely `YET_TO_START`, `IN_PROGRESS`, and `COMPLETED`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Implementation of Task Feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"#### Overview","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"The task feature allows users to assign and manage tasks for individual team members. Each `Person` object can contain multiple `Task` instances, each having a description, status, and optional due date.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"#### Task Status Enum","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"We use an `enum TaskStatus` to define task states:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"- `YET_TO_START`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"- `IN_PROGRESS`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"- `COMPLETED`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"#### Commands","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"| Command      | Description                         |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"|--------------|-------------------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `task`       | Adds a task to a person             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `deltask`    | Deletes a task from a person        |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `setduedate` | Sets a due date for a specific task |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `updatetask` | Updates a task for a person         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `listtasks`  | Lists tasks for a specific person   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `report`     | Generates a task completion summary |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"#### Key Implementation Notes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"- Tasks are embedded inside the `Person` model.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"- `JsonAdaptedPerson` serializes/deserializes the `tasks` list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"- Tasks are displayed in the UI when `listtasks` is used.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"- All task-related commands extend `Command` and use dedicated parsers.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"#### Task Structure","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/TaskModelClassDiagram.puml\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"#### Task Command Execution Flow","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/TaskCommandSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"* has a need to manage a small team","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"* need efficient way to track and manage team members\u0027 progress and status","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"* does not require online syncing functionality","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"* does not require multi-user interactions","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Value proposition**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"* help users to categorize members by position, grade, skills, and department for easy tracking","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"* help users to assign tasks, break them into subtasks, and track completion as a percentage","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"* generate overall statistics for individual members and teams, offering insights into progress and efficiency","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"| Priority | As a …​      | I want to …​                                                                                 | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"|----------|--------------|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | add a member, his/her position, department, roles                                            | start tracking my team member progress.                                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | remove inactive team members                                                                 | keep the team database clean and up-to-date.                                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Jeremiah33-3"},"content":"| `* * *`  | team manager | add a task/subtask under a member                                                            | ensure clarity in responsibilities.                                              |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | be able to mark the task as completed/in-progress/yet-to-start                               | check the status of my tasks.                                                    |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | set due dates for the tasks                                                                  | know what time each task need to be completed by.                                |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | receive a summary of task statuses                                                           | stay informed.                                                                   |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"| `* * *`  | team manager | quickly search for members’ contacts by name                                                 | call them easily if there is an urgency.                                         |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"| `* * *`  | user         | access interactive tutorials or help pop-ups                                                 | quickly learn how to use the app’s features effectively.                         |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"| `* *`    | team manager | identify gaps in skills required for the Task and the members/departments assigned to it     | assign more people to the Task to fill up the skill gap.                         |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"| `* *`    | team manager | search for tasks sorted by their priority levels                                             | know which tasks need immediate attention.                                       |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* *`    | team manager | search for tasks by their assigned deadline                                                  | search for tasks by their assigned deadline.                                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `* *`    | team manager | filter team members by their availability (sorting by number of tasks)                       | assign tasks only to those who are not overloaded.                               |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"| `* *`    | team manager | edit the position, department, roles of my team members                                      | easily organise my team structure when there is a change.                        |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"| `* *`    | team manager | add skills required for a task                                                               | know which members/department to assign the task to.                             |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"| `* *`    | team manager | set priority levels for tasks                                                                | I knows which task need immediate attention and which task can be handled later. |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"| `* *`    | team manager | set task dependencies (e.g. Task B can only start after Task A is completed)                 | know if the task have been completed in the right order.                         |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"| `* *`    | team manager | see the task completion percentages (no. of subtasks completed out of total no. of subtasks) | easily gauge progress and identify any bottlenecks.                              |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"| `* *`    | team manager | bulk import member details via a CSV file                                                    | save time when adding multiple members.                                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"| `* *`    | team manager | generate a report showing the team\u0027s overall task completion rate                            | present it to stakeholders.                                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"| `* *`    | team manager | color-code tasks by priority level                                                           | easily differentiate between critical and low-priority tasks.                    |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"| `* *`    | team manager | set reminders for upcoming deadlines                                                         | ensure my team stays on track and meets important deadlines.                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"| `* *`    | team manager | receive notifications when a task is overdue                                                 | address delays immediately.                                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"| `* *`    | team manager | quickly search for team members by their progress completion state                           | identify and help those who are lagging behind.                                  |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"| `*`      | team manager | add a task/subtask to a department                                                           | mass assign tasks to members in that department.                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"| `*`      | team manager | create subtasks for a  task                                                                  | break down large tasks into smaller, manageable pieces.                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"| `*`      | team manager | track the hours worked by each member on tasks                                               | analyze productivity and effort.                                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"| `*`      | team manager | see statistics comparing the progress of different departments/members                       | identify high-performing department/member.                                      |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"| `*`      | user         | customize themes and layouts                                                                 | the app feels personal and meets my visual preferences.                          |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"| `*`      | user         | take an interactive app tour                                                                 | learn features without external help.                                            |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"| `*`      | user         | undo accidental deletions                                                                    | critical data isn’t lost.                                                        |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"| `*`      | user         | enable keyboard shortcuts                                                                    | frequent actions (e.g., Ctrl+S to save) are faster.                              |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `manager`, unless specified otherwise)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Use case: UC1 List members**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"1.  Manager requests to list members","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of members","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Use case: UC2 List tasks**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"1.  Manager requests to list tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of tasks.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Use case: UC3 Delete a member**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"1.  Manager \u003cins\u003elist members (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"2.  Manager requests to delete a specific member in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"3.  AddressBook deletes the member","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Use case: UC4 Edit a member**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"1.  Manager \u003cins\u003elist members (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"2.  Manager requests to edit a specific member in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"3.  AddressBook edits the member","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"* 3b. Edit command received invalid inputs.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"    * 3b1. AddressBook shows an error message","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Use case: UC5 Add a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"1.  Manager requests to add a member to the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"2.  AddressBook adds the member","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"* 2a. The details provided are invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"**Use case: UC6 Add a task under a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"1.  Manager \u003cins\u003elist members (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"2.  Manager \u003cins\u003elist tasks (UC2)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"3.  Manager requests to add a task under a member.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"4.  AddressBook adds a task under a member.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"* 4a. The given index for either task is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"    * 4a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"* 4b. The given index for either member is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"    * 4b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"**Use case: UC7 Changes a task under a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"1.  Manager \u003cins\u003elist members (UC1)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"2.  Manager \u003cins\u003elist tasks (UC2)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"3.  Manager requests to change a task under a member.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"4.  AddressBook changes a task under a member.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"* 4a. The given index for either task is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"    * 4a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"* 4b. The given index for either member is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"    * 4b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"**Use case: UC8 Create a task**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. Manager requests to create a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"2. AddressBook creates a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"* 2a. Invalid task input.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"**Use case: UC9 Set a due date for a task**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. Manager \u003cins\u003elist tasks (UC2)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"2. Manager requests to set a due date for a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"3. AddressBook set a due date for a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"    * 4a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"* 3b. The due date format is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"    * 4b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"**Use case: UC10 Mark the task as completed, in progress, or yet to start**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"1.  Manager \u003cins\u003elist tasks (UC2)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"2.  Manager requests to set a due date for a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"3.  AddressBook set a due date for a task.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"* 3b. The due date format is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"    * 4b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"**Use case: UC11 Find and return members’ contact by name**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"1.  Manager requests to find the member by name.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"2.  AddressBook finds the member.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"* 2a. Empty member list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"* 2b. No member of the name found.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"    * 2b1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"**Use case: UC12 Generate task status report**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"1.  Manager requests to generate tasks report.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"2.  AddressBook generate tasks report and show.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"* 2a. Empty task list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"**Use case: UC13 Use of help command**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"1.  Manager requests to get help.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"2.  AddressBook prompts manager.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"3.  Manager input a prompt.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"4.  AddressBook shows user guide.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"    Steps 3 and 4 are repeated until Manager requests to exit help mode.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"5.  User requests to exit help mode.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"6.  AddressBook exits help mode.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"* 4a. Invalid input from user.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"    * 4a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"* *a. At any time, manager chooses to exit help mode","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"    * *a1. AddressBook exits help mode.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"Based on the latest implementation of TeamScape:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. Should work on any mainstream OS with specifically Java 17.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"2. Should support up to 1 person and their associated tasks with minimal performance degradation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"3. Application should function fully offline with no internet connection.  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"4. Command input should be case-insensitive and provide informative error messages on incorrect format.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"5. Should recover the last known good state if the app crashes unexpectedly.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"6. Should allow real-time UI refresh when task status or due date is updated.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"7. Should complete most operations (e.g., add, delete, update) within 200ms. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"8. Should retrieve and display 1000 records within 1.5s. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"9. Should not allow duplicate tasks to be added for a person.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"10. Should not allow duplicate persons.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"11. Should highlight invalid commands with contextual prompts and guide users on correct input format. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"12. Should ensure extensibility of task logic by modularizing command parser, validator, and model layers. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"13. Should keep memory usage under 200MB during peak load.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"- **CLI**: Command Line Interface. A text-based way to interact with the app (e.g., `add n/John`). ","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"- **Mainstream OS**: Windows, Linux, Unix, macOS.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"- **Private contact detail**: A contact detail not meant to be shared (e.g., personal phone number).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"- **Task**: A unit of work assigned to a team member, which can have subtasks and deadlines.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"- **Subtask**: A smaller component of a task (e.g., \"Design UI mockups\" as part of \"Develop login feature\").","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"- **Model**: The component managing data (e.g., storing team members and tasks).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"- **UI**: User Interface. The visual part of the app (e.g., buttons, lists).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"- **Storage**: Component that saves/loads data to/from the hard drive.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"- **API**: Application Programming Interface. How components interact (e.g., `Logic.java` defines the API for executing commands).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"- **JSON**: A file format used to store data (e.g., team members are saved in `addressbook.json`).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"Jeremiah33-3"},"content":"- **AddressBook**: The system in which the users will interact with to save contacts into and assign tasks to contacts.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"Jeremiah33-3"},"content":"- **Displayed person list**: The current list of persons displayed to users by GUI; could be a result of `list` or `find` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"   2. Double-click the jar file or run file with `java -jar teamscape.jar`(recommended) \u003cbr\u003e Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"### Adding a person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"- List all persons using the `list` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"- Ensure there are no persons with the same details you\u0027re about to add.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"1. Test case: `add n/John Doe p/98765432 e/johnd@example.com tele/@john pos/student a/John street, block 123, #01-01` ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"   - New contact is added to the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"   - Details of the added contact shown in the status message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"   - Contact list updated with the new person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"2. Test case: `add n/John Doe p/98765432` (missing required fields)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"   - No person is added. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"   - Error details shown in the status message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"   - Member list not updated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"3. Other incorrect add commands to try:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"- `add n/John Doe` (missing required fields)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"- `add p/98765432 e/johnd@example.com` (missing name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"- `add n/John Doe p/invalid e/invalid` (invalid formats)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"  **Expected**: Similar to previous error case.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"### Adding a task to a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"- Have at least one person in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"- View this person using `list` or `find` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"1. Test case: `task 1 task/Prepare report, 2025-10-10 10:00, in progress` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"   - Task is added to the first person\u0027s task list. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"   - Status message shows task was added. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"2. Test case: `task 1 task/Book venue` (minimal task) \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"   - Task is added with default \"yet to start\" status. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"   - Status message confirms addition.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"3. Test case: `task 0 task/Invalid task` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"   - No task added. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"   - Error shown for invalid index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"### Editing a person","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"- Have at least one person in the address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"- View this person using `list` command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. Test case: `edit 1 p/91234567 e/johndoe@example.com` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"   - First person\u0027s phone and email are updated. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"-"},"content":"   - Status message shows changes.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"2. Test case: `edit 1 t/` (clearing tags) \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"-"},"content":"   - All tags removed from first person. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"   - Status message confirms changes.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"3. Test case: `edit 0 n/Invalid` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"   - No changes made. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"   - Error shown for invalid index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"-"},"content":"### Setting due date for a task","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"- Have at least one person with at least one task.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"1. Test case: `setduedate 1 taskint/1 due/2026-02-28 23:59` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"   - Due date set for first task of first person. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"-"},"content":"   - Status message confirms change.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"-"},"content":"2. Test case: `setduedate 1 taskint/1 due/2020-01-01 00:00` (past date) \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"-"},"content":"   - No changes made. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"-"},"content":"   - Error message shown.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"-"},"content":"3. Other incorrect commands to try: `setduedate 1 taskint/1 due/2025-10-10`, `setduedate 1 /taskint 1 due/2025-10-10 23:59` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"-"},"content":"   - Error message similar to that of point 2. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"-"},"content":"### Listing tasks assigned to a member","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"- Have at least one person with tasks.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"1. Test case: `listtasks 1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"   - Tasks for first person displayed. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"-"},"content":"   - Status bar shows command success.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"-"},"content":"2. Test case: `listtasks 0`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"   - No tasks shown.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"-"},"content":"   - Error about invalid index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"-"},"content":"### Deleting a task under a member","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"- Have at least one person with at least one task.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"1. Test case: `deltask 1 1` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"-"},"content":"   - First task of first person deleted. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"-"},"content":"   - Status message confirms deletion.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"-"},"content":"2. Test case: `deltask 1 0` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"-"},"content":"   - No task deleted. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"   - Error about invalid index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"### Updating task for a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"- Have at least one person with at least one task.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"1. Test case: `updatetask 1 1 completed` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"   - First task of first person updated as completed from its previous state. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"   - Successful message confirms update and shows new task details.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"2. Test case: `updatetask 3 2 project milestone 1 sprint, 2025-05-12 10:00, in progress` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"   - Third task of second person updated as completed from its previous state. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"Jeremiah33-3"},"content":"   - Successful message to confirm update and shows new task details.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"Jeremiah33-3"},"content":"3. Test case: `updatetask 3 2 project milestone 1 sprint, invalidDateorTaskStatus` \u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"   **Expected**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"    - No change to the specified task","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"    - Error message shows specific error.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"### Finding persons","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"- Have several persons with different names, tags, and tasks.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"1. Test case: `find n/ john` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"-"},"content":"   - Persons with \"john\" in name displayed. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"   - Status shows number of matches.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"2. Test case: `find t/ friend` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"   - Persons with \"friend\" tag displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"3. Test case: `find task/ report` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"   - Persons with tasks containing \"report\" displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"4. Test case: `find n/ john t/ friend` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"   - Persons matching both name and tag criteria displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"### Generating Task Status Report","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"**Prerequisites:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"- Have several persons with tasks in different statuses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"- Tasks should be categorized into statuses: Yet to Start, In Progress, and Completed.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"- Person should have at least one task to be included in the report.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"1. Test case: `report` \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"**Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"   - A summary report is displayed, grouping tasks by their status (Yet to Start, In Progress, Completed).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"   - Each status section shows the number of person with tasks in parentheses.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"   - Person under each status have their tasks listed in the order they were assigned.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"   - Status bar confirms successful execution","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"## **Appendix: Effort**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"While this project is a spin-off from AB3, the project was harder due to the introduction of new functions and the purpose of helping team manager to manage tasks. Hence, we needed to create more entities (Classes) to encapsulate attributes and relationships between entity interactions. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"Major challenges encountered includes collaboration between team members especially when there are frequent merge conflicts, introduction of new classes and commands which requires deep understanding of AB3 dependencies, and consensus about certain feature design/UI within the team.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"As per our implementation, we achieved a brand new Command Line Interface (CLI) application which not only helps users to manage contacts and their information, our target audience, team leaders, can also reap the benefits of task management. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"Using of app, managers can assign multiple tasks under a specific member, check the tasks information such as due date and status under the member, remove task, and generate a holistic task report to check progress and status. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"_coming soon after PE-D_.","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":5,"-":902}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# TeamScape User Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jeremiah33-3"},"content":"Are you a manager of small teams looking to record tasks remotely? Look no further, presenting to you... TEAMSCAPE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jeremiah33-3"},"content":"TeamScape is a **desktop app for managing contacts and the tasks under it, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast and confident to remember command format, TeamScape can get your contact/task management tasks done faster than traditional GUI apps. Adopted from AB3. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"2. [Features](#features)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    - [Viewing Help](#viewing-help--help)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    - [Adding a Person](#adding-a-person-add)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    - [Adding a Task to a Member](#adding-a-task-to-a-member-task)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    - [Listing All Persons](#listing-all-persons--list)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    - [Editing a Person](#editing-a-person--edit)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    - [Setting Due Date for a Task](#setting-due-date-for-a-task--setduedate)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    - [Listing Tasks Assigned to a Member](#listing-tasks-assigned-to-a-member--listtasks)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    - [Deleting a Task Under a Member](#deleting-a-task-under-a-member--deltask)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    - [Updating Status for a Task](#updating-status-for-a-task--mark)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    - [Locating Persons by Name, Tags, or Tasks](#locating-persons-by-name-tags-or-tasks-find)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    - [Generate Task Status Report](#generate-task-status-report--report)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    - [Deleting a Person](#deleting-a-person--delete)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    - [Clearing All Entries](#clearing-all-entries--clear)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    - [Exiting the Program](#exiting-the-program--exit)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    - [Saving the Data](#saving-the-data)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    - [Editing the Data File](#editing-the-data-file)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"4. [Known Issues](#known-issues)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103-F09-4/tp/releases).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jeremiah33-3"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your address book.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jeremiah33-3"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar TeamScape.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com tele/@john pos/student a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Parameters can be in any order, unless specified by the particular command.\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL tele/TELEGRAM pos/POSITION a/ADDRESS [t/TAG]…​ [s/SKILL]…​ [o/OTHER]…​ [task/TASK]…​`","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"**Note:** ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"- Task can have no due date and status (ie task/barbeque or task/barbeque, 2025-05-28 14:00 or task/barbeque, in progress) the default status would be yet to start.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"- Repeated names are treated as the same person, regardless of case or other details, and will not be added again. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"- A person can have any number of tags, skills, others and tasks (including 0). See \"Adding a task to a member\" section for more information regarding task creation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com tele/@john pos/student a/John street, block 123, #01-01 task/barbeque, 2025-05-28 14:00, yet to start`","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com tele/@besty pos/teacher a/Newgate Prison p/12345678 t/criminal task/barbeque, 2025-05-28 14:00, yet to start`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  ![input for \u0027add n/Betsy Crowe t/friend e/betsycrowe@example.com tele/@besty pos/teacher a/Newgate Prison p/1234567 t/criminal task/barbeque, 2025-05-28 14:00, yet to start\u0027](images/addBestyCroweInput.png)","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"  ![result for \u0027add n/Betsy Crowe t/friend e/betsycrowe@example.com tele/@besty pos/teacher a/Newgate Prison p/1234567 t/criminal task/barbeque, 2025-05-28 14:00, yet to start\u0027](images/addBestyCroweResult.png)","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Adding a task to a member: `task`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"Adds a task to the specified member.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `task PERSON_INDEX task/TASK_DESCRIPTION[, DUE_DATE[, TASK_STATUS]`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"**Note:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"- Task description is mandatory.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"- Task Status can be one of: `yet to start`, `in progress`, `completed`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"- Date and task status are optional. If omitted, status defaults to `yet to start`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"- All task details must be separated by commas `,` in the correct order: description, due date (if any), ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"and then status (if any).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"- There can only exist 1 task with a unique task description. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"In other words, another task with the same description cannot be added.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"- There can only exist 1 `task/` prefix for each TaskCommand to be added.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"- When only 1 task field is provided (e.g. `completed`), and it matches with a valid task status or due date format, ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"it will be interpreted strictly as such regardless of the intention.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"**Limitations:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"- When invalid date format is provided for the task description field, it is accepted as valid as there is no restriction of","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"  input standardisation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"- When there exists multiple errors with the command input by the user, the error message will only show up one by one at a time.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"**Related:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"- See \"Setting due date for a task\" section for more information on due dates.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `task 3 task/Prepare report, 2025-10-10 10:00, in progress`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `task 3 task/Book venue`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  ![taskBasilFullCommand.jpeg](images/taskBasilFullCommand.jpeg)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jeremiah33-3"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [tele/TELEGRAM] [pos/POSITION] [a/ADDRESS] [t/TAG]…​ [s/SKILL]…​ [o/OTHER]…​ [task/TASK]…​`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* At least one of the fields must be provided. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    specifying any tags after it. Same for skills, others and tasks.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"  ![input for \u0027edit 2 n/Betsy Crower t/\u0027](images/editBestyCroweInput.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"  ![result for \u0027edit 2 n/Betsy Crower t/\u0027](images/editBestyCroweResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"### Setting due date for a task : `setduedate`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Set a due date for a specific task of a member.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `setduedate PERSON_INDEX taskint/TASK_INDEX due/yyyy-mm-dd hh:mm`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"* Set the due date for a task at `TASK_INDEX` of the person at the specified `PERSON_INDEX`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `TASK_INDEX` refers to the index number shown in the task list of a member.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* Due date must be inputted in the format of `yyyy-mm-dd hh:mm`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"* Due date cannot be in the past.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"* If due date is already set as such, user will be notified gracefully.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Jeremiah33-3"},"content":"* Special case for some months having different last date: set to the last day of that month if user types in a date more than the valid date of that month (e.g. 29th Feb during a non-leap year -\u003e set to 28th Feb and notify user by printing the set date on the GUI).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"* `setduedate 2 taskint/1 due/2026-02-29 23:59`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"![set due date for a task](images/setduedate.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Listing tasks assigned to a member : `listtasks`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"Lists the tasks of","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"the specified person from the address book.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `listtasks INDEX`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"* Lists the person at the specified `INDEX`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Jeremiah33-3"},"content":"* `listtasks 2` list the tasks the 2nd person in the address book/displayed person list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Jeremiah33-3"},"content":"* Type `find n/ Alex` then enter, followed by `listtasks 1` lists the tasks of 1st person in the results of the `find` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Example results for member without task:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* ![listtasks for person without a task](images/listtasksAlex.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"Example results for member with tasks:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"* ![listtasks for person with a task](images/listtasksBetsy.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Deleting a task under a member : `deltask`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"Delete a specific task of a member.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `deltask PERSON_INDEX TASK_INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Delete a task at `TASK_INDEX` of the person at the specified `PERSON_INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"* `TASK_INDEX` refers to the index number shown in the task list of a member.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `deltask 3 2` deletes the second task of the third person in the displayed person list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"* ![input for `deltask 3 2`](images/deltaskInput.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* ![output for `deltask 3 2`](images/deltaskOutput.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Updating a task under a member : `updatetask`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"Update a specific task of a member. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"You may update the description, due date, and/or status.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"Format: `updatetask PERSON_INDEX TASK_INDEX [TASK_DESCRIPTION][, DUE_DATE][, STATUS]`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Note:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"- Task parameters must be separated by commas (`,`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"- Task order matters, from top to bottom:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    - **Description** _(if any)_","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    - **Due Date** *(if any)* – Format: `yyyy-MM-dd HH:mm`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    - **Status** *(if any)* – One of: `yet to start`, `in progress`, `completed` (case-insensitive)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Limitations:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"- When invalid date format is provided for the task description field, it is accepted as valid as there is no restriction of ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"input standardisation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"- When there exists multiple errors with the command input by the user, the error message will only show up one by one at a time.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Examples: (all possible combinations)**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"- `updatetask 1 2 Fix backend bug`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"  Updates only the task description.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"- `updatetask 1 2 Fix backend bug, 2025-10-31 14:00`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  Updates the task description and due date.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"- `updatetask 1 2 2025-12-12 23:59, completed`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  Updates the due date and status.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"- `updatetask 1 2 completed`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  Updates only the task status.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"- `updatetask 1 2 Fix backend bug, 2025-10-31 14:00, completed`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"  Updates all three fields.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Extended Example**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"* `listtasks 2` followed by `updatetask 3 2 in progress` sets the task status for the second task of the third person in the displayed person list to be **in progress**.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"![updatetaskBetsy_taskdesc\u0026duedate.jpeg](images/updatetaskBetsy_taskdesc%26duedate.jpeg)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"![updatetaskBetsy_duedate\u0026taskstatus.jpeg](images/updatetaskBetsy_duedate%26taskstatus.jpeg)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Locating persons by name, tags, or tasks: `find`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"Finding persons by name:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"Format: `find n/ KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"* `find n/ john` returns `john` and `John Doe`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* `find n/ alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/ bernice alex\u0027](images/findAlexBerniceResult.png)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"Finding persons by tags:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"Format: `find t/ KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"Finds persons whose tags contain any of the given keywords.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"Example Usage:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"* `find t/ colleagues friend` returns all Persons tagged with colleagues or friends","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"  ![result for \u0027find t/ colleagues friend\u0027](images/findColleaguesFriendResult.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"Finding persons by tasks:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"Format: `find task/ KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Finds persons whose task description contain any of the given keywords.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"Example Usage:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* `find task/ barbeque` returns all Persons with task descriptions containing the word \u0027bbq\u0027.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"  ![result for \u0027find task/ barbeque\u0027](images/findbbqResult.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"Finding persons by multiple conditions (limited to name, tags and tasks):","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"Format: `find n/ KEYWORD [MORE_KEYWORDS] t/ KEYWORD [MORE_KEYWORDS] task/ KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"This finds all persons who meets all the conditions in the specified name, tags, and task fields.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"Intuitively, you can think about this as an \u0027AND\u0027 operation. For example, if you want to find all interns that are assigned with the barbeque task, you can use the example command shown below.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"Example Usage:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"* `find t/ intern task/ bbq` returns all Persons with tags interns AND task descriptions containing the word \u0027bbq\u0027.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"  ![result for \u0027find t/ intern task/ bbq\u0027](images/findInternBBQResult.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Generate Task Status Report : `report`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"Shows a summary of all tasks and their completion statuses. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"* Users are associated with their tasks under their status","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"* report command is case-insensitive","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"* The report is divided into three sections: ‘Yet to Start’, ‘In Progress’, and ‘Completed’","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"* The number in parentheses next to each task status represents how many person have tasks in that status.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"* Under each task status, the names of the person are listed, followed by their assigned tasks in parentheses","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"* If a person has multiple tasks, they are displayed in the order the tasks were added","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"* For example, if Bryan first received the task \u0027Sleep\u0027 and later received the task \u0027Swim\u0027, the report will show:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"Bryan (Sleep, Swim), indicating that \u0027Sleep\u0027 was assigned first, followed by \u0027Swim\u0027","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"Format: `report`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"Example output:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"![generate report for one task](images/report1.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"![generate report for one task](images/report2.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"![generate report for one task](images/report3.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"* `find n/ Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"| Action           | Format, Examples                                                                                                                                                                                                                                                      |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"| **Add**          | `add n/NAME p/PHONE_NUMBER e/EMAIL tele/TELEGRAM pos/POSITION a/ADDRESS [t/TAG]…​ [s/SKILL]…​ [o/OTHER]…​ [task/TASK]…​`\u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com tele/@john pos/student a/John street task/barbeque, 2025-05-28 14:00, yet to start` |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"| **Clear**        | `clear`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"| **Delete**       | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                                   |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"| **Edit**         | `edit INDEX n/NAME p/PHONE_NUMBER e/EMAIL tele/TELEGRAM pos/POSITION a/ADDRESS [t/TAG]…​ [s/SKILL]…​ [o/OTHER]…​ [task/TASK]…​`\u003cbr\u003e e.g., `edit 2 n/Betsy Crower t/`                                                                                                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"| **Find (Name)**  | `find n/ KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find n/ alex david`                                                                                                                                                                                                      |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"| **Find (Tag)**   | `find t/ KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find t/ colleagues friends`                                                                                                                                                                                              |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"| **Add Task**     | `task INDEX task/TASK_DESCRIPTION[, DUE_DATE, TASK_STATUS]` \u003cbr\u003e e.g., `task 3 task/Book venue`                                                                                                                                                                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"| **Delete task**  | `deltask PERSON_INDEX TASK_INDEX`\u003cbr\u003e e.g., `deltask 3 2`                                                                                                                                                                                                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"| **Update Task**  | `updatetask PERSON_INDEX TASK_INDEX [TASK_DESCRIPTION][, DUE_DATE][, TASK_STATUS]`\u003cbr\u003e e.g., `updatetask 1 1 2025-12-31 23:59, completed`                                                                                                                             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"| **List**         | `list`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"| **List Tasks**   | `listtasks INDEX`\u003cbr\u003e e.g., `listtasks 2`                                                                                                                                                                                                                             |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"| **Set Due Date** | `setduedate PERSON_INDEX taskint/TASK_INDEX due/yyyy-mm-dd hh:mm`\u003cbr\u003e e.g., `setduedate 2 taskint/1 due/2025-10-10 23:59`                                                                                                                                             |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"| **Report**       | `report`                                                                                                                                                                                                                                                              |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"| **Help**         | `help`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"| **Exit**         | `exit`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":9,"-":417}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OTHER;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.other.Other;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.skill.Skill;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"Parameters: INDEX (must be a positive integer) (at least one of the following fields present) \\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jeremiah33-3"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_SKILL + \"SKILL]...\\n\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_OTHER + \"OTHER]...\\n\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TASK + \"TASK]...\\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the edit command to update the specified person\u0027s details in the address book.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws CommandException if the index is invalid or the edited person is a duplicate.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Position updatedPosition \u003d editPersonDescriptor.getPosition().orElse(personToEdit.getPosition());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Set\u003cSkill\u003e updatedSkills \u003d editPersonDescriptor.getSkills().orElse(personToEdit.getSkills());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cOther\u003e updatedOthers \u003d editPersonDescriptor.getOthers().orElse(personToEdit.getOthers());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e updatedTasks \u003d editPersonDescriptor.getTasks().orElse(personToEdit.getTasks());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String updatedTaskStatus \u003d personToEdit.getTaskStatus(); // Retain or update as needed","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedPosition, updatedAddress,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                updatedTags, updatedSkills, updatedOthers, updatedTaskStatus, updatedTasks);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Telegram telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Position position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Set\u003cSkill\u003e skills;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Set\u003cOther\u003e others;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Constructs an empty EditPersonDescriptor.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * @param toCopy The descriptor to copy values from.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            setSkills(toCopy.skills);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            setOthers(toCopy.others);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            setTasks(toCopy.tasks);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, telegram, position, address, tags, skills,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    others, tasks);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.position \u003d position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * Sets {@code skills} to this object\u0027s {@code skills}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code skills} is used internally.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public void setSkills(Set\u003cSkill\u003e skills) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            this.skills \u003d (skills !\u003d null) ? new HashSet\u003c\u003e(skills) : null;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code skills} is null.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cSkill\u003e\u003e getSkills() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return (skills !\u003d null) ? Optional.of(Collections.unmodifiableSet(skills)) : Optional.empty();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"         * Sets {@code others} to this object\u0027s {@code others}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code others} is used internally.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public void setOthers(Set\u003cOther\u003e others) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"            this.others \u003d (others !\u003d null) ? new HashSet\u003c\u003e(others) : null;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable other set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code others} is null.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cOther\u003e\u003e getOthers() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return (others !\u003d null) ? Optional.of(Collections.unmodifiableSet(others)) : Optional.empty();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"         * Sets {@code tasks} to this object\u0027s {@code tasks}.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tasks} is used internally.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            this.tasks \u003d (tasks !\u003d null) ? new ArrayList\u003c\u003e(tasks) : null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable task list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tasks} is null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public Optional\u003cList\u003cTask\u003e\u003e getTasks() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"            return (tasks !\u003d null) ? Optional.of(Collections.unmodifiableList(tasks)) : Optional.empty();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherEditPersonDescriptor.telegram)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(position, otherEditPersonDescriptor.position)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(skills, otherEditPersonDescriptor.skills)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(others, otherEditPersonDescriptor.others)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tasks, otherEditPersonDescriptor.tasks);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"                    .add(\"position\", position)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    .add(\"skills\", skills)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"                    .add(\"others\", others)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"                    .add(\"tasks\", tasks)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":7,"-":359}},{"path":"src/main/java/seedu/address/logic/commands/ReportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.task.TaskStatus;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Generates a summary report of task completion statuses.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ReportCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"report\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task Status Report Generated!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    public static final String MESSAGE_NO_TASKS \u003d \"No Tasks Found\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e completedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e inProgressTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e yetToStartTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // For each person, check if they have tasks in each category.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (Person person : personList) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            boolean hasCompleted \u003d false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            boolean hasInProgress \u003d false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            boolean hasYetToStart \u003d false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            for (Task task : person.getTasks()) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                if (task.getStatus().equals(TaskStatus.COMPLETED)) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    hasCompleted \u003d true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                } else if (task.getStatus().equals(TaskStatus.IN_PROGRESS)) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    hasInProgress \u003d true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                } else if (task.getStatus().equals(TaskStatus.YET_TO_START)) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    hasYetToStart \u003d true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (hasCompleted) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                completedTasks.add(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (hasInProgress) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                inProgressTasks.add(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (hasYetToStart) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                yetToStartTasks.add(person);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bkkuan"},"content":"        // If all task lists are empty, then no tasks exist.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bkkuan"},"content":"        if (completedTasks.isEmpty() \u0026\u0026 inProgressTasks.isEmpty() \u0026\u0026 yetToStartTasks.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bkkuan"},"content":"            return new CommandResult(MESSAGE_NO_TASKS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS, completedTasks, inProgressTasks, yetToStartTasks);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"bkkuan":7,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/SetDueDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jeremiah33-3"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_TASK_FOR_MEM;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DUE_DATE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Set the due date for a task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SetDueDateCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"setduedate\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \": Set a due date for the task under a member.\\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Parameters: PERSON INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_TASK_INDEX + \"TASK INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_DUE_DATE + \"DUE DATE (yyyy-mm-dd HH:mm)\" + \"\\n\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TASK_INDEX + \" 1 \"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_DUE_DATE + \"2025/01/01 23:59\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS_SET_DUE_DATE \u003d \"Task due date updated to %1$s! Person: %2$s\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index taskIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Index personIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a SetDueDateCommand to set a due date for the specified task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param dueDate The new due date for the particular task.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param taskIndex The index of the particular task.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param personIndex The index of the person to whom this task belongs.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public SetDueDateCommand(LocalDateTime dueDate, Index taskIndex, Index personIndex) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e updatedTasks \u003d new ArrayList\u003c\u003e(personToEdit.getTasks());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jeremiah33-3"},"content":"        // Check if task index inputted is valid.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jeremiah33-3"},"content":"        checkTaskIndex(updatedTasks, personToEdit);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Update the due date for the specified task.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Task taskToUpdate \u003d updatedTasks.get(taskIndex.getZeroBased());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jeremiah33-3"},"content":"        checkDueDateValidity(taskToUpdate);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        taskToUpdate.setDueDate(dueDate);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Create a new Person with the updated tasks.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d editPerson(personToEdit, updatedTasks);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_SET_DUE_DATE,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                formatDueDate(), Messages.format(editedPerson)));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Person editPerson(Person personToEdit, List\u003cTask\u003e updatedTasks) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Person(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                personToEdit.getName(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                personToEdit.getPhone(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                personToEdit.getEmail(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                personToEdit.getTelegram(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                personToEdit.getPosition(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                personToEdit.getTags(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                personToEdit.getSkills(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                personToEdit.getOthers(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                personToEdit.getTaskStatus(),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                updatedTasks","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private String formatDueDate() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String formattedDueDate \u003d dueDate.format(displayFormatter);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return formattedDueDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jeremiah33-3"},"content":"    private void checkTaskIndex(List\u003cTask\u003e oldTaskList, Person person) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jeremiah33-3"},"content":"        if (oldTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new CommandException(String.format(MESSAGE_NO_TASK_FOR_MEM, person.getName()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jeremiah33-3"},"content":"        } else if (taskIndex.getZeroBased() \u003e\u003d oldTaskList.size()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jeremiah33-3"},"content":"                    taskIndex.getOneBased()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jeremiah33-3"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jeremiah33-3"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jeremiah33-3"},"content":"    private void checkDueDateValidity(Task taskToUpdate) throws CommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jeremiah33-3"},"content":"        if (taskToUpdate.getDueDate() !\u003d null \u0026\u0026 taskToUpdate.getDueDate().equals(dueDate)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new CommandException(String.format(\"Your due date is already: %s\", formatDueDate()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jeremiah33-3"},"content":"        } else if (dueDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new CommandException(\"Due date is in the past!\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jeremiah33-3"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jeremiah33-3"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof SetDueDateCommand)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        SetDueDateCommand otherCommand \u003d (SetDueDateCommand) other;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return taskIndex.equals(otherCommand.taskIndex)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 personIndex.equals(otherCommand.personIndex)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 dueDate.equals(otherCommand.dueDate);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"personIndex\", personIndex)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"taskIndex\", taskIndex)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"dueDate\", dueDate)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":21,"-":129}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OTHER;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.other.Other;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.skill.Skill;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_POSITION, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                PREFIX_SKILL, PREFIX_OTHER, PREFIX_TASK);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_POSITION,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                PREFIX_ADDRESS)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                PREFIX_TELEGRAM, PREFIX_POSITION);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cSkill\u003e skillList \u003d ParserUtil.parseSkills(argMultimap.getAllValues(PREFIX_SKILL));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Set\u003cOther\u003e otherList \u003d ParserUtil.parseOthers(argMultimap.getAllValues(PREFIX_OTHER));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e taskList \u003d ParserUtil.parseTasks(argMultimap.getAllValues(PREFIX_TASK)).stream().toList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set a default task status.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bkkuan"},"content":"        String taskStatus \u003d \"yet to start\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, telegram, position, address,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                tagList, skillList, otherList, taskStatus, taskList);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"bkkuan":1,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListMemberTasksCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ReportCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SetDueDateCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UpdateTaskCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new TaskCommandParser().parse(arguments);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case UpdateTaskCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new UpdateTaskCommandParser().parse(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListMemberTasksCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListMemberTasksCommandParser().parse(arguments);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case SetDueDateCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new SetDueDateCommandParser().parse(arguments);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ReportCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bkkuan"},"content":"            return new ReportCommand();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"bkkuan":1,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_TASK_DESC;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_DATE_FORMAT;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_TASK_STATUS;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TASK_FORMAT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DUE_DATE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.other.Other;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.skill.Skill;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.task.TaskStatus;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not an integer greater zero.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_STATUS_AS_DESCRIPTION \u003d","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \"Looks like you tried to supply a task status (\u0027%s\u0027) in the description field.\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Use a comma to separate them:\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"e.g., task/TASK_DESCRIPTION, %s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DATE_AS_DESCRIPTION \u003d","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \"Looks like you tried to supply a due date (\u0027%s\u0027) in the description field.\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Use a comma to separate them:\\n\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"e.g., task/TASK_DESCRIPTION, %s\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String position} into an {@code Position}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Position parsePosition(String position) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(position);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Parses a {@code String Skill} into a {@code Skill}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code skill} is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Skill parseSkill(String skill) throws ParseException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(skill);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String trimmedSkill \u003d skill.trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new Skill(trimmedSkill);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e skills} into a {@code Set\u003cSkill\u003e}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cSkill\u003e parseSkills(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(skills);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final Set\u003cSkill\u003e skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (String skillName : skills) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            skillSet.add(parseSkill(skillName));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return skillSet;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Parses a {@code String other} into a {@code Other}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code Other} is invalid.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public static Other parseOther(String other) throws ParseException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(other);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String trimmedOther \u003d other.trim();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return new Other(trimmedOther);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e others} into a {@code Set\u003cOther\u003e}.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static Set\u003cOther\u003e parseOthers(Collection\u003cString\u003e others) throws ParseException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(others);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        final Set\u003cOther\u003e otherSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        for (String other : others) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            otherSet.add(parseOther(other));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return otherSet;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Parses a {@code String task} into a {@code Task}.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code Task} is invalid.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        requireNonNull(task);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (task.trim().isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_EMPTY_TASK_DESC); //Edge case to ensure task/ is not empty","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        String[] taskDetails \u003d task.split(\",\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return switch (taskDetails.length) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        case 3 -\u003e parseThreeVariableTask(taskDetails[0].trim(), taskDetails[1].trim(), taskDetails[2].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        case 2 -\u003e parseTwoVariableTask(taskDetails[0].trim(), taskDetails[1].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        case 1 -\u003e parseOneVariableTask(taskDetails[0].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        default -\u003e throw new ParseException(MESSAGE_INVALID_TASK_FORMAT);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private static Task parseOneVariableTask(String taskDesc) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        validateTaskDescription(taskDesc);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String normalizedTaskDesc \u003d taskDesc.trim().toLowerCase();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        if (normalizedTaskDesc.equals(\"completed\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            || normalizedTaskDesc.equals(\"in progress\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            || normalizedTaskDesc.equals(\"yet to start\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_STATUS_AS_DESCRIPTION, taskDesc.trim(), taskDesc.trim()));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            LocalDateTime.parse(taskDesc.trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_DATE_AS_DESCRIPTION, taskDesc.trim(), taskDesc.trim()));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"            // Not a valid due date, continue","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new Task(taskDesc, TaskStatus.YET_TO_START, null);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private static Task parseTwoVariableTask(String taskDesc, String secondParameter) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        validateTaskDescription(taskDesc);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            LocalDateTime.parse(taskDesc.trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_DATE_AS_DESCRIPTION, taskDesc.trim(), taskDesc.trim()));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"            // not a date, continue","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"            TaskStatus taskStatus \u003d TaskStatus.fromString(secondParameter);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return new Task(taskDesc, taskStatus, null);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"                LocalDateTime dueDate \u003d parseAndValidateDueDate(secondParameter);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                return new Task(taskDesc, TaskStatus.YET_TO_START, dueDate);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e1) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    private static Task parseThreeVariableTask(String taskDesc, String dueDateString, String taskStatusString)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"        validateTaskDescription(taskDesc);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        validateDueDateAndStatus(dueDateString, taskStatusString, errorMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        if (!errorMessage.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"            throw new ParseException(errorMessage.toString().trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        LocalDateTime dueDate \u003d parseDueDateSilently(dueDateString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        TaskStatus taskStatus \u003d parseTaskStatusSilently(taskStatusString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return new Task(taskDesc, taskStatus, dueDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    private static void validateDueDateAndStatus(String duedateString, String taskStatusString,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"                                                 StringBuilder errorMessage) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"            parseAndValidateDueDate(duedateString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"            errorMessage.append(e.getMessage());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"            TaskStatus.fromString(taskStatusString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"            if (!errorMessage.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"                errorMessage.append(\"\\n\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            errorMessage.append(MESSAGE_INCORRECT_TASK_STATUS);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"    private static LocalDateTime parseDueDateSilently(String dueDateString) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"            return parseAndValidateDueDate(dueDateString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"            return null; // Validated earlier","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"    private static TaskStatus parseTaskStatusSilently(String taskStatusString) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"            return TaskStatus.fromString(taskStatusString);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return null; // Validated earlier","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tasks} into a {@code Set\u003cTask\u003e}.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public static Set\u003cTask\u003e parseTasks(Collection\u003cString\u003e tasks) throws ParseException {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"        final Set\u003cTask\u003e taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"        for (String task : tasks) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"            taskSet.add(parseTask(task));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return taskSet;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Parses the due date provided by the user from the given {@code ArgumentMultimap},","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * expecting the value associated with {@code PREFIX_DUE_DATE} to be in String format.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Jeremiah33-3"},"content":"     * For SetDueDateCommand.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * @param argMultimap The map containing argument prefixes and their corresponding values.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * @return The parsed {@code LocalDateTime} due date.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * @throws ParseException If the due date is not in the expected format.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDueDate(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"        LocalDateTime dueDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"        // handles parsing date","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"            String dateString \u003d argMultimap.getValue(PREFIX_DUE_DATE).get();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"            dueDate \u003d LocalDateTime.parse(dateString, INPUT_FORMATTER);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"        return dueDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * Handles edge case to ensure instance where task/ or taskdesc in task/taskdesc, ... is empty.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"     * @param taskDesc","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"     * @throws ParseException","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"    private static void validateTaskDescription(String taskDesc) throws ParseException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"        if (taskDesc.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_EMPTY_TASK_DESC);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"     * Parses and validates a due date string into a LocalDateTime.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"     * Throws a ParseException if the format is invalid or the date is in the past.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * @param dueDateString The due date string.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * @return A validated LocalDateTime object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * @throws ParseException if format is wrong or date is in the past.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseAndValidateDueDate(String dueDateString) throws ParseException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"        LocalDateTime dueDate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"            dueDate \u003d LocalDateTime.parse(dueDateString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"        if (dueDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Due date is in the past!\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"        return dueDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":1,"-":409}},{"path":"src/main/java/seedu/address/logic/parser/SetDueDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_DATE_FORMAT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_PREFIX;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DUE_DATE;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDueDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SetDueDateCommand;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new SetDueDateCommand object","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SetDueDateCommandParser implements Parser\u003cSetDueDateCommand\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public SetDueDateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TASK_INDEX, PREFIX_DUE_DATE);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jeremiah33-3"},"content":"        // Check for errors such as wrong prefix or missing prefix","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jeremiah33-3"},"content":"        checkArgLength(argMultimap);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index taskIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index personIndex;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDateTime dueDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            // handles non-numerical input for personIndex","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            // handles non-numerical input for taskIndex","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).orElseThrow(() -\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    new ParseException(\"Task index is required.\")));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(\"Invalid input: %s\\n%s\", pe.getMessage(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    SetDueDateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // handles where PREFIX_DUE_DATE is not present","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jeremiah33-3"},"content":"        checkDueDatePresence(argMultimap);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // handles parsing date","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            dueDate \u003d parseDueDate(argMultimap);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new SetDueDateCommand(dueDate, taskIndex, personIndex);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jeremiah33-3"},"content":"    private static void checkArgLength(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jeremiah33-3"},"content":"        if (argMultimap.getSize() \u003c 3) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new ParseException(MESSAGE_INCORRECT_PREFIX + \"\\n\" + SetDueDateCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jeremiah33-3"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jeremiah33-3"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jeremiah33-3"},"content":"    private static void checkDueDatePresence(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jeremiah33-3"},"content":"        if (!argMultimap.getValue(PREFIX_DUE_DATE).isPresent()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jeremiah33-3"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jeremiah33-3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetDueDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jeremiah33-3"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jeremiah33-3"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":16,"-":56}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.parseTask;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.other.Other;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.skill.Skill;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cTask\u003e emptyTaskList \u003d Collections.emptyList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    new Telegram(\"@alexY\"),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Position(\"Team Leader\"),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    getSkillSet(\"C Programming\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    getOtherSet(\"boss\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \"completed\",","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    getTask(\"barbeque, 2025-06-07 17:00, yet to start\")),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    new Telegram(\"@berniceY\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    new Position(\"Backend Developer\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    getSkillSet(\"java\", \"python\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    getOtherSet(\"\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \"in progress\",","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    getTask(\"house visit, 2025-06-07 19:00, yet to start\")),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    new Telegram(\"@charlotte\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    new Position(\"UI Developer\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    getSkillSet(\"json\", \"css\", \"html\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    getOtherSet(\"meet soon\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    \"yet to start\",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    getTask(\"neighbour, 2025-05-07 17:00, yet to start\")),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    new Telegram(\"@davidL\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    new Position(\"Sales Person\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    getSkillSet(\"marketing\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    getOtherSet(\"salesman\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    \"completed\",","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    getTask(\"outing, 2025-08-07 17:00, yet to start\")),","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    new Telegram(\"@irfan\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    new Position(\"Backend Developer\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    getSkillSet(\"java\", \"c\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    getOtherSet(\"\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    \"in progress\",","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jeremiah33-3"},"content":"                    getTask(\"outing, 2025-06-07 17:00, completed\")),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    new Telegram(\"@roy\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    new Position(\"team member\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"),","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    getSkillSet(\"\"),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    getOtherSet(\"\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bkkuan"},"content":"                    \"yet to start\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    emptyTaskList),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a skill set containing the list of strings given.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Set\u003cSkill\u003e getSkillSet(String... strings) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .map(Skill::new)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cOther\u003e getOtherSet(String... strings) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .map(Other::new)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Get a list of task given the descriptions provided.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param descriptions A variable number of tasks in string representation.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return A list of Task objects.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static List\u003cTask\u003e getTask(String... descriptions) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return Arrays.stream(descriptions)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .map(description -\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        return parseTask(description);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                })","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"bkkuan":1,"Jeremiah33-3":1,"-":140}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.other.Other;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.skill.Skill;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedSkill\u003e skills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedOther\u003e others \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"telegram\") String telegram,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"position\") String position,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"skills\") List\u003cJsonAdaptedSkill\u003e skills,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"others\") List\u003cJsonAdaptedOther\u003e others,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (skills !\u003d null) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.skills.addAll(skills);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (others !\u003d null) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            this.others.addAll(others);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            this.tasks.addAll(tasks);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        telegram \u003d source.getTelegram().value;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        position \u003d source.getPosition().value;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        skills.addAll(source.getSkills().stream()","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedSkill::new)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        others.addAll(source.getOthers().stream()","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedOther::new)","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        tasks.addAll(source.getTasks().stream()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final List\u003cSkill\u003e personSkills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (JsonAdaptedSkill skill : skills) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            personSkills.add(skill.toModelType());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final List\u003cOther\u003e personOthers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (JsonAdaptedOther other : others) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            personOthers.add(other.toModelType());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e personTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTask task : tasks) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            personTasks.add(task.toModelType()); // Convert each JsonAdaptedTask to Task","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    Position.class.getSimpleName()));","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cSkill\u003e modelSkills \u003d new HashSet\u003c\u003e(personSkills);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final Set\u003cOther\u003e modelOthers \u003d new HashSet\u003c\u003e(personOthers);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // Provide a default task status string, e.g., \"not started\"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bkkuan"},"content":"        String defaultTaskStatus \u003d \"yet to start\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTelegram, modelPosition, modelAddress, modelTags,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                modelSkills, modelOthers, defaultTaskStatus, personTasks);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"bkkuan":1,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/SetDueDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.formatDueDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.SetDueDateCommand.MESSAGE_SUCCESS_SET_DUE_DATE;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"class SetDueDateCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private LocalDateTime newDueDate;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setUp() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // A new model for test date","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(SampleDataUtil.getSampleAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        newDueDate \u003d LocalDateTime.parse(\"2027-01-01T23:59\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void execute_validIndexes_success() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        SetDueDateCommand command \u003d new SetDueDateCommand(newDueDate, INDEX_FIRST_TASK, INDEX_SECOND_PERSON);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d SampleDataUtil.getSamplePersons()[1];","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e updatedTasks \u003d personToEdit.getTasks();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Task taskToUpdate \u003d updatedTasks.get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        taskToUpdate.setDueDate(newDueDate);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                personToEdit.getName(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                personToEdit.getPhone(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                personToEdit.getEmail(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                personToEdit.getTelegram(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                personToEdit.getPosition(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                personToEdit.getTags(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                personToEdit.getSkills(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                personToEdit.getOthers(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                personToEdit.getTaskStatus(),","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                updatedTasks","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedResult \u003d String.format(MESSAGE_SUCCESS_SET_DUE_DATE,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                formatDueDate(newDueDate), Messages.format(editedPerson));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResult, expectedModel);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jeremiah33-3"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jeremiah33-3"},"content":"    void execute_pastDueDate_throwsCommandException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jeremiah33-3"},"content":"        // illegal to set yet-to-start/in-progress task to be completed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jeremiah33-3"},"content":"        LocalDateTime pastDueDate \u003d LocalDateTime.parse(\"2025-01-01T12:00\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jeremiah33-3"},"content":"        SetDueDateCommand command \u003d new SetDueDateCommand(pastDueDate, INDEX_FIRST_TASK, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jeremiah33-3"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jeremiah33-3"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jeremiah33-3"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Index outOfBoundsPersonIndex \u003d Index.fromZeroBased(10);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        SetDueDateCommand command \u003d new SetDueDateCommand(newDueDate, INDEX_FIRST_TASK, outOfBoundsPersonIndex);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Index outOfBoundsTaskIndex \u003d Index.fromZeroBased(10);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        SetDueDateCommand command \u003d new SetDueDateCommand(newDueDate, outOfBoundsTaskIndex, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void equals_test() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        SetDueDateCommand command1 \u003d new SetDueDateCommand(newDueDate, INDEX_FIRST_TASK, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        SetDueDateCommand command2 \u003d new SetDueDateCommand(newDueDate, INDEX_FIRST_TASK, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":8,"-":89}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jeremiah33-3"},"content":"    public static final Index INDEX_COMPLETED_TASK_PERSON \u003d Index.fromOneBased(5);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05","isFullCredit":false}],"authorContributionMap":{"Jeremiah33-3":1,"-":13}}]
